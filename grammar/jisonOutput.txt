Processing grammar.
$accept(0)
$end(1)
error(2)
es(3)
e(4)
declaration-statement(5)
COLON_IDENTIFIER(6)
COLON(7)
IDENTIFIER_WITH_TEMPLATE(8)
BOOLEAN_LITERAL(9)
TRUE(10)
FALSE(11)
literal(12)
REAL_LITERAL(13)
INTEGER_LITERAL(14)
STRING_LITERAL(15)
CHARACTER_LITERAL(16)
NULL(17)
namespace-name(18)
namespace-or-type-name(19)
type-name(20)
DOUBLE_COLON(21)
IDENTIFIER_WITH_KEYWORD(22)
DOT(23)
IDENTIFIER(24)
TEMPLATE(25)
EMPTY_TEMPLATE(26)
LT(27)
GT(28)
STARS(29)
STAR(30)
type(31)
non-array-type(32)
array-type(33)
type-with-interr(34)
INTERR(35)
SBYTE(36)
BYTE(37)
SHORT(38)
USHORT(39)
INT(40)
UINT(41)
LONG(42)
ULONG(43)
CHAR(44)
FLOAT(45)
DOUBLE(46)
DECIMAL(47)
BOOL(48)
OBJECT(49)
STRING(50)
VOID(51)
rank-specifiers(52)
rank-specifier(53)
OPEN_BRACKET(54)
dim-separators(55)
CLOSE_BRACKET(56)
COMMA(57)
variable-reference(58)
expression(59)
argument-list(60)
argument(61)
REF(62)
OUT(63)
primary-expression(64)
primary-no-array-creation-expression(65)
array-creation-expression(66)
lambda-expression(67)
cast-expression(68)
parenthesized-expression(69)
double-colon-access(70)
member-access(71)
invocation-expressions(72)
element-access(73)
this-access(74)
base-access(75)
post-increment-expression(76)
post-decrement-expression(77)
delegate-creation-expression(78)
object-creation-expression(79)
typeof-expression(80)
sizeof-expression(81)
checked-expression(82)
unchecked-expression(83)
OP_DBLPTR(84)
block(85)
DELEGATE(86)
delegate-expression(87)
type-expression-list(88)
dbl-expression-list(89)
OPEN_PARENS(90)
CLOSE_PARENS(91)
expression-list(92)
formal-parameter-list(93)
OP_PTR(94)
keyword-invocation(95)
DEFAULT(96)
invocation-expression(97)
AWAIT(98)
THIS(99)
BASE(100)
OP_INC(101)
OP_DEC(102)
type-with-identifier(103)
NEW(104)
IDENTIFIER_WITH_DOT(105)
block-expression-with-brace(106)
argument-list-with-braces(107)
argument-list-with-brace(108)
OPEN_BRACE(109)
CLOSE_BRACE(110)
STACKALLOC(111)
array-initializer(112)
TYPEOF(113)
SIZEOF(114)
CHECKED(115)
UNCHECKED(116)
unary-expression(117)
pre-increment-expression(118)
pre-decrement-expression(119)
PLUS(120)
OP_COALESCING(121)
MINUS(122)
BANG(123)
TILDE(124)
expression-with-comma(125)
multiplicative-expression(126)
DIV(127)
PERCENT(128)
additive-expression(129)
shift-expression(130)
OP_LEFT_SHIFT(131)
RIGHT_SHIFT(132)
relational-expression(133)
OP_LE(134)
OP_GE(135)
IS(136)
AS(137)
equality-expression(138)
OP_EQ(139)
OP_NE(140)
and-expression(141)
AMP(142)
exclusive-or-expression(143)
CARET(144)
inclusive-or-expression(145)
BITWISE_OR(146)
conditional-and-expression(147)
OP_AND(148)
conditional-or-expression(149)
OP_OR(150)
conditional-expression(151)
assignment(152)
assignment-operator(153)
block-expression(154)
block-expression-list-unit(155)
block-expression-list(156)
ASSIGN(157)
OP_ADD_ASSIGNMENT(158)
OP_SUB_ASSIGNMENT(159)
OP_MULT_ASSIGNMENT(160)
OP_DIV_ASSIGNMENT(161)
OP_MOD_ASSIGNMENT(162)
OP_AND_ASSIGNMENT(163)
OP_OR_ASSIGNMENT(164)
OP_XOR_ASSIGNMENT(165)
OP_LEFT_SHIFT_ASSIGNMENT(166)
RIGHT_SHIFT_ASSIGNMENT(167)
constant-expression(168)
boolean-expression(169)
statement(170)
labeled-statement(171)
embedded-statement(172)
empty-statement(173)
statement-expression(174)
SEMICOLON(175)
selection-statement(176)
iteration-statement(177)
jump-statement(178)
try-statement(179)
checked-statement(180)
unchecked-statement(181)
lock-statement(182)
using-statement(183)
unsafe-statement(184)
fixed-statement(185)
modifiers(186)
FIXED(187)
local-variable-declarators(188)
UNSAFE(189)
statement-list(190)
switch-labels(191)
local-variable-declaration(192)
local-constant-declaration(193)
local-variable-declarator(194)
local-variable(195)
local-variable-initializer(196)
CONST(197)
constant-declarators(198)
constant-declarator(199)
if-statement(200)
switch-statement(201)
IF(202)
ELSE(203)
SWITCH(204)
switch-block(205)
switch-sections(206)
switch-section(207)
switch-label(208)
CASE(209)
while-statement(210)
do-statement(211)
for-statement(212)
foreach-statement(213)
WHILE(214)
DO(215)
FOR(216)
for-initializer(217)
for-condition(218)
for-iterator(219)
statement-expression-list(220)
FOREACH(221)
IN(222)
break-statement(223)
continue-statement(224)
goto-statement(225)
return-statement(226)
throw-statement(227)
YIELD(228)
BREAK(229)
CONTINUE(230)
GOTO(231)
RETURN(232)
THROW(233)
TRY(234)
catch-clauses(235)
finally-clause(236)
specific-catch-clauses(237)
general-catch-clause(238)
specific-catch-clause(239)
CATCH(240)
FINALLY(241)
LOCK(242)
USING(243)
resource-acquisition(244)
variable-initializer-list(245)
variable-initializer(246)
global-attributes(247)
global-attribute-sections(248)
global-attribute-section(249)
global-attribute-target-specifier(250)
attribute-list(251)
global-attribute-target(252)
ASSEMBLY(253)
MODULE(254)
attributes(255)
attribute-sections(256)
attribute-section(257)
attribute-target-specifier(258)
attribute-target(259)
FIELD(260)
EVENT(261)
METHOD(262)
PARAM(263)
PROPERTY(264)
TYPE(265)
attribute(266)
attribute-name(267)
attribute-arguments(268)
positional-argument-list(269)
named-argument-list(270)
positional-argument(271)
attribute-argument-expression(272)
named-argument(273)
delegate-declaration(274)
where-base(275)
enum-declaration(276)
ENUM(277)
enum-body(278)
enum-base(279)
enum-member-declarations(280)
enum-member-declaration(281)
interface-declaration(282)
INTERFACE(283)
interface-body(284)
interface-base(285)
interface-type-list(286)
interface-member-declarations(287)
interface-member-declaration(288)
interface-method-declaration(289)
interface-property-declaration(290)
interface-event-declaration(291)
interface-indexer-declaration(292)
interface-accessors(293)
GET(294)
SET(295)
struct-declaration(296)
STRUCT(297)
struct-body(298)
struct-interfaces(299)
struct-member-declarations(300)
struct-member-declaration(301)
constant-declaration(302)
field-declaration(303)
method-declaration(304)
property-declaration(305)
event-declaration(306)
indexer-declaration(307)
operator-declaration(308)
constructor-declaration(309)
static-constructor-declaration(310)
type-declaration(311)
compilationUnit(312)
namespace-member-declarations(313)
EOF(314)
namespace-member-declaration(315)
class-declaration(316)
modifier(317)
ASYNC(318)
PUBLIC(319)
PARTIAL(320)
PROTECTED(321)
INTERNAL(322)
PRIVATE(323)
ABSTRACT(324)
SEALED(325)
STATIC(326)
READONLY(327)
VOLATILE(328)
VIRTUAL(329)
OVERRIDE(330)
EXTERN(331)
CLASS(332)
class-body(333)
class-base(334)
where-units(335)
where-unit(336)
where-names(337)
where-name(338)
WHERE(339)
class-member-declarations(340)
class-member-declaration(341)
destructor-declaration(342)
member-name(343)
variable-declarators(344)
variable-declarator(345)
method-header(346)
method-body(347)
fixed-parameters(348)
parameter-array(349)
fixed-parameter(350)
ADD(351)
REMOVE(352)
PARAMS(353)
parameter-modifier(354)
accessor-declarations(355)
get-accessor-declaration(356)
set-accessor-declaration(357)
event-accessor-declarations(358)
add-accessor-declaration(359)
remove-accessor-declaration(360)
indexer-declarator(361)
operator-declarator(362)
unary-operator-declarator(363)
binary-operator-declarator(364)
conversion-operator-declarator(365)
OPERATOR(366)
overloadable-operator(367)
overloadable-unary-operator(368)
overloadable-binary-operator(369)
IMPLICIT(370)
EXPLICIT(371)
constructor-declarator(372)
constructor-initializer(373)

Item sets
------

item set 0 
$accept -> .compilationUnit $end #lookaheads= $end
compilationUnit -> .
compilationUnit -> .namespace-member-declarations EOF
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
namespace-member-declaration -> .statement
namespace-member-declaration -> .type-declaration
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"compilationUnit":1,"namespace-member-declarations":2,"namespace-member-declaration":3,"statement":4,"type-declaration":5,"labeled-statement":6,"declaration-statement":7,"embedded-statement":8,"class-declaration":9,"struct-declaration":10,"interface-declaration":11,"enum-declaration":12,"delegate-declaration":13,"IDENTIFIER_WITH_KEYWORD":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"CLASS":30,"attributes":31,"modifiers":32,"STRUCT":33,"INTERFACE":34,"ENUM":35,"DELEGATE":36,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":51,"WHERE":52,"primary-expression":53,"type":54,"CONST":55,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"FIXED":82,"attribute-sections":83,"modifier":84,"IDENTIFIER":85,"primary-no-array-creation-expression":86,"array-creation-expression":87,"non-array-type":88,"array-type":89,"invocation-expression":90,"NEW":91,"unary-expression":92,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"attribute-section":107,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"delegate-expression":135,"STACKALLOC":136,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"OPEN_BRACKET":162,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"BASE":170,"TYPEOF":171,"SIZEOF":172,"namespace-or-type-name":173,"TRUE":174,"FALSE":175}

item set 1 
$accept -> compilationUnit .$end #lookaheads= $end 
transitions ->  {}

item set 2 
compilationUnit -> namespace-member-declarations .EOF
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .statement
namespace-member-declaration -> .type-declaration
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"EOF":176,"namespace-member-declaration":177,"statement":4,"type-declaration":5,"labeled-statement":6,"declaration-statement":7,"embedded-statement":8,"class-declaration":9,"struct-declaration":10,"interface-declaration":11,"enum-declaration":12,"delegate-declaration":13,"IDENTIFIER_WITH_KEYWORD":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"CLASS":30,"attributes":31,"modifiers":32,"STRUCT":33,"INTERFACE":34,"ENUM":35,"DELEGATE":36,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":51,"WHERE":52,"primary-expression":53,"type":54,"CONST":55,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"FIXED":82,"attribute-sections":83,"modifier":84,"IDENTIFIER":85,"primary-no-array-creation-expression":86,"array-creation-expression":87,"non-array-type":88,"array-type":89,"invocation-expression":90,"NEW":91,"unary-expression":92,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"attribute-section":107,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"delegate-expression":135,"STACKALLOC":136,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"OPEN_BRACKET":162,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"BASE":170,"TYPEOF":171,"SIZEOF":172,"namespace-or-type-name":173,"TRUE":174,"FALSE":175}

item set 3 
namespace-member-declarations -> namespace-member-declaration . 
transitions ->  {}

item set 4 
namespace-member-declaration -> statement . 
transitions ->  {}

item set 5 
namespace-member-declaration -> type-declaration . 
transitions ->  {}

item set 6 
statement -> labeled-statement . 
transitions ->  {}

item set 7 
statement -> declaration-statement . 
transitions ->  {}

item set 8 
statement -> embedded-statement . 
transitions ->  {}

item set 9 
type-declaration -> class-declaration . 
transitions ->  {}

item set 10 
type-declaration -> struct-declaration . 
transitions ->  {}

item set 11 
type-declaration -> interface-declaration . 
transitions ->  {}

item set 12 
type-declaration -> enum-declaration . 
transitions ->  {}

item set 13 
type-declaration -> delegate-declaration . 
transitions ->  {}

item set 14 
labeled-statement -> IDENTIFIER_WITH_KEYWORD .COLON switch-labels
labeled-statement -> IDENTIFIER_WITH_KEYWORD .COLON statement
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"COLON":178,"OP_DBLPTR":179}

item set 15 
declaration-statement -> local-variable-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":180}

item set 16 
declaration-statement -> local-constant-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":181}

item set 17 
embedded-statement -> block . 
transitions ->  {}

item set 18 
embedded-statement -> empty-statement . 
transitions ->  {}

item set 19 
embedded-statement -> statement-expression .SEMICOLON 
transitions ->  {"SEMICOLON":182}

item set 20 
embedded-statement -> selection-statement . 
transitions ->  {}

item set 21 
embedded-statement -> iteration-statement . 
transitions ->  {}

item set 22 
embedded-statement -> jump-statement . 
transitions ->  {}

item set 23 
embedded-statement -> try-statement . 
transitions ->  {}

item set 24 
embedded-statement -> checked-statement . 
transitions ->  {}

item set 25 
embedded-statement -> unchecked-statement . 
transitions ->  {}

item set 26 
embedded-statement -> lock-statement . 
transitions ->  {}

item set 27 
embedded-statement -> using-statement . 
transitions ->  {}

item set 28 
embedded-statement -> unsafe-statement . 
transitions ->  {}

item set 29 
embedded-statement -> fixed-statement . 
transitions ->  {}

item set 30 
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":183,"IDENTIFIER":85}

item set 31 
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"CLASS":184,"modifiers":185,"STRUCT":186,"INTERFACE":187,"ENUM":188,"DELEGATE":189,"modifier":84,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 32 
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
fixed-statement -> modifiers .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"CLASS":193,"STRUCT":194,"INTERFACE":195,"ENUM":196,"DELEGATE":197,"FIXED":198,"modifier":199,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 33 
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":200,"IDENTIFIER":85}

item set 34 
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":201,"IDENTIFIER":85}

item set 35 
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":202,"IDENTIFIER":85}

item set 36 
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
primary-no-array-creation-expression -> DELEGATE .block
delegate-expression -> DELEGATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE .OPEN_PARENS CLOSE_PARENS block
type-with-interr -> .type INTERR
type-with-interr -> .type
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":203,"block":204,"OPEN_PARENS":205,"type":206,"OPEN_BRACE":56,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 37 
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE .
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON member-access 
transitions ->  {"DOUBLE_COLON":211}

item set 38 
IDENTIFIER_WITH_KEYWORD -> ADD . 
transitions ->  {}

item set 39 
IDENTIFIER_WITH_KEYWORD -> REMOVE . 
transitions ->  {}

item set 40 
IDENTIFIER_WITH_KEYWORD -> SET . 
transitions ->  {}

item set 41 
IDENTIFIER_WITH_KEYWORD -> PARAMS . 
transitions ->  {}

item set 42 
IDENTIFIER_WITH_KEYWORD -> DEFAULT . 
transitions ->  {}

item set 43 
IDENTIFIER_WITH_KEYWORD -> METHOD . 
transitions ->  {}

item set 44 
IDENTIFIER_WITH_KEYWORD -> PARAM . 
transitions ->  {}

item set 45 
IDENTIFIER_WITH_KEYWORD -> ASSEMBLY . 
transitions ->  {}

item set 46 
IDENTIFIER_WITH_KEYWORD -> PROPERTY . 
transitions ->  {}

item set 47 
IDENTIFIER_WITH_KEYWORD -> MODULE . 
transitions ->  {}

item set 48 
IDENTIFIER_WITH_KEYWORD -> FIELD . 
transitions ->  {}

item set 49 
IDENTIFIER_WITH_KEYWORD -> TYPE . 
transitions ->  {}

item set 50 
IDENTIFIER_WITH_KEYWORD -> THIS .
this-access -> THIS . 
transitions ->  {}

item set 51 
IDENTIFIER_WITH_KEYWORD -> ASYNC .
modifier -> ASYNC . 
transitions ->  {}

item set 52 
IDENTIFIER_WITH_KEYWORD -> WHERE . 
transitions ->  {}

item set 53 
local-variable-declaration -> primary-expression .local-variable-declarators
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":212,"OP_INC":213,"OP_DEC":214,"OPEN_PARENS":215,"DOT":216,"OP_PTR":217,"local-variable-declarator":218,"local-variable":219,"INTERR":220,"STARS":221,"IDENTIFIER_WITH_KEYWORD":222,"STAR":223,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 54 
local-variable-declaration -> type .local-variable-declarators
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":224,"rank-specifiers":225,"DOT":226,"OP_PTR":227,"local-variable-declarator":218,"rank-specifier":228,"local-variable":219,"OPEN_BRACKET":229,"INTERR":220,"STARS":221,"IDENTIFIER_WITH_KEYWORD":222,"STAR":223,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 55 
local-constant-declaration -> CONST .type constant-declarators
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":230,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 56 
block -> OPEN_BRACE .CLOSE_BRACE
block -> OPEN_BRACE .statement-list CLOSE_BRACE
statement-list -> .statement
statement-list -> .statement-list statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":231,"statement-list":232,"statement":233,"labeled-statement":6,"declaration-statement":7,"embedded-statement":8,"IDENTIFIER_WITH_KEYWORD":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":51,"WHERE":52,"primary-expression":53,"type":54,"CONST":55,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"IDENTIFIER":85,"primary-no-array-creation-expression":86,"array-creation-expression":87,"non-array-type":88,"array-type":89,"invocation-expression":90,"NEW":91,"unary-expression":92,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"BASE":170,"TYPEOF":171,"SIZEOF":172,"namespace-or-type-name":173,"TRUE":174,"FALSE":175}

item set 57 
empty-statement -> SEMICOLON . 
transitions ->  {}

item set 58 
statement-expression -> invocation-expressions .
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOT":236,"OP_PTR":237}

item set 59 
statement-expression -> object-creation-expression .
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 60 
statement-expression -> assignment . 
transitions ->  {}

item set 61 
statement-expression -> post-increment-expression .
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 62 
statement-expression -> post-decrement-expression .
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 63 
statement-expression -> pre-increment-expression .
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 64 
statement-expression -> pre-decrement-expression .
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 65 
selection-statement -> if-statement . 
transitions ->  {}

item set 66 
selection-statement -> switch-statement . 
transitions ->  {}

item set 67 
iteration-statement -> while-statement . 
transitions ->  {}

item set 68 
iteration-statement -> do-statement . 
transitions ->  {}

item set 69 
iteration-statement -> for-statement . 
transitions ->  {}

item set 70 
iteration-statement -> foreach-statement . 
transitions ->  {}

item set 71 
jump-statement -> break-statement . 
transitions ->  {}

item set 72 
jump-statement -> continue-statement . 
transitions ->  {}

item set 73 
jump-statement -> goto-statement . 
transitions ->  {}

item set 74 
jump-statement -> return-statement . 
transitions ->  {}

item set 75 
jump-statement -> throw-statement . 
transitions ->  {}

item set 76 
try-statement -> TRY .block catch-clauses
try-statement -> TRY .block finally-clause
try-statement -> TRY .block catch-clauses finally-clause
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":238,"OPEN_BRACE":56}

item set 77 
checked-statement -> CHECKED .block
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":239,"OPEN_PARENS":240,"OPEN_BRACE":56}

item set 78 
unchecked-statement -> UNCHECKED .block
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":241,"OPEN_PARENS":242,"OPEN_BRACE":56}

item set 79 
lock-statement -> LOCK .OPEN_PARENS expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":243}

item set 80 
using-statement -> USING .OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":244}

item set 81 
unsafe-statement -> UNSAFE .block
modifier -> UNSAFE .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":245,"OPEN_BRACE":56}

item set 82 
fixed-statement -> FIXED .OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":246}

item set 83 
attributes -> attribute-sections .
attribute-sections -> attribute-sections .attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attribute-section":247,"OPEN_BRACKET":162}

item set 84 
modifiers -> modifier . 
transitions ->  {}

item set 85 
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER . 
transitions ->  {"TEMPLATE":248}

item set 86 
primary-expression -> primary-no-array-creation-expression .
element-access -> primary-no-array-creation-expression .OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> primary-no-array-creation-expression .OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> primary-no-array-creation-expression .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":249}

item set 87 
primary-expression -> array-creation-expression . 
transitions ->  {}

item set 88 
type -> non-array-type .STARS
type -> non-array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"STARS":250,"STAR":223}

item set 89 
type -> array-type .STARS
type -> array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"STARS":251,"STAR":223}

item set 90 
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 91 
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier block-expression-with-brace
object-creation-expression -> NEW .non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .rank-specifiers
object-creation-expression -> NEW .block-expression-with-brace
modifier -> NEW .
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW .type block-expression-with-brace
type-with-identifier -> .IDENTIFIER TEMPLATE
type-with-identifier -> .non-array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type-name -> .namespace-or-type-name
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
array-type -> .type rank-specifiers
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-identifier":252,"non-array-type":253,"rank-specifiers":254,"block-expression-with-brace":255,"type":256,"IDENTIFIER":257,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"rank-specifier":228,"OPEN_BRACE":258,"array-type":89,"namespace-or-type-name":173,"OPEN_BRACKET":229,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52}

item set 92 
assignment -> unary-expression .assignment-operator expression
assignment -> unary-expression .assignment-operator block-expression-with-brace
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":259,"ASSIGN":260,"OP_ADD_ASSIGNMENT":261,"OP_SUB_ASSIGNMENT":262,"OP_MULT_ASSIGNMENT":263,"OP_DIV_ASSIGNMENT":264,"OP_MOD_ASSIGNMENT":265,"OP_AND_ASSIGNMENT":266,"OP_OR_ASSIGNMENT":267,"OP_XOR_ASSIGNMENT":268,"OP_LEFT_SHIFT_ASSIGNMENT":269,"RIGHT_SHIFT_ASSIGNMENT":270}

item set 93 
pre-increment-expression -> OP_INC .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":271,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 94 
pre-decrement-expression -> OP_DEC .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":284,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 95 
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"OPEN_PARENS":285}

item set 96 
switch-statement -> SWITCH .OPEN_PARENS expression CLOSE_PARENS switch-block 
transitions ->  {"OPEN_PARENS":286}

item set 97 
while-statement -> WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":287}

item set 98 
do-statement -> DO .embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":288,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 99 
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":289}

item set 100 
foreach-statement -> FOREACH .OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":290}

item set 101 
break-statement -> YIELD .BREAK SEMICOLON
return-statement -> YIELD .RETURN block-expression-with-brace SEMICOLON
return-statement -> YIELD .RETURN expression SEMICOLON
return-statement -> YIELD .RETURN SEMICOLON 
transitions ->  {"BREAK":291,"RETURN":292}

item set 102 
break-statement -> BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":293}

item set 103 
continue-statement -> CONTINUE .SEMICOLON 
transitions ->  {"SEMICOLON":294}

item set 104 
goto-statement -> GOTO .IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> GOTO .CASE constant-expression SEMICOLON
goto-statement -> GOTO .DEFAULT SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":295,"CASE":296,"DEFAULT":297,"IDENTIFIER":85}

item set 105 
return-statement -> RETURN .block-expression-with-brace SEMICOLON
return-statement -> RETURN .SEMICOLON
return-statement -> RETURN .expression SEMICOLON
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-with-brace":298,"SEMICOLON":299,"expression":300,"OPEN_BRACE":258,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 106 
throw-statement -> THROW .SEMICOLON
throw-statement -> THROW .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":314,"expression":315,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 107 
attribute-sections -> attribute-section . 
transitions ->  {}

item set 108 
modifier -> PUBLIC . 
transitions ->  {}

item set 109 
modifier -> PARTIAL . 
transitions ->  {}

item set 110 
modifier -> PROTECTED . 
transitions ->  {}

item set 111 
modifier -> INTERNAL . 
transitions ->  {}

item set 112 
modifier -> PRIVATE . 
transitions ->  {}

item set 113 
modifier -> ABSTRACT . 
transitions ->  {}

item set 114 
modifier -> SEALED . 
transitions ->  {}

item set 115 
modifier -> STATIC . 
transitions ->  {}

item set 116 
modifier -> READONLY . 
transitions ->  {}

item set 117 
modifier -> VOLATILE . 
transitions ->  {}

item set 118 
modifier -> VIRTUAL . 
transitions ->  {}

item set 119 
modifier -> OVERRIDE . 
transitions ->  {}

item set 120 
modifier -> EXTERN . 
transitions ->  {}

item set 121 
primary-no-array-creation-expression -> literal . 
transitions ->  {}

item set 122 
primary-no-array-creation-expression -> lambda-expression . 
transitions ->  {}

item set 123 
primary-no-array-creation-expression -> cast-expression . 
transitions ->  {}

item set 124 
primary-no-array-creation-expression -> parenthesized-expression . 
transitions ->  {}

item set 125 
primary-no-array-creation-expression -> double-colon-access . 
transitions ->  {}

item set 126 
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 127 
primary-no-array-creation-expression -> element-access . 
transitions ->  {}

item set 128 
primary-no-array-creation-expression -> this-access . 
transitions ->  {}

item set 129 
primary-no-array-creation-expression -> base-access . 
transitions ->  {}

item set 130 
primary-no-array-creation-expression -> delegate-creation-expression . 
transitions ->  {}

item set 131 
primary-no-array-creation-expression -> typeof-expression . 
transitions ->  {}

item set 132 
primary-no-array-creation-expression -> sizeof-expression . 
transitions ->  {}

item set 133 
primary-no-array-creation-expression -> checked-expression . 
transitions ->  {}

item set 134 
primary-no-array-creation-expression -> unchecked-expression . 
transitions ->  {}

item set 135 
primary-no-array-creation-expression -> delegate-expression . 
transitions ->  {}

item set 136 
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> STACKALLOC .array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"non-array-type":316,"array-type":317,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"type":318,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 137 
non-array-type -> type-name . 
transitions ->  {}

item set 138 
non-array-type -> SBYTE . 
transitions ->  {}

item set 139 
non-array-type -> BYTE . 
transitions ->  {}

item set 140 
non-array-type -> SHORT . 
transitions ->  {}

item set 141 
non-array-type -> USHORT . 
transitions ->  {}

item set 142 
non-array-type -> INT . 
transitions ->  {}

item set 143 
non-array-type -> UINT . 
transitions ->  {}

item set 144 
non-array-type -> LONG . 
transitions ->  {}

item set 145 
non-array-type -> ULONG . 
transitions ->  {}

item set 146 
non-array-type -> CHAR . 
transitions ->  {}

item set 147 
non-array-type -> FLOAT . 
transitions ->  {}

item set 148 
non-array-type -> DOUBLE . 
transitions ->  {}

item set 149 
non-array-type -> DECIMAL . 
transitions ->  {}

item set 150 
non-array-type -> BOOL . 
transitions ->  {}

item set 151 
non-array-type -> OBJECT . 
transitions ->  {}

item set 152 
non-array-type -> STRING . 
transitions ->  {}

item set 153 
non-array-type -> VOID . 
transitions ->  {}

item set 154 
invocation-expression -> AWAIT .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> AWAIT .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> AWAIT .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"primary-expression":319,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 155 
unary-expression -> PLUS .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":320,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 156 
unary-expression -> OP_PTR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":321,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 157 
unary-expression -> OP_COALESCING .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":322,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 158 
unary-expression -> MINUS .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":323,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 159 
unary-expression -> BANG .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":324,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 160 
unary-expression -> TILDE .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":325,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 161 
unary-expression -> STAR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":326,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 162 
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .EVENT
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":327,"attribute-target-specifier":328,"attribute":329,"attribute-target":330,"attribute-name":331,"FIELD":332,"EVENT":333,"METHOD":334,"PARAM":335,"PROPERTY":336,"RETURN":337,"TYPE":338,"type-name":339,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"ASSEMBLY":45,"MODULE":47,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 163 
literal -> BOOLEAN_LITERAL . 
transitions ->  {}

item set 164 
literal -> REAL_LITERAL . 
transitions ->  {}

item set 165 
literal -> INTEGER_LITERAL . 
transitions ->  {}

item set 166 
literal -> STRING_LITERAL . 
transitions ->  {}

item set 167 
literal -> CHARACTER_LITERAL . 
transitions ->  {}

item set 168 
literal -> NULL . 
transitions ->  {}

item set 169 
lambda-expression -> OPEN_PARENS .dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> OPEN_PARENS .type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> OPEN_PARENS .expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> OPEN_PARENS .type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS expression
cast-expression -> OPEN_PARENS .type-with-interr CLOSE_PARENS expression
parenthesized-expression -> OPEN_PARENS .expression CLOSE_PARENS
dbl-expression-list -> .dbl-expression-list COMMA expression expression
dbl-expression-list -> .expression expression
type-expression-list -> .type-expression-list COMMA type expression
type-expression-list -> .type expression
expression-list -> .expression
expression-list -> .expression-list COMMA expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
expression -> .conditional-expression
expression -> .assignment
type-with-interr -> .type INTERR
type-with-interr -> .type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
type-name -> .namespace-or-type-name
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"dbl-expression-list":340,"type-expression-list":341,"expression-list":342,"type":343,"expression":344,"type-with-interr":345,"non-array-type":88,"array-type":89,"conditional-expression":301,"assignment":302,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"conditional-or-expression":303,"unary-expression":304,"namespace-or-type-name":173,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"IDENTIFIER_WITH_KEYWORD":279,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":210,"WHERE":52,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"IDENTIFIER":85,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"invocation-expression":90,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"equality-expression":309,"TRUE":174,"FALSE":175,"AWAIT":154,"relational-expression":310,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313}

item set 170 
base-access -> BASE .DOT IDENTIFIER_WITH_TEMPLATE
base-access -> BASE .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"DOT":346,"OPEN_BRACKET":347}

item set 171 
typeof-expression -> TYPEOF .OPEN_PARENS type-with-interr CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":348}

item set 172 
sizeof-expression -> SIZEOF .OPEN_PARENS type-with-interr CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":349}

item set 173 
type-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOUBLE_COLON":350,"DOT":351}

item set 174 
BOOLEAN_LITERAL -> TRUE . 
transitions ->  {}

item set 175 
BOOLEAN_LITERAL -> FALSE . 
transitions ->  {}

item set 176 
compilationUnit -> namespace-member-declarations EOF . 
transitions ->  {}

item set 177 
namespace-member-declarations -> namespace-member-declarations namespace-member-declaration . 
transitions ->  {}

item set 178 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON .switch-labels
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON .statement
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"switch-labels":352,"statement":353,"switch-label":354,"labeled-statement":6,"declaration-statement":7,"embedded-statement":8,"CASE":355,"DEFAULT":356,"IDENTIFIER_WITH_KEYWORD":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":51,"WHERE":52,"primary-expression":53,"type":54,"CONST":55,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"IDENTIFIER":85,"primary-no-array-creation-expression":86,"array-creation-expression":87,"non-array-type":88,"array-type":89,"invocation-expression":90,"NEW":91,"unary-expression":92,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"BASE":170,"TYPEOF":171,"SIZEOF":172,"namespace-or-type-name":173,"TRUE":174,"FALSE":175}

item set 179 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR .expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":357,"block":358,"conditional-expression":301,"assignment":302,"OPEN_BRACE":56,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 180 
declaration-statement -> local-variable-declaration SEMICOLON . 
transitions ->  {}

item set 181 
declaration-statement -> local-constant-declaration SEMICOLON . 
transitions ->  {}

item set 182 
embedded-statement -> statement-expression SEMICOLON . 
transitions ->  {}

item set 183 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":359,"class-base":360,"where-units":361,"COLON":362,"where-unit":363,"WHERE":364}

item set 184 
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":365,"IDENTIFIER":85}

item set 185 
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"CLASS":366,"STRUCT":367,"INTERFACE":368,"ENUM":369,"DELEGATE":370,"modifier":199,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 186 
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":371,"IDENTIFIER":85}

item set 187 
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":372,"IDENTIFIER":85}

item set 188 
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":373,"IDENTIFIER":85}

item set 189 
delegate-declaration -> attributes DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":374,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 190 
modifier -> UNSAFE . 
transitions ->  {}

item set 191 
modifier -> ASYNC . 
transitions ->  {}

item set 192 
modifier -> NEW . 
transitions ->  {}

item set 193 
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":375,"IDENTIFIER":85}

item set 194 
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":376,"IDENTIFIER":85}

item set 195 
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":377,"IDENTIFIER":85}

item set 196 
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":378,"IDENTIFIER":85}

item set 197 
delegate-declaration -> modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":379,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 198 
fixed-statement -> modifiers FIXED .OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":380}

item set 199 
modifiers -> modifiers modifier . 
transitions ->  {}

item set 200 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":381,"struct-interfaces":382,"where-units":361,"COLON":383,"where-unit":363,"WHERE":364}

item set 201 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":384,"interface-base":385,"where-units":361,"COLON":386,"where-unit":363,"WHERE":364}

item set 202 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":387,"enum-base":388,"OPEN_BRACE":389,"COLON":390}

item set 203 
delegate-declaration -> DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":391,"IDENTIFIER":85}

item set 204 
primary-no-array-creation-expression -> DELEGATE block . 
transitions ->  {}

item set 205 
delegate-expression -> DELEGATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE OPEN_PARENS .CLOSE_PARENS block
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":392,"CLOSE_PARENS":393,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 206 
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"INTERR":404,"rank-specifiers":225,"rank-specifier":228,"OPEN_BRACKET":229}

item set 207 
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 208 
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 209 
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {}

item set 210 
IDENTIFIER_WITH_KEYWORD -> ASYNC . 
transitions ->  {}

item set 211 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON .member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"member-access":405,"invocation-expressions":275,"primary-expression":406,"type":280,"invocation-expression":90,"primary-no-array-creation-expression":86,"array-creation-expression":87,"non-array-type":88,"array-type":89,"AWAIT":154,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"namespace-or-type-name":173,"TRUE":174,"FALSE":175,"IDENTIFIER":85}

item set 212 
local-variable-declaration -> primary-expression local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":407}

item set 213 
post-increment-expression -> primary-expression OP_INC . 
transitions ->  {}

item set 214 
post-decrement-expression -> primary-expression OP_DEC . 
transitions ->  {}

item set 215 
invocation-expression -> primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
type-name -> .namespace-or-type-name
expression -> .conditional-expression
expression -> .assignment
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":408,"argument-list":409,"CLOSE_PARENS":410,"non-array-type":88,"array-type":89,"argument":411,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"expression":412,"REF":413,"OUT":414,"namespace-or-type-name":173,"conditional-expression":301,"assignment":302,"IDENTIFIER_WITH_KEYWORD":279,"conditional-or-expression":303,"unary-expression":304,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":210,"WHERE":52,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"IDENTIFIER":85,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"invocation-expression":90,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"equality-expression":309,"TRUE":174,"FALSE":175,"AWAIT":154,"relational-expression":310,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313}

item set 216 
member-access -> primary-expression DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":415,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 217 
member-access -> primary-expression OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":416,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 218 
local-variable-declarators -> local-variable-declarator . 
transitions ->  {}

item set 219 
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"ASSIGN":417}

item set 220 
local-variable -> INTERR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":418,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 221 
local-variable -> STARS .IDENTIFIER_WITH_KEYWORD
STARS -> STARS .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":419,"STAR":420,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 222 
local-variable -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 223 
STARS -> STAR . 
transitions ->  {}

item set 224 
local-variable-declaration -> type local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":407}

item set 225 
array-type -> type rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifier":421,"OPEN_BRACKET":229}

item set 226 
member-access -> type DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":422,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 227 
member-access -> type OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":423,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 228 
rank-specifiers -> rank-specifier . 
transitions ->  {}

item set 229 
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA 
transitions ->  {"dim-separators":424,"CLOSE_BRACKET":425,"COMMA":426}

item set 230 
local-constant-declaration -> CONST type .constant-declarators
array-type -> type .rank-specifiers
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":427,"rank-specifiers":225,"constant-declarator":428,"rank-specifier":228,"IDENTIFIER_WITH_TEMPLATE":429,"OPEN_BRACKET":229,"IDENTIFIER":85}

item set 231 
block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 232 
block -> OPEN_BRACE statement-list .CLOSE_BRACE
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":430,"statement":431,"labeled-statement":6,"declaration-statement":7,"embedded-statement":8,"IDENTIFIER_WITH_KEYWORD":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":51,"WHERE":52,"primary-expression":53,"type":54,"CONST":55,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"IDENTIFIER":85,"primary-no-array-creation-expression":86,"array-creation-expression":87,"non-array-type":88,"array-type":89,"invocation-expression":90,"NEW":91,"unary-expression":92,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"BASE":170,"TYPEOF":171,"SIZEOF":172,"namespace-or-type-name":173,"TRUE":174,"FALSE":175}

item set 233 
statement-list -> statement . 
transitions ->  {}

item set 234 
fixed-statement -> modifiers .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"FIXED":198,"modifier":199,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 235 
primary-no-array-creation-expression -> DELEGATE .block
delegate-expression -> DELEGATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE .OPEN_PARENS CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":204,"OPEN_PARENS":205,"OPEN_BRACE":56}

item set 236 
invocation-expressions -> invocation-expressions DOT .invocation-expression
member-access -> invocation-expressions DOT .IDENTIFIER_WITH_KEYWORD
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expression":432,"IDENTIFIER_WITH_KEYWORD":433,"AWAIT":154,"primary-expression":406,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":210,"WHERE":52,"primary-no-array-creation-expression":86,"array-creation-expression":87,"IDENTIFIER":85,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"type":280,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"TRUE":174,"FALSE":175,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 237 
member-access -> invocation-expressions OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":434,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 238 
try-statement -> TRY block .catch-clauses
try-statement -> TRY block .finally-clause
try-statement -> TRY block .catch-clauses finally-clause
catch-clauses -> .specific-catch-clauses
catch-clauses -> .general-catch-clause
catch-clauses -> .specific-catch-clauses general-catch-clause
finally-clause -> .FINALLY block
specific-catch-clauses -> .specific-catch-clause
specific-catch-clauses -> .specific-catch-clauses specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block 
transitions ->  {"catch-clauses":435,"finally-clause":436,"specific-catch-clauses":437,"general-catch-clause":438,"FINALLY":439,"specific-catch-clause":440,"CATCH":441}

item set 239 
checked-statement -> CHECKED block . 
transitions ->  {}

item set 240 
checked-expression -> CHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":442,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 241 
unchecked-statement -> UNCHECKED block . 
transitions ->  {}

item set 242 
unchecked-expression -> UNCHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":443,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 243 
lock-statement -> LOCK OPEN_PARENS .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":444,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 244 
using-statement -> USING OPEN_PARENS .resource-acquisition CLOSE_PARENS embedded-statement
resource-acquisition -> .local-variable-declaration
resource-acquisition -> .expression
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
expression -> .conditional-expression
expression -> .assignment
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"resource-acquisition":445,"local-variable-declaration":446,"expression":447,"primary-expression":53,"type":54,"conditional-expression":301,"assignment":302,"primary-no-array-creation-expression":86,"array-creation-expression":87,"non-array-type":88,"array-type":89,"conditional-or-expression":303,"unary-expression":304,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"namespace-or-type-name":173,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"AWAIT":154,"exclusive-or-expression":307,"and-expression":308,"equality-expression":309,"relational-expression":310,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313}

item set 245 
unsafe-statement -> UNSAFE block . 
transitions ->  {}

item set 246 
fixed-statement -> FIXED OPEN_PARENS .type local-variable-declarators CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":448,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 247 
attribute-sections -> attribute-sections attribute-section . 
transitions ->  {}

item set 248 
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE . 
transitions ->  {}

item set 249 
element-access -> primary-no-array-creation-expression OPEN_BRACKET .expression-list CLOSE_BRACKET
element-access -> primary-no-array-creation-expression OPEN_BRACKET .dim-separators CLOSE_BRACKET
element-access -> primary-no-array-creation-expression OPEN_BRACKET .CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":449,"dim-separators":450,"CLOSE_BRACKET":451,"expression":452,"COMMA":426,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 250 
type -> non-array-type STARS .
STARS -> STARS .STAR 
transitions ->  {"STAR":420}

item set 251 
type -> array-type STARS .
STARS -> STARS .STAR 
transitions ->  {"STAR":420}

item set 252 
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_BRACKET argument-list CLOSE_BRACKET
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_PARENS":453,"block-expression-with-brace":454,"rank-specifiers":455,"OPEN_BRACKET":456,"OPEN_BRACE":258,"rank-specifier":228}

item set 253 
object-creation-expression -> NEW non-array-type .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW non-array-type .OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type .OPEN_BRACKET argument-list CLOSE_BRACKET
type-with-identifier -> non-array-type .
type -> non-array-type .STARS
type -> non-array-type .
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
STARS -> .STARS STAR
STARS -> .STAR
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":457,"OPEN_BRACKET":458,"STARS":250,"rank-specifier":228,"STAR":223}

item set 254 
object-creation-expression -> NEW rank-specifiers .block-expression-with-brace
object-creation-expression -> NEW rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":459,"rank-specifier":421,"OPEN_BRACE":258,"OPEN_BRACKET":229}

item set 255 
object-creation-expression -> NEW block-expression-with-brace . 
transitions ->  {}

item set 256 
delegate-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW type .block-expression-with-brace
array-type -> type .rank-specifiers
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_PARENS":460,"block-expression-with-brace":461,"rank-specifiers":225,"OPEN_BRACE":258,"rank-specifier":228,"OPEN_BRACKET":229}

item set 257 
type-with-identifier -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER . 
transitions ->  {"TEMPLATE":462}

item set 258 
block-expression-with-brace -> OPEN_BRACE .block-expression-list CLOSE_BRACE
block-expression-list -> .block-expression-list COMMA block-expression-list-unit
block-expression-list -> .block-expression-list-unit
block-expression-list-unit -> .block-expression-with-brace
block-expression-list-unit -> .expression
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-list":463,"block-expression-list-unit":464,"block-expression-with-brace":465,"expression":466,"OPEN_BRACE":258,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 259 
assignment -> unary-expression assignment-operator .expression
assignment -> unary-expression assignment-operator .block-expression-with-brace
expression -> .conditional-expression
expression -> .assignment
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":467,"block-expression-with-brace":468,"conditional-expression":301,"assignment":302,"OPEN_BRACE":258,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 260 
assignment-operator -> ASSIGN . 
transitions ->  {}

item set 261 
assignment-operator -> OP_ADD_ASSIGNMENT . 
transitions ->  {}

item set 262 
assignment-operator -> OP_SUB_ASSIGNMENT . 
transitions ->  {}

item set 263 
assignment-operator -> OP_MULT_ASSIGNMENT . 
transitions ->  {}

item set 264 
assignment-operator -> OP_DIV_ASSIGNMENT . 
transitions ->  {}

item set 265 
assignment-operator -> OP_MOD_ASSIGNMENT . 
transitions ->  {}

item set 266 
assignment-operator -> OP_AND_ASSIGNMENT . 
transitions ->  {}

item set 267 
assignment-operator -> OP_OR_ASSIGNMENT . 
transitions ->  {}

item set 268 
assignment-operator -> OP_XOR_ASSIGNMENT . 
transitions ->  {}

item set 269 
assignment-operator -> OP_LEFT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 270 
assignment-operator -> RIGHT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 271 
pre-increment-expression -> OP_INC unary-expression . 
transitions ->  {}

item set 272 
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 273 
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 274 
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"DOT":216,"OP_PTR":217,"OP_INC":213,"OP_DEC":214,"OPEN_PARENS":215}

item set 275 
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> invocation-expressions .DOT invocation-expression 
transitions ->  {"DOT":236,"OP_PTR":237}

item set 276 
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 277 
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 278 
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 279 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":179}

item set 280 
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"DOT":226,"OP_PTR":227,"rank-specifiers":225,"rank-specifier":228,"OPEN_BRACKET":229}

item set 281 
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW .type block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier block-expression-with-brace
object-creation-expression -> NEW .non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .rank-specifiers
object-creation-expression -> NEW .block-expression-with-brace
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type-with-identifier -> .IDENTIFIER TEMPLATE
type-with-identifier -> .non-array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":256,"type-with-identifier":252,"non-array-type":253,"rank-specifiers":254,"block-expression-with-brace":255,"array-type":89,"IDENTIFIER":257,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"rank-specifier":228,"OPEN_BRACE":258,"namespace-or-type-name":173,"OPEN_BRACKET":229,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52}

item set 282 
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":240}

item set 283 
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":242}

item set 284 
pre-decrement-expression -> OP_DEC unary-expression . 
transitions ->  {}

item set 285 
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":469,"expression":470,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 286 
switch-statement -> SWITCH OPEN_PARENS .expression CLOSE_PARENS switch-block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":471,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 287 
while-statement -> WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":472,"expression":470,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 288 
do-statement -> DO embedded-statement .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"WHILE":473}

item set 289 
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-initializer -> .local-variable-declaration
for-initializer -> .statement-expression-list
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"SEMICOLON":474,"for-initializer":475,"local-variable-declaration":476,"statement-expression-list":477,"primary-expression":53,"type":54,"statement-expression":478,"primary-no-array-creation-expression":86,"array-creation-expression":87,"non-array-type":88,"array-type":89,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"invocation-expression":90,"NEW":281,"unary-expression":92,"OP_INC":93,"OP_DEC":94,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"namespace-or-type-name":173,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"TRUE":174,"FALSE":175,"IDENTIFIER":85}

item set 290 
foreach-statement -> FOREACH OPEN_PARENS .type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":479,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 291 
break-statement -> YIELD BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":480}

item set 292 
return-statement -> YIELD RETURN .block-expression-with-brace SEMICOLON
return-statement -> YIELD RETURN .expression SEMICOLON
return-statement -> YIELD RETURN .SEMICOLON
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-with-brace":481,"expression":482,"SEMICOLON":483,"OPEN_BRACE":258,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 293 
break-statement -> BREAK SEMICOLON . 
transitions ->  {}

item set 294 
continue-statement -> CONTINUE SEMICOLON . 
transitions ->  {}

item set 295 
goto-statement -> GOTO IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":484}

item set 296 
goto-statement -> GOTO CASE .constant-expression SEMICOLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":485,"expression":486,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 297 
goto-statement -> GOTO DEFAULT .SEMICOLON 
transitions ->  {"SEMICOLON":487}

item set 298 
return-statement -> RETURN block-expression-with-brace .SEMICOLON 
transitions ->  {"SEMICOLON":488}

item set 299 
return-statement -> RETURN SEMICOLON . 
transitions ->  {}

item set 300 
return-statement -> RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":489}

item set 301 
expression -> conditional-expression . 
transitions ->  {}

item set 302 
expression -> assignment . 
transitions ->  {}

item set 303 
conditional-expression -> conditional-or-expression .
conditional-expression -> conditional-or-expression .INTERR expression
conditional-expression -> conditional-or-expression .INTERR expression COLON expression
conditional-or-expression -> conditional-or-expression .OP_OR conditional-and-expression 
transitions ->  {"INTERR":490,"OP_OR":491}

item set 304 
assignment -> unary-expression .assignment-operator expression
assignment -> unary-expression .assignment-operator block-expression-with-brace
multiplicative-expression -> unary-expression .
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":259,"ASSIGN":260,"OP_ADD_ASSIGNMENT":261,"OP_SUB_ASSIGNMENT":262,"OP_MULT_ASSIGNMENT":263,"OP_DIV_ASSIGNMENT":264,"OP_MOD_ASSIGNMENT":265,"OP_AND_ASSIGNMENT":266,"OP_OR_ASSIGNMENT":267,"OP_XOR_ASSIGNMENT":268,"OP_LEFT_SHIFT_ASSIGNMENT":269,"RIGHT_SHIFT_ASSIGNMENT":270}

item set 305 
conditional-or-expression -> conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":492}

item set 306 
conditional-and-expression -> inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":493}

item set 307 
inclusive-or-expression -> exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":494}

item set 308 
exclusive-or-expression -> and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":495}

item set 309 
and-expression -> equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":496,"OP_NE":497}

item set 310 
equality-expression -> relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":498,"GT":499,"OP_LE":500,"OP_GE":501,"OP_COALESCING":502,"IS":503,"AS":504}

item set 311 
relational-expression -> shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":505,"RIGHT_SHIFT":506}

item set 312 
shift-expression -> additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":507,"OP_PTR":508,"OP_COALESCING":509,"MINUS":510}

item set 313 
additive-expression -> multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":511,"DIV":512,"PERCENT":513}

item set 314 
throw-statement -> THROW SEMICOLON . 
transitions ->  {}

item set 315 
throw-statement -> THROW expression .SEMICOLON 
transitions ->  {"SEMICOLON":514}

item set 316 
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
type -> non-array-type .STARS
type -> non-array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"OPEN_BRACKET":515,"STARS":250,"STAR":223}

item set 317 
array-creation-expression -> STACKALLOC array-type .array-initializer
type -> array-type .STARS
type -> array-type .
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"array-initializer":516,"STARS":251,"OPEN_BRACE":517,"STAR":223}

item set 318 
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":225,"rank-specifier":228,"OPEN_BRACKET":229}

item set 319 
invocation-expression -> AWAIT primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> AWAIT primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> AWAIT primary-expression .OPEN_PARENS CLOSE_PARENS
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":518,"DOT":216,"OP_PTR":217,"OP_INC":213,"OP_DEC":214}

item set 320 
unary-expression -> PLUS unary-expression . 
transitions ->  {}

item set 321 
unary-expression -> OP_PTR unary-expression . 
transitions ->  {}

item set 322 
unary-expression -> OP_COALESCING unary-expression . 
transitions ->  {}

item set 323 
unary-expression -> MINUS unary-expression . 
transitions ->  {}

item set 324 
unary-expression -> BANG unary-expression . 
transitions ->  {}

item set 325 
unary-expression -> TILDE unary-expression . 
transitions ->  {}

item set 326 
unary-expression -> STAR unary-expression . 
transitions ->  {}

item set 327 
attribute-section -> OPEN_BRACKET attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":519,"COMMA":520}

item set 328 
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":521,"attribute":329,"attribute-name":331,"type-name":339,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 329 
attribute-list -> attribute . 
transitions ->  {}

item set 330 
attribute-target-specifier -> attribute-target .COLON 
transitions ->  {"COLON":522}

item set 331 
attribute -> attribute-name .
attribute -> attribute-name .attribute-arguments
attribute-arguments -> .OPEN_PARENS CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS named-argument-list CLOSE_PARENS 
transitions ->  {"attribute-arguments":523,"OPEN_PARENS":524}

item set 332 
attribute-target -> FIELD .
IDENTIFIER_WITH_KEYWORD -> FIELD . 
transitions ->  {}

item set 333 
attribute-target -> EVENT . 
transitions ->  {}

item set 334 
attribute-target -> METHOD .
IDENTIFIER_WITH_KEYWORD -> METHOD . 
transitions ->  {}

item set 335 
attribute-target -> PARAM .
IDENTIFIER_WITH_KEYWORD -> PARAM . 
transitions ->  {}

item set 336 
attribute-target -> PROPERTY .
IDENTIFIER_WITH_KEYWORD -> PROPERTY . 
transitions ->  {}

item set 337 
attribute-target -> RETURN . 
transitions ->  {}

item set 338 
attribute-target -> TYPE .
IDENTIFIER_WITH_KEYWORD -> TYPE . 
transitions ->  {}

item set 339 
attribute-name -> type-name . 
transitions ->  {}

item set 340 
lambda-expression -> OPEN_PARENS dbl-expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS dbl-expression-list .CLOSE_PARENS OP_DBLPTR block
dbl-expression-list -> dbl-expression-list .COMMA expression expression 
transitions ->  {"CLOSE_PARENS":525,"COMMA":526}

item set 341 
lambda-expression -> OPEN_PARENS type-expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS type-expression-list .CLOSE_PARENS OP_DBLPTR block
type-expression-list -> type-expression-list .COMMA type expression 
transitions ->  {"CLOSE_PARENS":527,"COMMA":528}

item set 342 
lambda-expression -> OPEN_PARENS expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS expression-list .CLOSE_PARENS OP_DBLPTR block
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_PARENS":529,"COMMA":530}

item set 343 
cast-expression -> OPEN_PARENS type .expression CLOSE_PARENS OP_DBLPTR expression block
type-expression-list -> type .expression
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
expression -> .conditional-expression
expression -> .assignment
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":531,"INTERR":404,"rank-specifiers":225,"DOT":226,"OP_PTR":532,"conditional-expression":301,"assignment":302,"rank-specifier":228,"conditional-or-expression":303,"unary-expression":304,"OPEN_BRACKET":229,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 344 
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS OP_DBLPTR expression
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS expression
parenthesized-expression -> OPEN_PARENS expression .CLOSE_PARENS
dbl-expression-list -> expression .expression
expression-list -> expression .
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":533,"expression":534,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 345 
cast-expression -> OPEN_PARENS type-with-interr .CLOSE_PARENS expression 
transitions ->  {"CLOSE_PARENS":535}

item set 346 
base-access -> BASE DOT .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":536,"IDENTIFIER":85}

item set 347 
base-access -> BASE OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":537,"expression":452,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 348 
typeof-expression -> TYPEOF OPEN_PARENS .type-with-interr CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":538,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 349 
sizeof-expression -> SIZEOF OPEN_PARENS .type-with-interr CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":539,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 350 
namespace-or-type-name -> namespace-or-type-name DOUBLE_COLON .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":540,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 351 
namespace-or-type-name -> namespace-or-type-name DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":541,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 352 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels .
switch-labels -> switch-labels .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"switch-label":542,"CASE":355,"DEFAULT":543}

item set 353 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON statement . 
transitions ->  {}

item set 354 
switch-labels -> switch-label . 
transitions ->  {}

item set 355 
switch-label -> CASE .constant-expression COLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":544,"expression":486,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 356 
switch-label -> DEFAULT .COLON
IDENTIFIER_WITH_KEYWORD -> DEFAULT . 
transitions ->  {"COLON":545}

item set 357 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression . 
transitions ->  {}

item set 358 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR block . 
transitions ->  {}

item set 359 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":546,"OPEN_BRACE":547}

item set 360 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":548,"where-units":361,"where-unit":363,"WHERE":364}

item set 361 
where-base -> where-units .COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> where-units .
where-units -> where-units .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"COMMA":549,"where-unit":550,"WHERE":364}

item set 362 
class-base -> COLON .type-with-interr
class-base -> COLON .interface-type-list
class-base -> COLON .type-with-interr COMMA interface-type-list
type-with-interr -> .type INTERR
type-with-interr -> .type
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":551,"interface-type-list":552,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 363 
where-units -> where-unit . 
transitions ->  {}

item set 364 
where-unit -> WHERE .type-name COLON where-names
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-name":553,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 365 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":554,"class-base":555,"where-units":361,"COLON":362,"where-unit":363,"WHERE":364}

item set 366 
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":556,"IDENTIFIER":85}

item set 367 
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":557,"IDENTIFIER":85}

item set 368 
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":558,"IDENTIFIER":85}

item set 369 
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":559,"IDENTIFIER":85}

item set 370 
delegate-declaration -> attributes modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":560,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 371 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":561,"struct-interfaces":562,"where-units":361,"COLON":383,"where-unit":363,"WHERE":364}

item set 372 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":563,"interface-base":564,"where-units":361,"COLON":386,"where-unit":363,"WHERE":364}

item set 373 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":565,"enum-base":566,"OPEN_BRACE":389,"COLON":390}

item set 374 
delegate-declaration -> attributes DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":567,"IDENTIFIER":85}

item set 375 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":568,"class-base":569,"where-units":361,"COLON":362,"where-unit":363,"WHERE":364}

item set 376 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":570,"struct-interfaces":571,"where-units":361,"COLON":383,"where-unit":363,"WHERE":364}

item set 377 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":572,"interface-base":573,"where-units":361,"COLON":386,"where-unit":363,"WHERE":364}

item set 378 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":574,"enum-base":575,"OPEN_BRACE":389,"COLON":390}

item set 379 
delegate-declaration -> modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":576,"IDENTIFIER":85}

item set 380 
fixed-statement -> modifiers FIXED OPEN_PARENS .type local-variable-declarators CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":577,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 381 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":578,"OPEN_BRACE":579}

item set 382 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":580,"where-units":361,"where-unit":363,"WHERE":364}

item set 383 
struct-interfaces -> COLON .interface-type-list
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"interface-type-list":581,"type-with-interr":582,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 384 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":583,"OPEN_BRACE":584}

item set 385 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":585,"where-units":361,"where-unit":363,"WHERE":364}

item set 386 
interface-base -> COLON .interface-type-list
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"interface-type-list":586,"type-with-interr":582,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 387 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":587}

item set 388 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":588,"OPEN_BRACE":389}

item set 389 
enum-body -> OPEN_BRACE .CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations COMMA CLOSE_BRACE
enum-member-declarations -> .enum-member-declaration
enum-member-declarations -> .enum-member-declarations COMMA enum-member-declaration
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":589,"enum-member-declarations":590,"enum-member-declaration":591,"IDENTIFIER_WITH_TEMPLATE":592,"attributes":593,"IDENTIFIER":85,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 390 
enum-base -> COLON .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":594,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 391 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":595}

item set 392 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":596}

item set 393 
delegate-expression -> DELEGATE OPEN_PARENS CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":597,"OPEN_BRACE":56}

item set 394 
formal-parameter-list -> fixed-parameters .
formal-parameter-list -> fixed-parameters .COMMA parameter-array
fixed-parameters -> fixed-parameters .COMMA fixed-parameter 
transitions ->  {"COMMA":598}

item set 395 
formal-parameter-list -> parameter-array . 
transitions ->  {}

item set 396 
fixed-parameters -> fixed-parameter . 
transitions ->  {}

item set 397 
parameter-array -> PARAMS .array-type IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> PARAMS .
array-type -> .type rank-specifiers
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"array-type":599,"type":318,"non-array-type":88,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 398 
parameter-array -> attributes .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> attributes .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> attributes .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"PARAMS":600,"type-with-interr":601,"parameter-modifier":602,"type":206,"REF":402,"OUT":403,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 399 
fixed-parameter -> type-with-interr .IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":603,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 400 
fixed-parameter -> THIS .type-with-interr IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> THIS .
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":604,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 401 
fixed-parameter -> parameter-modifier .type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":605,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 402 
parameter-modifier -> REF . 
transitions ->  {}

item set 403 
parameter-modifier -> OUT . 
transitions ->  {}

item set 404 
type-with-interr -> type INTERR . 
transitions ->  {}

item set 405 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access .
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 406 
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC 
transitions ->  {"DOT":216,"OP_PTR":217,"OPEN_PARENS":215,"OP_INC":213,"OP_DEC":214}

item set 407 
local-variable-declarators -> local-variable-declarators COMMA .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarator":606,"local-variable":219,"INTERR":220,"STARS":221,"IDENTIFIER_WITH_KEYWORD":222,"STAR":223,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 408 
invocation-expression -> primary-expression OPEN_PARENS type .CLOSE_PARENS
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":607,"rank-specifiers":225,"DOT":226,"OP_PTR":227,"rank-specifier":228,"OPEN_BRACKET":229}

item set 409 
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":608,"COLON":609,"COMMA":610}

item set 410 
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 411 
argument-list -> argument . 
transitions ->  {}

item set 412 
argument -> expression . 
transitions ->  {}

item set 413 
argument -> REF .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":611,"expression":612,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 414 
argument -> OUT .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":613,"expression":612,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 415 
member-access -> primary-expression DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 416 
member-access -> primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 417 
local-variable-declarator -> local-variable ASSIGN .local-variable-initializer
local-variable-initializer -> .expression
local-variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"local-variable-initializer":614,"expression":615,"array-initializer":616,"conditional-expression":301,"assignment":302,"OPEN_BRACE":517,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 418 
local-variable -> INTERR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 419 
local-variable -> STARS IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 420 
STARS -> STARS STAR . 
transitions ->  {}

item set 421 
rank-specifiers -> rank-specifiers rank-specifier . 
transitions ->  {}

item set 422 
member-access -> type DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 423 
member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 424 
rank-specifier -> OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":617,"COMMA":618}

item set 425 
rank-specifier -> OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 426 
dim-separators -> COMMA . 
transitions ->  {}

item set 427 
local-constant-declaration -> CONST type constant-declarators .
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"COMMA":619}

item set 428 
constant-declarators -> constant-declarator .
constant-declarators -> constant-declarator . 
transitions ->  {}

item set 429 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression
constant-declarator -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":620}

item set 430 
block -> OPEN_BRACE statement-list CLOSE_BRACE . 
transitions ->  {}

item set 431 
statement-list -> statement-list statement . 
transitions ->  {}

item set 432 
invocation-expressions -> invocation-expressions DOT invocation-expression .
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 433 
member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":179}

item set 434 
member-access -> invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 435 
try-statement -> TRY block catch-clauses .
try-statement -> TRY block catch-clauses .finally-clause
finally-clause -> .FINALLY block 
transitions ->  {"finally-clause":621,"FINALLY":439}

item set 436 
try-statement -> TRY block finally-clause . 
transitions ->  {}

item set 437 
catch-clauses -> specific-catch-clauses .
catch-clauses -> specific-catch-clauses .general-catch-clause
specific-catch-clauses -> specific-catch-clauses .specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block 
transitions ->  {"general-catch-clause":622,"specific-catch-clause":623,"CATCH":441}

item set 438 
catch-clauses -> general-catch-clause . 
transitions ->  {}

item set 439 
finally-clause -> FINALLY .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":624,"OPEN_BRACE":56}

item set 440 
specific-catch-clauses -> specific-catch-clause . 
transitions ->  {}

item set 441 
general-catch-clause -> CATCH .block
specific-catch-clause -> CATCH .OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> CATCH .OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":625,"OPEN_PARENS":626,"OPEN_BRACE":56}

item set 442 
checked-expression -> CHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":627}

item set 443 
unchecked-expression -> UNCHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":628}

item set 444 
lock-statement -> LOCK OPEN_PARENS expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":629}

item set 445 
using-statement -> USING OPEN_PARENS resource-acquisition .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":630}

item set 446 
resource-acquisition -> local-variable-declaration . 
transitions ->  {}

item set 447 
resource-acquisition -> expression . 
transitions ->  {}

item set 448 
fixed-statement -> FIXED OPEN_PARENS type .local-variable-declarators CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":631,"rank-specifiers":225,"local-variable-declarator":218,"rank-specifier":228,"local-variable":219,"OPEN_BRACKET":229,"INTERR":220,"STARS":221,"IDENTIFIER_WITH_KEYWORD":222,"STAR":223,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 449 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":632,"COMMA":530}

item set 450 
element-access -> primary-no-array-creation-expression OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":633,"COMMA":618}

item set 451 
element-access -> primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 452 
expression-list -> expression . 
transitions ->  {}

item set 453 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS block-expression-with-brace
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":634,"CLOSE_PARENS":635,"argument":411,"expression":412,"REF":413,"OUT":414,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 454 
object-creation-expression -> NEW type-with-identifier block-expression-with-brace . 
transitions ->  {}

item set 455 
object-creation-expression -> NEW type-with-identifier rank-specifiers .block-expression-with-brace
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":636,"rank-specifier":421,"OPEN_BRACE":258,"OPEN_BRACKET":229}

item set 456 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET .argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET .argument-list CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":637,"dim-separators":424,"CLOSE_BRACKET":425,"argument":411,"COMMA":426,"expression":412,"REF":413,"OUT":414,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 457 
object-creation-expression -> NEW non-array-type rank-specifiers .block-expression-with-brace
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":638,"rank-specifier":421,"OPEN_BRACE":258,"OPEN_BRACKET":229}

item set 458 
object-creation-expression -> NEW non-array-type OPEN_BRACKET .argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET .argument-list CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":639,"dim-separators":424,"CLOSE_BRACKET":425,"argument":411,"COMMA":426,"expression":412,"REF":413,"OUT":414,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 459 
object-creation-expression -> NEW rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 460 
delegate-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS
delegate-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":640,"CLOSE_PARENS":641,"argument":411,"expression":412,"REF":413,"OUT":414,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 461 
delegate-creation-expression -> NEW type block-expression-with-brace . 
transitions ->  {}

item set 462 
type-with-identifier -> IDENTIFIER TEMPLATE .
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE . 
transitions ->  {}

item set 463 
block-expression-with-brace -> OPEN_BRACE block-expression-list .CLOSE_BRACE
block-expression-list -> block-expression-list .COMMA block-expression-list-unit 
transitions ->  {"CLOSE_BRACE":642,"COMMA":643}

item set 464 
block-expression-list -> block-expression-list-unit . 
transitions ->  {}

item set 465 
block-expression-list-unit -> block-expression-with-brace . 
transitions ->  {}

item set 466 
block-expression-list-unit -> expression . 
transitions ->  {}

item set 467 
assignment -> unary-expression assignment-operator expression . 
transitions ->  {}

item set 468 
assignment -> unary-expression assignment-operator block-expression-with-brace . 
transitions ->  {}

item set 469 
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"CLOSE_PARENS":644}

item set 470 
boolean-expression -> expression .
boolean-expression -> expression . 
transitions ->  {}

item set 471 
switch-statement -> SWITCH OPEN_PARENS expression .CLOSE_PARENS switch-block 
transitions ->  {"CLOSE_PARENS":645}

item set 472 
while-statement -> WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":646}

item set 473 
do-statement -> DO embedded-statement WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":647}

item set 474 
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":648,"for-condition":649,"boolean-expression":650,"expression":470,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 475 
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":651}

item set 476 
for-initializer -> local-variable-declaration . 
transitions ->  {}

item set 477 
for-initializer -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":652}

item set 478 
statement-expression-list -> statement-expression . 
transitions ->  {}

item set 479 
foreach-statement -> FOREACH OPEN_PARENS type .IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":653,"rank-specifiers":225,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"rank-specifier":228,"IDENTIFIER":85,"OPEN_BRACKET":229}

item set 480 
break-statement -> YIELD BREAK SEMICOLON . 
transitions ->  {}

item set 481 
return-statement -> YIELD RETURN block-expression-with-brace .SEMICOLON 
transitions ->  {"SEMICOLON":654}

item set 482 
return-statement -> YIELD RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":655}

item set 483 
return-statement -> YIELD RETURN SEMICOLON . 
transitions ->  {}

item set 484 
goto-statement -> GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 485 
goto-statement -> GOTO CASE constant-expression .SEMICOLON 
transitions ->  {"SEMICOLON":656}

item set 486 
constant-expression -> expression . 
transitions ->  {}

item set 487 
goto-statement -> GOTO DEFAULT SEMICOLON . 
transitions ->  {}

item set 488 
return-statement -> RETURN block-expression-with-brace SEMICOLON . 
transitions ->  {}

item set 489 
return-statement -> RETURN expression SEMICOLON . 
transitions ->  {}

item set 490 
conditional-expression -> conditional-or-expression INTERR .expression
conditional-expression -> conditional-or-expression INTERR .expression COLON expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":657,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 491 
conditional-or-expression -> conditional-or-expression OP_OR .conditional-and-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"conditional-and-expression":658,"inclusive-or-expression":306,"exclusive-or-expression":307,"and-expression":308,"equality-expression":309,"relational-expression":310,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 492 
conditional-and-expression -> conditional-and-expression OP_AND .inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"inclusive-or-expression":660,"exclusive-or-expression":307,"and-expression":308,"equality-expression":309,"relational-expression":310,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 493 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR .exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"exclusive-or-expression":661,"and-expression":308,"equality-expression":309,"relational-expression":310,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 494 
exclusive-or-expression -> exclusive-or-expression CARET .and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"and-expression":662,"equality-expression":309,"relational-expression":310,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 495 
and-expression -> and-expression AMP .equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"equality-expression":663,"relational-expression":310,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 496 
equality-expression -> equality-expression OP_EQ .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"relational-expression":664,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 497 
equality-expression -> equality-expression OP_NE .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"relational-expression":665,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 498 
relational-expression -> relational-expression LT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":666,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 499 
relational-expression -> relational-expression GT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":667,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 500 
relational-expression -> relational-expression OP_LE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":668,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 501 
relational-expression -> relational-expression OP_GE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":669,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 502 
relational-expression -> relational-expression OP_COALESCING .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":670,"additive-expression":312,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 503 
relational-expression -> relational-expression IS .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":671,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 504 
relational-expression -> relational-expression AS .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":672,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 505 
shift-expression -> shift-expression OP_LEFT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"additive-expression":673,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 506 
shift-expression -> shift-expression RIGHT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"additive-expression":674,"multiplicative-expression":313,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 507 
additive-expression -> additive-expression PLUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":675,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 508 
additive-expression -> additive-expression OP_PTR .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":676,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 509 
additive-expression -> additive-expression OP_COALESCING .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":677,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 510 
additive-expression -> additive-expression MINUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":678,"unary-expression":659,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 511 
multiplicative-expression -> multiplicative-expression STAR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":679,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 512 
multiplicative-expression -> multiplicative-expression DIV .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":680,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 513 
multiplicative-expression -> multiplicative-expression PERCENT .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":681,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 514 
throw-statement -> THROW expression SEMICOLON . 
transitions ->  {}

item set 515 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACKET":682,"expression-list":683,"expression":452,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 516 
array-creation-expression -> STACKALLOC array-type array-initializer . 
transitions ->  {}

item set 517 
array-initializer -> OPEN_BRACE .CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list COMMA CLOSE_BRACE
variable-initializer-list -> .variable-initializer
variable-initializer-list -> .variable-initializer-list COMMA variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":684,"variable-initializer-list":685,"variable-initializer":686,"expression":687,"array-initializer":688,"conditional-expression":301,"assignment":302,"OPEN_BRACE":517,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 518 
invocation-expression -> AWAIT primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> AWAIT primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> AWAIT primary-expression OPEN_PARENS .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
type-name -> .namespace-or-type-name
expression -> .conditional-expression
expression -> .assignment
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":689,"argument-list":690,"CLOSE_PARENS":691,"non-array-type":88,"array-type":89,"argument":411,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"expression":412,"REF":413,"OUT":414,"namespace-or-type-name":173,"conditional-expression":301,"assignment":302,"IDENTIFIER_WITH_KEYWORD":279,"conditional-or-expression":303,"unary-expression":304,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":210,"WHERE":52,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"IDENTIFIER":85,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"invocation-expression":90,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"equality-expression":309,"TRUE":174,"FALSE":175,"AWAIT":154,"relational-expression":310,"shift-expression":311,"additive-expression":312,"multiplicative-expression":313}

item set 519 
attribute-section -> OPEN_BRACKET attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 520 
attribute-section -> OPEN_BRACKET attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":692,"attribute":693,"attribute-name":331,"type-name":339,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 521 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":694,"COMMA":695}

item set 522 
attribute-target-specifier -> attribute-target COLON . 
transitions ->  {}

item set 523 
attribute -> attribute-name attribute-arguments . 
transitions ->  {}

item set 524 
attribute-arguments -> OPEN_PARENS .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .named-argument-list CLOSE_PARENS
positional-argument-list -> .positional-argument
positional-argument-list -> .positional-argument-list COMMA positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":696,"positional-argument-list":697,"named-argument-list":698,"positional-argument":699,"named-argument":700,"attribute-argument-expression":701,"IDENTIFIER_WITH_TEMPLATE":702,"expression":703,"IDENTIFIER":85,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 525 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":704}

item set 526 
dbl-expression-list -> dbl-expression-list COMMA .expression expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":705,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 527 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":706}

item set 528 
type-expression-list -> type-expression-list COMMA .type expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":707,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 529 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":708}

item set 530 
expression-list -> expression-list COMMA .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":709,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 531 
cast-expression -> OPEN_PARENS type expression .CLOSE_PARENS OP_DBLPTR expression block
type-expression-list -> type expression . 
transitions ->  {"CLOSE_PARENS":710}

item set 532 
member-access -> type OP_PTR .IDENTIFIER_WITH_KEYWORD
unary-expression -> OP_PTR .unary-expression
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":711,"unary-expression":321,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":210,"WHERE":52,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"IDENTIFIER":85,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"type":280,"invocation-expression":90,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"TRUE":174,"FALSE":175,"non-array-type":88,"array-type":89,"AWAIT":154,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 533 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .OP_DBLPTR expression block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .OP_DBLPTR expression
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .expression
parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS .
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"OP_DBLPTR":712,"expression":713,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 534 
dbl-expression-list -> expression expression . 
transitions ->  {}

item set 535 
cast-expression -> OPEN_PARENS type-with-interr CLOSE_PARENS .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":714,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 536 
base-access -> BASE DOT IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 537 
base-access -> BASE OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":715,"COMMA":530}

item set 538 
typeof-expression -> TYPEOF OPEN_PARENS type-with-interr .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":716}

item set 539 
sizeof-expression -> SIZEOF OPEN_PARENS type-with-interr .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":717}

item set 540 
namespace-or-type-name -> namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 541 
namespace-or-type-name -> namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 542 
switch-labels -> switch-labels switch-label . 
transitions ->  {}

item set 543 
switch-label -> DEFAULT .COLON 
transitions ->  {"COLON":545}

item set 544 
switch-label -> CASE constant-expression .COLON 
transitions ->  {"COLON":718}

item set 545 
switch-label -> DEFAULT COLON . 
transitions ->  {}

item set 546 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":719}

item set 547 
class-body -> OPEN_BRACE .CLOSE_BRACE
class-body -> OPEN_BRACE .class-member-declarations CLOSE_BRACE
class-member-declarations -> .class-member-declaration
class-member-declarations -> .class-member-declarations class-member-declaration
class-member-declaration -> .constant-declaration
class-member-declaration -> .method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .event-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":720,"class-member-declarations":721,"class-member-declaration":722,"constant-declaration":723,"method-declaration":724,"field-declaration":725,"property-declaration":726,"event-declaration":727,"indexer-declaration":728,"operator-declaration":729,"constructor-declaration":730,"static-constructor-declaration":731,"destructor-declaration":732,"type-declaration":733,"CONST":734,"attributes":735,"modifiers":736,"method-header":737,"type-with-interr":738,"EVENT":739,"indexer-declarator":740,"constructor-declarator":741,"TILDE":742,"EXTERN":743,"class-declaration":9,"struct-declaration":10,"interface-declaration":11,"enum-declaration":12,"delegate-declaration":13,"attribute-sections":83,"modifier":84,"type":206,"IDENTIFIER_WITH_TEMPLATE":744,"CLASS":30,"STRUCT":33,"INTERFACE":34,"ENUM":35,"DELEGATE":745,"attribute-section":107,"UNSAFE":190,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"NEW":192,"non-array-type":88,"array-type":89,"IDENTIFIER":85,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"WHERE":52}

item set 548 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":746,"OPEN_BRACE":547}

item set 549 
where-base -> where-units COMMA .NEW OPEN_PARENS CLOSE_PARENS 
transitions ->  {"NEW":747}

item set 550 
where-units -> where-units where-unit . 
transitions ->  {}

item set 551 
class-base -> COLON type-with-interr .
class-base -> COLON type-with-interr .COMMA interface-type-list
interface-type-list -> type-with-interr . 
transitions ->  {"COMMA":748}

item set 552 
class-base -> COLON interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":749}

item set 553 
where-unit -> WHERE type-name .COLON where-names 
transitions ->  {"COLON":750}

item set 554 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":751,"OPEN_BRACE":547}

item set 555 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":752,"where-units":361,"where-unit":363,"WHERE":364}

item set 556 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":753,"class-base":754,"where-units":361,"COLON":362,"where-unit":363,"WHERE":364}

item set 557 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":755,"struct-interfaces":756,"where-units":361,"COLON":383,"where-unit":363,"WHERE":364}

item set 558 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":757,"interface-base":758,"where-units":361,"COLON":386,"where-unit":363,"WHERE":364}

item set 559 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":759,"enum-base":760,"OPEN_BRACE":389,"COLON":390}

item set 560 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":761,"IDENTIFIER":85}

item set 561 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":762,"OPEN_BRACE":579}

item set 562 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":763,"where-units":361,"where-unit":363,"WHERE":364}

item set 563 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":764,"OPEN_BRACE":584}

item set 564 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":765,"where-units":361,"where-unit":363,"WHERE":364}

item set 565 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":766}

item set 566 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":767,"OPEN_BRACE":389}

item set 567 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":768}

item set 568 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":769,"OPEN_BRACE":547}

item set 569 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":770,"where-units":361,"where-unit":363,"WHERE":364}

item set 570 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":771,"OPEN_BRACE":579}

item set 571 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":772,"where-units":361,"where-unit":363,"WHERE":364}

item set 572 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":773,"OPEN_BRACE":584}

item set 573 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":774,"where-units":361,"where-unit":363,"WHERE":364}

item set 574 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":775}

item set 575 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":776,"OPEN_BRACE":389}

item set 576 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":777}

item set 577 
fixed-statement -> modifiers FIXED OPEN_PARENS type .local-variable-declarators CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":778,"rank-specifiers":225,"local-variable-declarator":218,"rank-specifier":228,"local-variable":219,"OPEN_BRACKET":229,"INTERR":220,"STARS":221,"IDENTIFIER_WITH_KEYWORD":222,"STAR":223,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 578 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":779}

item set 579 
struct-body -> OPEN_BRACE .CLOSE_BRACE
struct-body -> OPEN_BRACE .struct-member-declarations CLOSE_BRACE
struct-member-declarations -> .struct-member-declaration
struct-member-declarations -> .struct-member-declarations struct-member-declaration
struct-member-declaration -> .constant-declaration
struct-member-declaration -> .field-declaration
struct-member-declaration -> .method-declaration
struct-member-declaration -> .property-declaration
struct-member-declaration -> .event-declaration
struct-member-declaration -> .indexer-declaration
struct-member-declaration -> .operator-declaration
struct-member-declaration -> .constructor-declaration
struct-member-declaration -> .static-constructor-declaration
struct-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":780,"struct-member-declarations":781,"struct-member-declaration":782,"constant-declaration":783,"field-declaration":784,"method-declaration":785,"property-declaration":786,"event-declaration":787,"indexer-declaration":788,"operator-declaration":789,"constructor-declaration":790,"static-constructor-declaration":791,"type-declaration":792,"CONST":734,"attributes":793,"modifiers":736,"type-with-interr":738,"method-header":737,"EVENT":739,"indexer-declarator":740,"constructor-declarator":741,"class-declaration":9,"struct-declaration":10,"interface-declaration":11,"enum-declaration":12,"delegate-declaration":13,"attribute-sections":83,"modifier":84,"type":206,"IDENTIFIER_WITH_TEMPLATE":744,"CLASS":30,"STRUCT":33,"INTERFACE":34,"ENUM":35,"DELEGATE":745,"attribute-section":107,"UNSAFE":190,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"non-array-type":88,"array-type":89,"IDENTIFIER":85,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"WHERE":52}

item set 580 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":794,"OPEN_BRACE":579}

item set 581 
struct-interfaces -> COLON interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":749}

item set 582 
interface-type-list -> type-with-interr . 
transitions ->  {}

item set 583 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":795}

item set 584 
interface-body -> OPEN_BRACE .CLOSE_BRACE
interface-body -> OPEN_BRACE .interface-member-declarations CLOSE_BRACE
interface-member-declarations -> .interface-member-declaration
interface-member-declarations -> .interface-member-declarations interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-event-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
attributes -> .attribute-sections
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACE":796,"interface-member-declarations":797,"interface-member-declaration":798,"interface-method-declaration":799,"interface-property-declaration":800,"interface-event-declaration":801,"interface-indexer-declaration":802,"type-with-interr":803,"attributes":804,"NEW":805,"EVENT":806,"type":206,"attribute-sections":83,"non-array-type":88,"array-type":89,"attribute-section":107,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"OPEN_BRACKET":162,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 585 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":807,"OPEN_BRACE":584}

item set 586 
interface-base -> COLON interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":749}

item set 587 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 588 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":808}

item set 589 
enum-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 590 
enum-body -> OPEN_BRACE enum-member-declarations .CLOSE_BRACE
enum-body -> OPEN_BRACE enum-member-declarations .COMMA CLOSE_BRACE
enum-member-declarations -> enum-member-declarations .COMMA enum-member-declaration 
transitions ->  {"CLOSE_BRACE":809,"COMMA":810}

item set 591 
enum-member-declarations -> enum-member-declaration . 
transitions ->  {}

item set 592 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE .
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":811}

item set 593 
enum-member-declaration -> attributes .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> attributes .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":812,"IDENTIFIER":85}

item set 594 
enum-base -> COLON type-with-interr . 
transitions ->  {}

item set 595 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":813,"formal-parameter-list":814,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 596 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":815,"OPEN_BRACE":56}

item set 597 
delegate-expression -> DELEGATE OPEN_PARENS CLOSE_PARENS block . 
transitions ->  {}

item set 598 
formal-parameter-list -> fixed-parameters COMMA .parameter-array
fixed-parameters -> fixed-parameters COMMA .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"parameter-array":816,"fixed-parameter":817,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 599 
parameter-array -> PARAMS array-type .IDENTIFIER_WITH_TEMPLATE
type -> array-type .STARS
type -> array-type .
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":818,"STARS":251,"IDENTIFIER":85,"STAR":223}

item set 600 
parameter-array -> attributes PARAMS .array-type IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> PARAMS .
array-type -> .type rank-specifiers
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"array-type":819,"type":318,"non-array-type":88,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 601 
fixed-parameter -> attributes type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":820,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 602 
fixed-parameter -> attributes parameter-modifier .type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":821,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 603 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD .ASSIGN expression
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"ASSIGN":822}

item set 604 
fixed-parameter -> THIS type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":823,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 605 
fixed-parameter -> parameter-modifier type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":824,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 606 
local-variable-declarators -> local-variable-declarators COMMA local-variable-declarator . 
transitions ->  {}

item set 607 
invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 608 
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 609 
argument-list -> argument-list COLON .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":825,"expression":412,"REF":413,"OUT":414,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 610 
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":826,"expression":412,"REF":413,"OUT":414,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 611 
argument -> REF variable-reference . 
transitions ->  {}

item set 612 
variable-reference -> expression . 
transitions ->  {}

item set 613 
argument -> OUT variable-reference . 
transitions ->  {}

item set 614 
local-variable-declarator -> local-variable ASSIGN local-variable-initializer . 
transitions ->  {}

item set 615 
local-variable-initializer -> expression . 
transitions ->  {}

item set 616 
local-variable-initializer -> array-initializer . 
transitions ->  {}

item set 617 
rank-specifier -> OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 618 
dim-separators -> dim-separators COMMA . 
transitions ->  {}

item set 619 
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarator":827,"IDENTIFIER_WITH_TEMPLATE":429,"IDENTIFIER":85}

item set 620 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":828,"expression":486,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 621 
try-statement -> TRY block catch-clauses finally-clause . 
transitions ->  {}

item set 622 
catch-clauses -> specific-catch-clauses general-catch-clause . 
transitions ->  {}

item set 623 
specific-catch-clauses -> specific-catch-clauses specific-catch-clause . 
transitions ->  {}

item set 624 
finally-clause -> FINALLY block . 
transitions ->  {}

item set 625 
general-catch-clause -> CATCH block . 
transitions ->  {}

item set 626 
specific-catch-clause -> CATCH OPEN_PARENS .type CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS .type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":829,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 627 
checked-expression -> CHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 628 
unchecked-expression -> UNCHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 629 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":830,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 630 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":831,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 631 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators .CLOSE_PARENS embedded-statement
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"CLOSE_PARENS":832,"COMMA":407}

item set 632 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 633 
element-access -> primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 634 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":833,"COLON":609,"COMMA":610}

item set 635 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .block-expression-with-brace
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expressions":834,"block-expression-with-brace":835,"invocation-expression":90,"OPEN_BRACE":258,"AWAIT":154,"primary-expression":406,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 636 
object-creation-expression -> NEW type-with-identifier rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 637 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list .CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list .CLOSE_BRACKET
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_BRACKET":836,"COLON":609,"COMMA":610}

item set 638 
object-creation-expression -> NEW non-array-type rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 639 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list .CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list .CLOSE_BRACKET
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_BRACKET":837,"COLON":609,"COMMA":610}

item set 640 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":838,"COLON":609,"COMMA":610}

item set 641 
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS .block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":839,"OPEN_BRACE":258}

item set 642 
block-expression-with-brace -> OPEN_BRACE block-expression-list CLOSE_BRACE . 
transitions ->  {}

item set 643 
block-expression-list -> block-expression-list COMMA .block-expression-list-unit
block-expression-list-unit -> .block-expression-with-brace
block-expression-list-unit -> .expression
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-list-unit":840,"block-expression-with-brace":465,"expression":466,"OPEN_BRACE":258,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 644 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement ELSE embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":841,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 645 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS .switch-block
switch-block -> .OPEN_BRACE CLOSE_BRACE
switch-block -> .OPEN_BRACE switch-sections CLOSE_BRACE 
transitions ->  {"switch-block":842,"OPEN_BRACE":843}

item set 646 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":844,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 647 
do-statement -> DO embedded-statement WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS SEMICOLON
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":845,"expression":470,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 648 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":846,"for-iterator":847,"statement-expression-list":848,"statement-expression":478,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"invocation-expression":90,"NEW":281,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 649 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":849}

item set 650 
for-condition -> boolean-expression . 
transitions ->  {}

item set 651 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":850,"for-condition":851,"boolean-expression":650,"expression":470,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 652 
statement-expression-list -> statement-expression-list COMMA .statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement-expression":852,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"invocation-expression":90,"NEW":281,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 653 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD .IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"IN":853}

item set 654 
return-statement -> YIELD RETURN block-expression-with-brace SEMICOLON . 
transitions ->  {}

item set 655 
return-statement -> YIELD RETURN expression SEMICOLON . 
transitions ->  {}

item set 656 
goto-statement -> GOTO CASE constant-expression SEMICOLON . 
transitions ->  {}

item set 657 
conditional-expression -> conditional-or-expression INTERR expression .
conditional-expression -> conditional-or-expression INTERR expression .COLON expression 
transitions ->  {"COLON":854}

item set 658 
conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":492}

item set 659 
multiplicative-expression -> unary-expression . 
transitions ->  {}

item set 660 
conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":493}

item set 661 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":494}

item set 662 
exclusive-or-expression -> exclusive-or-expression CARET and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":495}

item set 663 
and-expression -> and-expression AMP equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":496,"OP_NE":497}

item set 664 
equality-expression -> equality-expression OP_EQ relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":498,"GT":499,"OP_LE":500,"OP_GE":501,"OP_COALESCING":502,"IS":503,"AS":504}

item set 665 
equality-expression -> equality-expression OP_NE relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":498,"GT":499,"OP_LE":500,"OP_GE":501,"OP_COALESCING":502,"IS":503,"AS":504}

item set 666 
relational-expression -> relational-expression LT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":505,"RIGHT_SHIFT":506}

item set 667 
relational-expression -> relational-expression GT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":505,"RIGHT_SHIFT":506}

item set 668 
relational-expression -> relational-expression OP_LE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":505,"RIGHT_SHIFT":506}

item set 669 
relational-expression -> relational-expression OP_GE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":505,"RIGHT_SHIFT":506}

item set 670 
relational-expression -> relational-expression OP_COALESCING shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":505,"RIGHT_SHIFT":506}

item set 671 
relational-expression -> relational-expression IS type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":225,"rank-specifier":228,"OPEN_BRACKET":229}

item set 672 
relational-expression -> relational-expression AS type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":225,"rank-specifier":228,"OPEN_BRACKET":229}

item set 673 
shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":507,"OP_PTR":508,"OP_COALESCING":509,"MINUS":510}

item set 674 
shift-expression -> shift-expression RIGHT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":507,"OP_PTR":508,"OP_COALESCING":509,"MINUS":510}

item set 675 
additive-expression -> additive-expression PLUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":511,"DIV":512,"PERCENT":513}

item set 676 
additive-expression -> additive-expression OP_PTR multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":511,"DIV":512,"PERCENT":513}

item set 677 
additive-expression -> additive-expression OP_COALESCING multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":511,"DIV":512,"PERCENT":513}

item set 678 
additive-expression -> additive-expression MINUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":511,"DIV":512,"PERCENT":513}

item set 679 
multiplicative-expression -> multiplicative-expression STAR unary-expression . 
transitions ->  {}

item set 680 
multiplicative-expression -> multiplicative-expression DIV unary-expression . 
transitions ->  {}

item set 681 
multiplicative-expression -> multiplicative-expression PERCENT unary-expression . 
transitions ->  {}

item set 682 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET .argument-list-with-brace
argument-list-with-brace -> .OPEN_BRACE argument-list COMMA CLOSE_BRACE
argument-list-with-brace -> .OPEN_BRACE argument-list CLOSE_BRACE
argument-list-with-brace -> .OPEN_BRACE CLOSE_BRACE 
transitions ->  {"argument-list-with-brace":855,"OPEN_BRACE":856}

item set 683 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":857,"COMMA":530}

item set 684 
array-initializer -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 685 
array-initializer -> OPEN_BRACE variable-initializer-list .CLOSE_BRACE
array-initializer -> OPEN_BRACE variable-initializer-list .COMMA CLOSE_BRACE
variable-initializer-list -> variable-initializer-list .COMMA variable-initializer 
transitions ->  {"CLOSE_BRACE":858,"COMMA":859}

item set 686 
variable-initializer-list -> variable-initializer . 
transitions ->  {}

item set 687 
variable-initializer -> expression .
variable-initializer -> expression . 
transitions ->  {}

item set 688 
variable-initializer -> array-initializer .
variable-initializer -> array-initializer . 
transitions ->  {}

item set 689 
invocation-expression -> AWAIT primary-expression OPEN_PARENS type .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS type .CLOSE_PARENS
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":860,"rank-specifiers":225,"DOT":226,"OP_PTR":227,"rank-specifier":228,"OPEN_BRACKET":229}

item set 690 
invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":861,"COLON":609,"COMMA":610}

item set 691 
invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 692 
attribute-section -> OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 693 
attribute-list -> attribute-list COMMA attribute . 
transitions ->  {}

item set 694 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 695 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":862,"attribute":693,"attribute-name":331,"type-name":339,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 696 
attribute-arguments -> OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 697 
attribute-arguments -> OPEN_PARENS positional-argument-list .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS positional-argument-list .COMMA named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list .COMMA positional-argument 
transitions ->  {"CLOSE_PARENS":863,"COMMA":864}

item set 698 
attribute-arguments -> OPEN_PARENS named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":865,"COMMA":866}

item set 699 
positional-argument-list -> positional-argument . 
transitions ->  {}

item set 700 
named-argument-list -> named-argument . 
transitions ->  {}

item set 701 
positional-argument -> attribute-argument-expression . 
transitions ->  {}

item set 702 
named-argument -> IDENTIFIER_WITH_TEMPLATE .ASSIGN attribute-argument-expression
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON member-access
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"ASSIGN":867,"DOUBLE_COLON":211}

item set 703 
attribute-argument-expression -> expression . 
transitions ->  {}

item set 704 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":868,"block":869,"conditional-expression":301,"assignment":302,"OPEN_BRACE":56,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 705 
dbl-expression-list -> dbl-expression-list COMMA expression .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":870,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 706 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":871,"block":872,"conditional-expression":301,"assignment":302,"OPEN_BRACE":56,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 707 
type-expression-list -> type-expression-list COMMA type .expression
array-type -> type .rank-specifiers
expression -> .conditional-expression
expression -> .assignment
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":873,"rank-specifiers":225,"conditional-expression":301,"assignment":302,"rank-specifier":228,"conditional-or-expression":303,"unary-expression":304,"OPEN_BRACKET":229,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 708 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":874,"block":875,"conditional-expression":301,"assignment":302,"OPEN_BRACE":56,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 709 
expression-list -> expression-list COMMA expression . 
transitions ->  {}

item set 710 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS .OP_DBLPTR expression block 
transitions ->  {"OP_DBLPTR":876}

item set 711 
member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":179}

item set 712 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR .expression block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":877,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 713 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS expression . 
transitions ->  {}

item set 714 
cast-expression -> OPEN_PARENS type-with-interr CLOSE_PARENS expression . 
transitions ->  {}

item set 715 
base-access -> BASE OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 716 
typeof-expression -> TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS . 
transitions ->  {}

item set 717 
sizeof-expression -> SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS . 
transitions ->  {}

item set 718 
switch-label -> CASE constant-expression COLON . 
transitions ->  {}

item set 719 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 720 
class-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 721 
class-body -> OPEN_BRACE class-member-declarations .CLOSE_BRACE
class-member-declarations -> class-member-declarations .class-member-declaration
class-member-declaration -> .constant-declaration
class-member-declaration -> .method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .event-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":878,"class-member-declaration":879,"constant-declaration":723,"method-declaration":724,"field-declaration":725,"property-declaration":726,"event-declaration":727,"indexer-declaration":728,"operator-declaration":729,"constructor-declaration":730,"static-constructor-declaration":731,"destructor-declaration":732,"type-declaration":733,"CONST":734,"attributes":735,"modifiers":736,"method-header":737,"type-with-interr":738,"EVENT":739,"indexer-declarator":740,"constructor-declarator":741,"TILDE":742,"EXTERN":743,"class-declaration":9,"struct-declaration":10,"interface-declaration":11,"enum-declaration":12,"delegate-declaration":13,"attribute-sections":83,"modifier":84,"type":206,"IDENTIFIER_WITH_TEMPLATE":744,"CLASS":30,"STRUCT":33,"INTERFACE":34,"ENUM":35,"DELEGATE":745,"attribute-section":107,"UNSAFE":190,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"NEW":192,"non-array-type":88,"array-type":89,"IDENTIFIER":85,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"WHERE":52}

item set 722 
class-member-declarations -> class-member-declaration . 
transitions ->  {}

item set 723 
class-member-declaration -> constant-declaration . 
transitions ->  {}

item set 724 
class-member-declaration -> method-declaration . 
transitions ->  {}

item set 725 
class-member-declaration -> field-declaration . 
transitions ->  {}

item set 726 
class-member-declaration -> property-declaration . 
transitions ->  {}

item set 727 
class-member-declaration -> event-declaration . 
transitions ->  {}

item set 728 
class-member-declaration -> indexer-declaration . 
transitions ->  {}

item set 729 
class-member-declaration -> operator-declaration . 
transitions ->  {}

item set 730 
class-member-declaration -> constructor-declaration . 
transitions ->  {}

item set 731 
class-member-declaration -> static-constructor-declaration . 
transitions ->  {}

item set 732 
class-member-declaration -> destructor-declaration . 
transitions ->  {}

item set 733 
class-member-declaration -> type-declaration . 
transitions ->  {}

item set 734 
constant-declaration -> CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":880,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 735 
constant-declaration -> attributes .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> attributes .modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes .type-with-interr member-name SEMICOLON
field-declaration -> attributes .modifiers type-with-interr member-name SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> attributes .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":881,"modifiers":882,"type-with-interr":883,"EVENT":884,"indexer-declarator":885,"constructor-declarator":886,"TILDE":887,"EXTERN":888,"CLASS":184,"STRUCT":186,"INTERFACE":187,"ENUM":188,"DELEGATE":189,"modifier":84,"type":206,"IDENTIFIER_WITH_TEMPLATE":744,"UNSAFE":190,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"NEW":192,"non-array-type":88,"array-type":89,"IDENTIFIER":85,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"WHERE":52}

item set 736 
constant-declaration -> modifiers .CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> modifiers .type-with-interr member-name SEMICOLON
property-declaration -> modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> modifiers .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> modifiers .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> modifiers .operator-declarator method-body
constructor-declaration -> modifiers .constructor-declarator method-body
static-constructor-declaration -> modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifiers -> modifiers .modifier
method-header -> modifiers .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> modifiers .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":889,"type-with-interr":890,"EVENT":891,"indexer-declarator":892,"operator-declarator":893,"constructor-declarator":894,"IDENTIFIER_WITH_TEMPLATE":895,"modifier":199,"CLASS":193,"STRUCT":194,"INTERFACE":195,"ENUM":196,"DELEGATE":197,"type":206,"unary-operator-declarator":896,"binary-operator-declarator":897,"conversion-operator-declarator":898,"IDENTIFIER":85,"UNSAFE":190,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"non-array-type":88,"array-type":89,"IMPLICIT":899,"EXPLICIT":900,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"WHERE":52}

item set 737 
method-declaration -> method-header .block
method-declaration -> method-header .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":901,"SEMICOLON":902,"OPEN_BRACE":56}

item set 738 
field-declaration -> type-with-interr .member-name SEMICOLON
property-declaration -> type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":903,"THIS":904,"variable-declarators":905,"variable-declarator":906,"type-name":907,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 739 
event-declaration -> EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":908,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 740 
indexer-declaration -> indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":909}

item set 741 
constructor-declaration -> constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":910,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 742 
destructor-declaration -> TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":913,"IDENTIFIER":85}

item set 743 
destructor-declaration -> EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":914}

item set 744 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":915}

item set 745 
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":203,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 746 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":916}

item set 747 
where-base -> where-units COMMA NEW .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":917}

item set 748 
class-base -> COLON type-with-interr COMMA .interface-type-list
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"interface-type-list":918,"type-with-interr":582,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 749 
interface-type-list -> interface-type-list COMMA .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":919,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 750 
where-unit -> WHERE type-name COLON .where-names
where-names -> .where-names COMMA where-name
where-names -> .where-name
where-name -> .type-name
where-name -> .type
where-name -> .CLASS
where-name -> .STRUCT
where-name -> .NEW OPEN_PARENS CLOSE_PARENS
type-name -> .namespace-or-type-name
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"where-names":920,"where-name":921,"type-name":922,"type":923,"CLASS":924,"STRUCT":925,"NEW":926,"namespace-or-type-name":173,"non-array-type":88,"array-type":89,"IDENTIFIER_WITH_KEYWORD":207,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 751 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":927}

item set 752 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":928,"OPEN_BRACE":547}

item set 753 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":929,"OPEN_BRACE":547}

item set 754 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":930,"where-units":361,"where-unit":363,"WHERE":364}

item set 755 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":931,"OPEN_BRACE":579}

item set 756 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":932,"where-units":361,"where-unit":363,"WHERE":364}

item set 757 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":933,"OPEN_BRACE":584}

item set 758 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":934,"where-units":361,"where-unit":363,"WHERE":364}

item set 759 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":935}

item set 760 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":936,"OPEN_BRACE":389}

item set 761 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":937}

item set 762 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":938}

item set 763 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":939,"OPEN_BRACE":579}

item set 764 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":940}

item set 765 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":941,"OPEN_BRACE":584}

item set 766 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 767 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":942}

item set 768 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":943,"formal-parameter-list":944,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 769 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":945}

item set 770 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":946,"OPEN_BRACE":547}

item set 771 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":947}

item set 772 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":948,"OPEN_BRACE":579}

item set 773 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":949}

item set 774 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":950,"OPEN_BRACE":584}

item set 775 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 776 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":951}

item set 777 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":952,"formal-parameter-list":953,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 778 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators .CLOSE_PARENS embedded-statement
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"CLOSE_PARENS":954,"COMMA":407}

item set 779 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 780 
struct-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 781 
struct-body -> OPEN_BRACE struct-member-declarations .CLOSE_BRACE
struct-member-declarations -> struct-member-declarations .struct-member-declaration
struct-member-declaration -> .constant-declaration
struct-member-declaration -> .field-declaration
struct-member-declaration -> .method-declaration
struct-member-declaration -> .property-declaration
struct-member-declaration -> .event-declaration
struct-member-declaration -> .indexer-declaration
struct-member-declaration -> .operator-declaration
struct-member-declaration -> .constructor-declaration
struct-member-declaration -> .static-constructor-declaration
struct-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":955,"struct-member-declaration":956,"constant-declaration":783,"field-declaration":784,"method-declaration":785,"property-declaration":786,"event-declaration":787,"indexer-declaration":788,"operator-declaration":789,"constructor-declaration":790,"static-constructor-declaration":791,"type-declaration":792,"CONST":734,"attributes":793,"modifiers":736,"type-with-interr":738,"method-header":737,"EVENT":739,"indexer-declarator":740,"constructor-declarator":741,"class-declaration":9,"struct-declaration":10,"interface-declaration":11,"enum-declaration":12,"delegate-declaration":13,"attribute-sections":83,"modifier":84,"type":206,"IDENTIFIER_WITH_TEMPLATE":744,"CLASS":30,"STRUCT":33,"INTERFACE":34,"ENUM":35,"DELEGATE":745,"attribute-section":107,"UNSAFE":190,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"non-array-type":88,"array-type":89,"IDENTIFIER":85,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"WHERE":52}

item set 782 
struct-member-declarations -> struct-member-declaration . 
transitions ->  {}

item set 783 
struct-member-declaration -> constant-declaration . 
transitions ->  {}

item set 784 
struct-member-declaration -> field-declaration . 
transitions ->  {}

item set 785 
struct-member-declaration -> method-declaration . 
transitions ->  {}

item set 786 
struct-member-declaration -> property-declaration . 
transitions ->  {}

item set 787 
struct-member-declaration -> event-declaration . 
transitions ->  {}

item set 788 
struct-member-declaration -> indexer-declaration . 
transitions ->  {}

item set 789 
struct-member-declaration -> operator-declaration . 
transitions ->  {}

item set 790 
struct-member-declaration -> constructor-declaration . 
transitions ->  {}

item set 791 
struct-member-declaration -> static-constructor-declaration . 
transitions ->  {}

item set 792 
struct-member-declaration -> type-declaration . 
transitions ->  {}

item set 793 
constant-declaration -> attributes .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> attributes .modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes .type-with-interr member-name SEMICOLON
field-declaration -> attributes .modifiers type-with-interr member-name SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> attributes .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":881,"modifiers":882,"type-with-interr":883,"EVENT":884,"indexer-declarator":885,"constructor-declarator":886,"CLASS":184,"STRUCT":186,"INTERFACE":187,"ENUM":188,"DELEGATE":189,"modifier":84,"type":206,"IDENTIFIER_WITH_TEMPLATE":744,"UNSAFE":190,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"non-array-type":88,"array-type":89,"IDENTIFIER":85,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"WHERE":52}

item set 794 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":957}

item set 795 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 796 
interface-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 797 
interface-body -> OPEN_BRACE interface-member-declarations .CLOSE_BRACE
interface-member-declarations -> interface-member-declarations .interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-event-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
attributes -> .attribute-sections
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACE":958,"interface-member-declaration":959,"interface-method-declaration":799,"interface-property-declaration":800,"interface-event-declaration":801,"interface-indexer-declaration":802,"type-with-interr":803,"attributes":804,"NEW":805,"EVENT":806,"type":206,"attribute-sections":83,"non-array-type":88,"array-type":89,"attribute-section":107,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"OPEN_BRACKET":162,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 798 
interface-member-declarations -> interface-member-declaration . 
transitions ->  {}

item set 799 
interface-member-declaration -> interface-method-declaration . 
transitions ->  {}

item set 800 
interface-member-declaration -> interface-property-declaration . 
transitions ->  {}

item set 801 
interface-member-declaration -> interface-event-declaration . 
transitions ->  {}

item set 802 
interface-member-declaration -> interface-indexer-declaration . 
transitions ->  {}

item set 803 
interface-method-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":960,"THIS":961,"IDENTIFIER":85}

item set 804 
interface-method-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> attributes .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> attributes .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> attributes .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":962,"NEW":963,"EVENT":964,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 805 
interface-method-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> NEW .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> NEW .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":965,"EVENT":966,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 806 
interface-event-declaration -> EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":967,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 807 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":968}

item set 808 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 809 
enum-body -> OPEN_BRACE enum-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 810 
enum-body -> OPEN_BRACE enum-member-declarations COMMA .CLOSE_BRACE
enum-member-declarations -> enum-member-declarations COMMA .enum-member-declaration
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":969,"enum-member-declaration":970,"IDENTIFIER_WITH_TEMPLATE":592,"attributes":593,"IDENTIFIER":85,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 811 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":971,"expression":486,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 812 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE .
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":972}

item set 813 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":973,"where-units":361,"where-unit":363,"WHERE":364}

item set 814 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":974}

item set 815 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block . 
transitions ->  {}

item set 816 
formal-parameter-list -> fixed-parameters COMMA parameter-array . 
transitions ->  {}

item set 817 
fixed-parameters -> fixed-parameters COMMA fixed-parameter . 
transitions ->  {}

item set 818 
parameter-array -> PARAMS array-type IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 819 
parameter-array -> attributes PARAMS array-type .IDENTIFIER_WITH_TEMPLATE
type -> array-type .STARS
type -> array-type .
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":975,"STARS":251,"IDENTIFIER":85,"STAR":223}

item set 820 
fixed-parameter -> attributes type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 821 
fixed-parameter -> attributes parameter-modifier type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":976,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 822 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":977,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 823 
fixed-parameter -> THIS type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 824 
fixed-parameter -> parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 825 
argument-list -> argument-list COLON argument . 
transitions ->  {}

item set 826 
argument-list -> argument-list COMMA argument . 
transitions ->  {}

item set 827 
constant-declarators -> constant-declarators COMMA constant-declarator .
constant-declarators -> constant-declarators COMMA constant-declarator . 
transitions ->  {}

item set 828 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression .
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 829 
specific-catch-clause -> CATCH OPEN_PARENS type .CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS type .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
array-type -> type .rank-specifiers
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":978,"IDENTIFIER_WITH_TEMPLATE":979,"rank-specifiers":225,"IDENTIFIER":85,"rank-specifier":228,"OPEN_BRACKET":229}

item set 830 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 831 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 832 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":980,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 833 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expressions":981,"invocation-expression":90,"AWAIT":154,"primary-expression":406,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 834 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> .DOT IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> . 
transitions ->  {"IDENTIFIER_WITH_DOT":982,"DOT":983,"OP_PTR":237}

item set 835 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 836 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":984,"OPEN_BRACE":258}

item set 837 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET .block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":985,"OPEN_BRACE":258}

item set 838 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS .block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":986,"OPEN_BRACE":258}

item set 839 
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 840 
block-expression-list -> block-expression-list COMMA block-expression-list-unit . 
transitions ->  {}

item set 841 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .ELSE embedded-statement 
transitions ->  {"ELSE":987}

item set 842 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block . 
transitions ->  {}

item set 843 
switch-block -> OPEN_BRACE .CLOSE_BRACE
switch-block -> OPEN_BRACE .switch-sections CLOSE_BRACE
switch-sections -> .switch-sections switch-section
switch-sections -> .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":988,"switch-sections":989,"switch-section":990,"switch-labels":991,"switch-label":354,"CASE":355,"DEFAULT":543}

item set 844 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 845 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":992}

item set 846 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":993,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 847 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":994}

item set 848 
for-iterator -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":652}

item set 849 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":995,"for-iterator":996,"statement-expression-list":848,"statement-expression":478,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"invocation-expression":90,"NEW":281,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 850 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":997,"for-iterator":998,"statement-expression-list":848,"statement-expression":478,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"invocation-expression":90,"NEW":281,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 851 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":999}

item set 852 
statement-expression-list -> statement-expression-list COMMA statement-expression . 
transitions ->  {}

item set 853 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1000,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 854 
conditional-expression -> conditional-or-expression INTERR expression COLON .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1001,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 855 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace . 
transitions ->  {}

item set 856 
argument-list-with-brace -> OPEN_BRACE .argument-list COMMA CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE .argument-list CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE .CLOSE_BRACE
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":1002,"CLOSE_BRACE":1003,"argument":411,"expression":412,"REF":413,"OUT":414,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 857 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers array-initializer
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":1004,"array-initializer":1005,"rank-specifier":228,"OPEN_BRACE":517,"OPEN_BRACKET":229}

item set 858 
array-initializer -> OPEN_BRACE variable-initializer-list CLOSE_BRACE . 
transitions ->  {}

item set 859 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA .CLOSE_BRACE
variable-initializer-list -> variable-initializer-list COMMA .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":1006,"variable-initializer":1007,"expression":687,"array-initializer":688,"conditional-expression":301,"assignment":302,"OPEN_BRACE":517,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 860 
invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 861 
invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 862 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 863 
attribute-arguments -> OPEN_PARENS positional-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 864 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA .named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list COMMA .positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"named-argument-list":1008,"positional-argument":1009,"named-argument":700,"attribute-argument-expression":701,"IDENTIFIER_WITH_TEMPLATE":702,"expression":703,"IDENTIFIER":85,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 865 
attribute-arguments -> OPEN_PARENS named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 866 
named-argument-list -> named-argument-list COMMA .named-argument
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"named-argument":1010,"IDENTIFIER_WITH_TEMPLATE":1011,"IDENTIFIER":85}

item set 867 
named-argument -> IDENTIFIER_WITH_TEMPLATE ASSIGN .attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"attribute-argument-expression":1012,"expression":703,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 868 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 869 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 870 
dbl-expression-list -> dbl-expression-list COMMA expression expression . 
transitions ->  {}

item set 871 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 872 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 873 
type-expression-list -> type-expression-list COMMA type expression . 
transitions ->  {}

item set 874 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 875 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 876 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR .expression block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1013,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 877 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression .block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1014,"OPEN_BRACE":56}

item set 878 
class-body -> OPEN_BRACE class-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 879 
class-member-declarations -> class-member-declarations class-member-declaration . 
transitions ->  {}

item set 880 
constant-declaration -> CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1015,"constant-declarator":428,"IDENTIFIER_WITH_TEMPLATE":429,"IDENTIFIER":85}

item set 881 
constant-declaration -> attributes CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1016,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 882 
constant-declaration -> attributes modifiers .CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes modifiers .type-with-interr member-name SEMICOLON
property-declaration -> attributes modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes modifiers .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes modifiers .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes modifiers .operator-declarator method-body
constructor-declaration -> attributes modifiers .constructor-declarator method-body
static-constructor-declaration -> attributes modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes modifiers .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes modifiers .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":1017,"type-with-interr":1018,"EVENT":1019,"indexer-declarator":1020,"operator-declarator":1021,"constructor-declarator":1022,"IDENTIFIER_WITH_TEMPLATE":1023,"CLASS":366,"STRUCT":367,"INTERFACE":368,"ENUM":369,"DELEGATE":370,"modifier":199,"type":206,"unary-operator-declarator":896,"binary-operator-declarator":897,"conversion-operator-declarator":898,"IDENTIFIER":85,"UNSAFE":190,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"non-array-type":88,"array-type":89,"IMPLICIT":899,"EXPLICIT":900,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"WHERE":52}

item set 883 
field-declaration -> attributes type-with-interr .member-name SEMICOLON
property-declaration -> attributes type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":1024,"THIS":904,"variable-declarators":905,"variable-declarator":906,"type-name":907,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 884 
event-declaration -> attributes EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1025,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 885 
indexer-declaration -> attributes indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1026}

item set 886 
constructor-declaration -> attributes constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1027,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 887 
destructor-declaration -> attributes TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1028,"IDENTIFIER":85}

item set 888 
destructor-declaration -> attributes EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":1029}

item set 889 
constant-declaration -> modifiers CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1030,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 890 
field-declaration -> modifiers type-with-interr .member-name SEMICOLON
property-declaration -> modifiers type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> modifiers type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> modifiers type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
unary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":1031,"THIS":904,"OPERATOR":1032,"variable-declarators":905,"variable-declarator":906,"type-name":907,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 891 
event-declaration -> modifiers EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> modifiers EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1033,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 892 
indexer-declaration -> modifiers indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1034}

item set 893 
operator-declaration -> modifiers operator-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1035,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 894 
constructor-declaration -> modifiers constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1036,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 895 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":1037}

item set 896 
operator-declarator -> unary-operator-declarator . 
transitions ->  {}

item set 897 
operator-declarator -> binary-operator-declarator . 
transitions ->  {}

item set 898 
operator-declarator -> conversion-operator-declarator . 
transitions ->  {}

item set 899 
conversion-operator-declarator -> IMPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPERATOR":1038}

item set 900 
conversion-operator-declarator -> EXPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPERATOR":1039}

item set 901 
method-declaration -> method-header block . 
transitions ->  {}

item set 902 
method-declaration -> method-header SEMICOLON . 
transitions ->  {}

item set 903 
field-declaration -> type-with-interr member-name .SEMICOLON
property-declaration -> type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1040,"OPEN_BRACE":1041,"OPEN_PARENS":1042,"OPEN_BRACKET":1043}

item set 904 
indexer-declarator -> type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {"OPEN_BRACKET":1044}

item set 905 
member-name -> variable-declarators .
variable-declarators -> variable-declarators .COMMA variable-declarator 
transitions ->  {"COMMA":1045}

item set 906 
variable-declarators -> variable-declarator . 
transitions ->  {}

item set 907 
variable-declarator -> type-name .ASSIGN variable-initializer
variable-declarator -> type-name . 
transitions ->  {"ASSIGN":1046}

item set 908 
event-declaration -> EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1047,"member-name":1048,"variable-declarator":906,"type-name":907,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 909 
indexer-declaration -> indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1049,"get-accessor-declaration":1050,"set-accessor-declaration":1051,"attributes":1052,"modifiers":1053,"GET":1054,"SET":1055,"attribute-sections":83,"modifier":84,"attribute-section":107,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"OPEN_BRACKET":162}

item set 910 
constructor-declaration -> constructor-declarator method-body . 
transitions ->  {}

item set 911 
method-body -> block . 
transitions ->  {}

item set 912 
method-body -> SEMICOLON . 
transitions ->  {}

item set 913 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1056}

item set 914 
destructor-declaration -> EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1057,"IDENTIFIER":85}

item set 915 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1058,"formal-parameter-list":1059,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 916 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 917 
where-base -> where-units COMMA NEW OPEN_PARENS .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1060}

item set 918 
class-base -> COLON type-with-interr COMMA interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":749}

item set 919 
interface-type-list -> interface-type-list COMMA type-with-interr . 
transitions ->  {}

item set 920 
where-unit -> WHERE type-name COLON where-names .
where-names -> where-names .COMMA where-name 
transitions ->  {"COMMA":1061}

item set 921 
where-names -> where-name . 
transitions ->  {}

item set 922 
where-name -> type-name .
non-array-type -> type-name . 
transitions ->  {}

item set 923 
where-name -> type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":225,"rank-specifier":228,"OPEN_BRACKET":229}

item set 924 
where-name -> CLASS . 
transitions ->  {}

item set 925 
where-name -> STRUCT . 
transitions ->  {}

item set 926 
where-name -> NEW .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1062}

item set 927 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 928 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":1063}

item set 929 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":1064}

item set 930 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":1065,"OPEN_BRACE":547}

item set 931 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1066}

item set 932 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1067,"OPEN_BRACE":579}

item set 933 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1068}

item set 934 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1069,"OPEN_BRACE":584}

item set 935 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 936 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1070}

item set 937 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1071,"formal-parameter-list":1072,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 938 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 939 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1073}

item set 940 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 941 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1074}

item set 942 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 943 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1075,"where-units":361,"where-unit":363,"WHERE":364}

item set 944 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1076}

item set 945 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 946 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":1077}

item set 947 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 948 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1078}

item set 949 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 950 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1079}

item set 951 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 952 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1080,"where-units":361,"where-unit":363,"WHERE":364}

item set 953 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1081}

item set 954 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1082,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 955 
struct-body -> OPEN_BRACE struct-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 956 
struct-member-declarations -> struct-member-declarations struct-member-declaration . 
transitions ->  {}

item set 957 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 958 
interface-body -> OPEN_BRACE interface-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 959 
interface-member-declarations -> interface-member-declarations interface-member-declaration . 
transitions ->  {}

item set 960 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1083,"OPEN_BRACE":1084}

item set 961 
interface-indexer-declaration -> type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1085}

item set 962 
interface-method-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1086,"THIS":1087,"IDENTIFIER":85}

item set 963 
interface-method-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> attributes NEW .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> attributes NEW .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1088,"EVENT":1089,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 964 
interface-event-declaration -> attributes EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1090,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 965 
interface-method-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> NEW type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1091,"THIS":1092,"IDENTIFIER":85}

item set 966 
interface-event-declaration -> NEW EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1093,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 967 
interface-event-declaration -> EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1094,"IDENTIFIER":85}

item set 968 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 969 
enum-body -> OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE . 
transitions ->  {}

item set 970 
enum-member-declarations -> enum-member-declarations COMMA enum-member-declaration . 
transitions ->  {}

item set 971 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 972 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1095,"expression":486,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 973 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1096}

item set 974 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1097,"where-units":361,"where-unit":363,"WHERE":364}

item set 975 
parameter-array -> attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 976 
fixed-parameter -> attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 977 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression . 
transitions ->  {}

item set 978 
specific-catch-clause -> CATCH OPEN_PARENS type CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1098,"OPEN_BRACE":56}

item set 979 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":1099}

item set 980 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 981 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> .DOT IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> . 
transitions ->  {"IDENTIFIER_WITH_DOT":1100,"DOT":983,"OP_PTR":237}

item set 982 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1101,"OPEN_BRACE":258}

item set 983 
invocation-expressions -> invocation-expressions DOT .invocation-expression
member-access -> invocation-expressions DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> DOT .IDENTIFIER_WITH_KEYWORD
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expression":432,"IDENTIFIER_WITH_KEYWORD":1102,"AWAIT":154,"primary-expression":406,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":210,"WHERE":52,"primary-no-array-creation-expression":86,"array-creation-expression":87,"IDENTIFIER":85,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"type":280,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"TRUE":174,"FALSE":175,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 984 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace . 
transitions ->  {}

item set 985 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace . 
transitions ->  {}

item set 986 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 987 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1103,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 988 
switch-block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 989 
switch-block -> OPEN_BRACE switch-sections .CLOSE_BRACE
switch-sections -> switch-sections .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":1104,"switch-section":1105,"switch-labels":991,"switch-label":354,"CASE":355,"DEFAULT":543}

item set 990 
switch-sections -> switch-section . 
transitions ->  {}

item set 991 
switch-section -> switch-labels .statement-list
switch-labels -> switch-labels .switch-label
statement-list -> .statement
statement-list -> .statement-list statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement-list":1106,"switch-label":542,"statement":233,"CASE":355,"DEFAULT":356,"labeled-statement":6,"declaration-statement":7,"embedded-statement":8,"IDENTIFIER_WITH_KEYWORD":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":51,"WHERE":52,"primary-expression":53,"type":54,"CONST":55,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"IDENTIFIER":85,"primary-no-array-creation-expression":86,"array-creation-expression":87,"non-array-type":88,"array-type":89,"invocation-expression":90,"NEW":91,"unary-expression":92,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"BASE":170,"TYPEOF":171,"SIZEOF":172,"namespace-or-type-name":173,"TRUE":174,"FALSE":175}

item set 992 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":1107}

item set 993 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 994 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1108,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 995 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1109,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 996 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1110}

item set 997 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1111,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 998 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1112}

item set 999 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1113,"for-iterator":1114,"statement-expression-list":848,"statement-expression":478,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"invocation-expression":90,"NEW":281,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 1000 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1115}

item set 1001 
conditional-expression -> conditional-or-expression INTERR expression COLON expression . 
transitions ->  {}

item set 1002 
argument-list-with-brace -> OPEN_BRACE argument-list .COMMA CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE argument-list .CLOSE_BRACE
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"COMMA":1116,"CLOSE_BRACE":1117,"COLON":609}

item set 1003 
argument-list-with-brace -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1004 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .array-initializer
rank-specifiers -> rank-specifiers .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"array-initializer":1118,"rank-specifier":421,"OPEN_BRACE":517,"OPEN_BRACKET":229}

item set 1005 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer . 
transitions ->  {}

item set 1006 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1007 
variable-initializer-list -> variable-initializer-list COMMA variable-initializer . 
transitions ->  {}

item set 1008 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":1119,"COMMA":866}

item set 1009 
positional-argument-list -> positional-argument-list COMMA positional-argument . 
transitions ->  {}

item set 1010 
named-argument-list -> named-argument-list COMMA named-argument . 
transitions ->  {}

item set 1011 
named-argument -> IDENTIFIER_WITH_TEMPLATE .ASSIGN attribute-argument-expression 
transitions ->  {"ASSIGN":867}

item set 1012 
named-argument -> IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression . 
transitions ->  {}

item set 1013 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1120,"OPEN_BRACE":56}

item set 1014 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block . 
transitions ->  {}

item set 1015 
constant-declaration -> CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1121,"COMMA":619}

item set 1016 
constant-declaration -> attributes CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1122,"constant-declarator":428,"IDENTIFIER_WITH_TEMPLATE":429,"IDENTIFIER":85}

item set 1017 
constant-declaration -> attributes modifiers CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1123,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1018 
field-declaration -> attributes modifiers type-with-interr .member-name SEMICOLON
property-declaration -> attributes modifiers type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes modifiers type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes modifiers type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
unary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":1124,"THIS":904,"OPERATOR":1032,"variable-declarators":905,"variable-declarator":906,"type-name":907,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1019 
event-declaration -> attributes modifiers EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes modifiers EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1125,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1020 
indexer-declaration -> attributes modifiers indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1126}

item set 1021 
operator-declaration -> attributes modifiers operator-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1127,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1022 
constructor-declaration -> attributes modifiers constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1128,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1023 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":1129}

item set 1024 
field-declaration -> attributes type-with-interr member-name .SEMICOLON
property-declaration -> attributes type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1130,"OPEN_BRACE":1131,"OPEN_PARENS":1132,"OPEN_BRACKET":1043}

item set 1025 
event-declaration -> attributes EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> attributes EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1133,"member-name":1134,"variable-declarator":906,"type-name":907,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1026 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1135,"get-accessor-declaration":1050,"set-accessor-declaration":1051,"attributes":1052,"modifiers":1053,"GET":1054,"SET":1055,"attribute-sections":83,"modifier":84,"attribute-section":107,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"OPEN_BRACKET":162}

item set 1027 
constructor-declaration -> attributes constructor-declarator method-body . 
transitions ->  {}

item set 1028 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1136}

item set 1029 
destructor-declaration -> attributes EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1137,"IDENTIFIER":85}

item set 1030 
constant-declaration -> modifiers CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1138,"constant-declarator":428,"IDENTIFIER_WITH_TEMPLATE":429,"IDENTIFIER":85}

item set 1031 
field-declaration -> modifiers type-with-interr member-name .SEMICOLON
property-declaration -> modifiers type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> modifiers type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> modifiers type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1139,"OPEN_BRACE":1140,"OPEN_PARENS":1141,"OPEN_BRACKET":1043}

item set 1032 
unary-operator-declarator -> type-with-interr OPERATOR .overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR .overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
overloadable-operator -> .overloadable-unary-operator
overloadable-operator -> .overloadable-binary-operator
overloadable-unary-operator -> .OP_INC
overloadable-unary-operator -> .OP_DEC
overloadable-unary-operator -> .MINUS
overloadable-unary-operator -> .BANG
overloadable-unary-operator -> .TILDE
overloadable-unary-operator -> .PLUS
overloadable-unary-operator -> .TRUE
overloadable-unary-operator -> .FALSE
overloadable-binary-operator -> .PLUS
overloadable-binary-operator -> .MINUS
overloadable-binary-operator -> .STAR
overloadable-binary-operator -> .DIV
overloadable-binary-operator -> .PERCENT
overloadable-binary-operator -> .AMP
overloadable-binary-operator -> .BITWISE_OR
overloadable-binary-operator -> .CARET
overloadable-binary-operator -> .OP_LEFT_SHIFT
overloadable-binary-operator -> .RIGHT_SHIFT
overloadable-binary-operator -> .OP_EQ
overloadable-binary-operator -> .OP_NE
overloadable-binary-operator -> .OP_GE
overloadable-binary-operator -> .OP_LE
overloadable-binary-operator -> .GT
overloadable-binary-operator -> .LT 
transitions ->  {"overloadable-operator":1142,"overloadable-unary-operator":1143,"overloadable-binary-operator":1144,"OP_INC":1145,"OP_DEC":1146,"MINUS":1147,"BANG":1148,"TILDE":1149,"PLUS":1150,"TRUE":1151,"FALSE":1152,"STAR":1153,"DIV":1154,"PERCENT":1155,"AMP":1156,"BITWISE_OR":1157,"CARET":1158,"OP_LEFT_SHIFT":1159,"RIGHT_SHIFT":1160,"OP_EQ":1161,"OP_NE":1162,"OP_GE":1163,"OP_LE":1164,"GT":1165,"LT":1166}

item set 1033 
event-declaration -> modifiers EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> modifiers EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1167,"member-name":1168,"variable-declarator":906,"type-name":907,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1034 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1169,"get-accessor-declaration":1050,"set-accessor-declaration":1051,"attributes":1052,"modifiers":1053,"GET":1054,"SET":1055,"attribute-sections":83,"modifier":84,"attribute-section":107,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"OPEN_BRACKET":162}

item set 1035 
operator-declaration -> modifiers operator-declarator method-body . 
transitions ->  {}

item set 1036 
constructor-declaration -> modifiers constructor-declarator method-body . 
transitions ->  {}

item set 1037 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1170,"formal-parameter-list":1059,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1038 
conversion-operator-declarator -> IMPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1171,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1039 
conversion-operator-declarator -> EXPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1172,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1040 
field-declaration -> type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1041 
property-declaration -> type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1173,"get-accessor-declaration":1050,"set-accessor-declaration":1051,"attributes":1052,"modifiers":1053,"GET":1054,"SET":1055,"attribute-sections":83,"modifier":84,"attribute-section":107,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"OPEN_BRACKET":162}

item set 1042 
method-header -> type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1174,"formal-parameter-list":1175,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1043 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1176,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1044 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1177,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1045 
variable-declarators -> variable-declarators COMMA .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarator":1178,"type-name":907,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1046 
variable-declarator -> type-name ASSIGN .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-initializer":1179,"expression":687,"array-initializer":688,"conditional-expression":301,"assignment":302,"OPEN_BRACE":517,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 1047 
event-declaration -> EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1180,"COMMA":1045}

item set 1048 
event-declaration -> EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1181}

item set 1049 
indexer-declaration -> indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1182}

item set 1050 
accessor-declarations -> get-accessor-declaration .
accessor-declarations -> get-accessor-declaration .set-accessor-declaration
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"set-accessor-declaration":1183,"attributes":1184,"modifiers":1185,"SET":1055,"attribute-sections":83,"modifier":84,"attribute-section":107,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"OPEN_BRACKET":162}

item set 1051 
accessor-declarations -> set-accessor-declaration .
accessor-declarations -> set-accessor-declaration .get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"get-accessor-declaration":1186,"attributes":1187,"modifiers":1188,"GET":1054,"attribute-sections":83,"modifier":84,"attribute-section":107,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"OPEN_BRACKET":162}

item set 1052 
get-accessor-declaration -> attributes .modifiers GET method-body
get-accessor-declaration -> attributes .GET method-body
set-accessor-declaration -> attributes .modifiers SET method-body
set-accessor-declaration -> attributes .SET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1189,"GET":1190,"SET":1191,"modifier":84,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 1053 
get-accessor-declaration -> modifiers .GET method-body
set-accessor-declaration -> modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1192,"SET":1193,"modifier":199,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 1054 
get-accessor-declaration -> GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1194,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1055 
set-accessor-declaration -> SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1195,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1056 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1196}

item set 1057 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1197}

item set 1058 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"constructor-initializer":1198,"COLON":1199}

item set 1059 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS constructor-initializer 
transitions ->  {"CLOSE_PARENS":1200}

item set 1060 
where-base -> where-units COMMA NEW OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1061 
where-names -> where-names COMMA .where-name
where-name -> .type-name
where-name -> .type
where-name -> .CLASS
where-name -> .STRUCT
where-name -> .NEW OPEN_PARENS CLOSE_PARENS
type-name -> .namespace-or-type-name
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"where-name":1201,"type-name":922,"type":923,"CLASS":924,"STRUCT":925,"NEW":926,"namespace-or-type-name":173,"non-array-type":88,"array-type":89,"IDENTIFIER_WITH_KEYWORD":207,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1062 
where-name -> NEW OPEN_PARENS .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1202}

item set 1063 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 1064 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 1065 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":1203}

item set 1066 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1067 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1204}

item set 1068 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1069 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1205}

item set 1070 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 1071 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1206,"where-units":361,"where-unit":363,"WHERE":364}

item set 1072 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1207}

item set 1073 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1074 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1075 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1208}

item set 1076 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1209,"where-units":361,"where-unit":363,"WHERE":364}

item set 1077 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 1078 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1079 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1080 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1210}

item set 1081 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1211,"where-units":361,"where-unit":363,"WHERE":364}

item set 1082 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1083 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1212,"formal-parameter-list":1213,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1084 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1214,"attributes":1215,"SET":1216,"GET":1217,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1085 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1218,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1086 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1219,"OPEN_BRACE":1220}

item set 1087 
interface-indexer-declaration -> attributes type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1221}

item set 1088 
interface-method-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes NEW type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1222,"THIS":1223,"IDENTIFIER":85}

item set 1089 
interface-event-declaration -> attributes NEW EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1224,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1090 
interface-event-declaration -> attributes EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1225,"IDENTIFIER":85}

item set 1091 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1226,"OPEN_BRACE":1227}

item set 1092 
interface-indexer-declaration -> NEW type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1228}

item set 1093 
interface-event-declaration -> NEW EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1229,"IDENTIFIER":85}

item set 1094 
interface-event-declaration -> EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1230}

item set 1095 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 1096 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1097 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1231}

item set 1098 
specific-catch-clause -> CATCH OPEN_PARENS type CLOSE_PARENS block . 
transitions ->  {}

item set 1099 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1232,"OPEN_BRACE":56}

item set 1100 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1233,"OPEN_BRACE":258}

item set 1101 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace . 
transitions ->  {}

item set 1102 
member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD .
IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":179}

item set 1103 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement . 
transitions ->  {}

item set 1104 
switch-block -> OPEN_BRACE switch-sections CLOSE_BRACE . 
transitions ->  {}

item set 1105 
switch-sections -> switch-sections switch-section . 
transitions ->  {}

item set 1106 
switch-section -> switch-labels statement-list .
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement":431,"labeled-statement":6,"declaration-statement":7,"embedded-statement":8,"IDENTIFIER_WITH_KEYWORD":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"IDENTIFIER_WITH_TEMPLATE":37,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":50,"ASYNC":51,"WHERE":52,"primary-expression":53,"type":54,"CONST":55,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"IDENTIFIER":85,"primary-no-array-creation-expression":86,"array-creation-expression":87,"non-array-type":88,"array-type":89,"invocation-expression":90,"NEW":91,"unary-expression":92,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"BASE":170,"TYPEOF":171,"SIZEOF":172,"namespace-or-type-name":173,"TRUE":174,"FALSE":175}

item set 1107 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 1108 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1109 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1110 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1234,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 1111 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1112 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1235,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 1113 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1236,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 1114 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1237}

item set 1115 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1238,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 1116 
argument-list-with-brace -> OPEN_BRACE argument-list COMMA .CLOSE_BRACE
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":1239,"argument":826,"expression":412,"REF":413,"OUT":414,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 1117 
argument-list-with-brace -> OPEN_BRACE argument-list CLOSE_BRACE . 
transitions ->  {}

item set 1118 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer . 
transitions ->  {}

item set 1119 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1120 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block . 
transitions ->  {}

item set 1121 
constant-declaration -> CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1122 
constant-declaration -> attributes CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1240,"COMMA":619}

item set 1123 
constant-declaration -> attributes modifiers CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1241,"constant-declarator":428,"IDENTIFIER_WITH_TEMPLATE":429,"IDENTIFIER":85}

item set 1124 
field-declaration -> attributes modifiers type-with-interr member-name .SEMICOLON
property-declaration -> attributes modifiers type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes modifiers type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes modifiers type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1242,"OPEN_BRACE":1243,"OPEN_PARENS":1244,"OPEN_BRACKET":1043}

item set 1125 
event-declaration -> attributes modifiers EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> attributes modifiers EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1245,"member-name":1246,"variable-declarator":906,"type-name":907,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1126 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1247,"get-accessor-declaration":1050,"set-accessor-declaration":1051,"attributes":1052,"modifiers":1053,"GET":1054,"SET":1055,"attribute-sections":83,"modifier":84,"attribute-section":107,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"OPEN_BRACKET":162}

item set 1127 
operator-declaration -> attributes modifiers operator-declarator method-body . 
transitions ->  {}

item set 1128 
constructor-declaration -> attributes modifiers constructor-declarator method-body . 
transitions ->  {}

item set 1129 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1248,"formal-parameter-list":1059,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1130 
field-declaration -> attributes type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1131 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1249,"get-accessor-declaration":1050,"set-accessor-declaration":1051,"attributes":1052,"modifiers":1053,"GET":1054,"SET":1055,"attribute-sections":83,"modifier":84,"attribute-section":107,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"OPEN_BRACKET":162}

item set 1132 
method-header -> attributes type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> attributes type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1250,"formal-parameter-list":1251,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1133 
event-declaration -> attributes EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1252,"COMMA":1045}

item set 1134 
event-declaration -> attributes EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1253}

item set 1135 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1254}

item set 1136 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1255}

item set 1137 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1256}

item set 1138 
constant-declaration -> modifiers CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1257,"COMMA":619}

item set 1139 
field-declaration -> modifiers type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1140 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1258,"get-accessor-declaration":1050,"set-accessor-declaration":1051,"attributes":1052,"modifiers":1053,"GET":1054,"SET":1055,"attribute-sections":83,"modifier":84,"attribute-section":107,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"OPEN_BRACKET":162}

item set 1141 
method-header -> modifiers type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> modifiers type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1259,"formal-parameter-list":1260,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1142 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1261}

item set 1143 
overloadable-operator -> overloadable-unary-operator . 
transitions ->  {}

item set 1144 
overloadable-operator -> overloadable-binary-operator . 
transitions ->  {}

item set 1145 
overloadable-unary-operator -> OP_INC . 
transitions ->  {}

item set 1146 
overloadable-unary-operator -> OP_DEC . 
transitions ->  {}

item set 1147 
overloadable-unary-operator -> MINUS .
overloadable-binary-operator -> MINUS . 
transitions ->  {}

item set 1148 
overloadable-unary-operator -> BANG . 
transitions ->  {}

item set 1149 
overloadable-unary-operator -> TILDE . 
transitions ->  {}

item set 1150 
overloadable-unary-operator -> PLUS .
overloadable-binary-operator -> PLUS . 
transitions ->  {}

item set 1151 
overloadable-unary-operator -> TRUE . 
transitions ->  {}

item set 1152 
overloadable-unary-operator -> FALSE . 
transitions ->  {}

item set 1153 
overloadable-binary-operator -> STAR . 
transitions ->  {}

item set 1154 
overloadable-binary-operator -> DIV . 
transitions ->  {}

item set 1155 
overloadable-binary-operator -> PERCENT . 
transitions ->  {}

item set 1156 
overloadable-binary-operator -> AMP . 
transitions ->  {}

item set 1157 
overloadable-binary-operator -> BITWISE_OR . 
transitions ->  {}

item set 1158 
overloadable-binary-operator -> CARET . 
transitions ->  {}

item set 1159 
overloadable-binary-operator -> OP_LEFT_SHIFT . 
transitions ->  {}

item set 1160 
overloadable-binary-operator -> RIGHT_SHIFT . 
transitions ->  {}

item set 1161 
overloadable-binary-operator -> OP_EQ . 
transitions ->  {}

item set 1162 
overloadable-binary-operator -> OP_NE . 
transitions ->  {}

item set 1163 
overloadable-binary-operator -> OP_GE . 
transitions ->  {}

item set 1164 
overloadable-binary-operator -> OP_LE . 
transitions ->  {}

item set 1165 
overloadable-binary-operator -> GT . 
transitions ->  {}

item set 1166 
overloadable-binary-operator -> LT . 
transitions ->  {}

item set 1167 
event-declaration -> modifiers EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1262,"COMMA":1045}

item set 1168 
event-declaration -> modifiers EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1263}

item set 1169 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1264}

item set 1170 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
method-body -> .block
method-body -> .SEMICOLON
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1265,"constructor-initializer":1198,"block":911,"SEMICOLON":912,"COLON":1199,"OPEN_BRACE":56}

item set 1171 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1266}

item set 1172 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1267}

item set 1173 
property-declaration -> type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1268}

item set 1174 
method-header -> type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1269,"where-units":361,"where-unit":363,"WHERE":364}

item set 1175 
method-header -> type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1270}

item set 1176 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACKET":1271}

item set 1177 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACKET":1272}

item set 1178 
variable-declarators -> variable-declarators COMMA variable-declarator . 
transitions ->  {}

item set 1179 
variable-declarator -> type-name ASSIGN variable-initializer . 
transitions ->  {}

item set 1180 
event-declaration -> EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1181 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1273,"add-accessor-declaration":1274,"remove-accessor-declaration":1275,"ADD":1276,"attributes":1277,"REMOVE":1278,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1182 
indexer-declaration -> indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1183 
accessor-declarations -> get-accessor-declaration set-accessor-declaration . 
transitions ->  {}

item set 1184 
set-accessor-declaration -> attributes .modifiers SET method-body
set-accessor-declaration -> attributes .SET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1279,"SET":1191,"modifier":84,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 1185 
set-accessor-declaration -> modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"SET":1193,"modifier":199,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 1186 
accessor-declarations -> set-accessor-declaration get-accessor-declaration . 
transitions ->  {}

item set 1187 
get-accessor-declaration -> attributes .modifiers GET method-body
get-accessor-declaration -> attributes .GET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1280,"GET":1190,"modifier":84,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 1188 
get-accessor-declaration -> modifiers .GET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1192,"modifier":199,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 1189 
get-accessor-declaration -> attributes modifiers .GET method-body
set-accessor-declaration -> attributes modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1281,"SET":1282,"modifier":199,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 1190 
get-accessor-declaration -> attributes GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1283,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1191 
set-accessor-declaration -> attributes SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1284,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1192 
get-accessor-declaration -> modifiers GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1285,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1193 
set-accessor-declaration -> modifiers SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1286,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1194 
get-accessor-declaration -> GET method-body . 
transitions ->  {}

item set 1195 
set-accessor-declaration -> SET method-body . 
transitions ->  {}

item set 1196 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1287,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1197 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1288}

item set 1198 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer . 
transitions ->  {}

item set 1199 
constructor-initializer -> COLON .BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON .BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> COLON .THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON .THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"BASE":1289,"THIS":1290}

item set 1200 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .constructor-initializer
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"constructor-initializer":1291,"COLON":1199}

item set 1201 
where-names -> where-names COMMA where-name . 
transitions ->  {}

item set 1202 
where-name -> NEW OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1203 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 1204 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1205 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1206 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1292}

item set 1207 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1293,"where-units":361,"where-unit":363,"WHERE":364}

item set 1208 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1209 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1294}

item set 1210 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1211 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1295}

item set 1212 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1296,"where-units":361,"where-unit":363,"WHERE":364}

item set 1213 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1297}

item set 1214 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1298}

item set 1215 
interface-accessors -> attributes .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON GET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON 
transitions ->  {"GET":1299,"SET":1300}

item set 1216 
interface-accessors -> SET .SEMICOLON attributes GET SEMICOLON
interface-accessors -> SET .SEMICOLON GET SEMICOLON
interface-accessors -> SET .SEMICOLON 
transitions ->  {"SEMICOLON":1301}

item set 1217 
interface-accessors -> GET .SEMICOLON attributes SET SEMICOLON
interface-accessors -> GET .SEMICOLON SET SEMICOLON
interface-accessors -> GET .SEMICOLON 
transitions ->  {"SEMICOLON":1302}

item set 1218 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1303}

item set 1219 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1304,"formal-parameter-list":1305,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1220 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1306,"attributes":1215,"SET":1216,"GET":1217,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1221 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1307,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1222 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1308,"OPEN_BRACE":1309}

item set 1223 
interface-indexer-declaration -> attributes NEW type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1310}

item set 1224 
interface-event-declaration -> attributes NEW EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1311,"IDENTIFIER":85}

item set 1225 
interface-event-declaration -> attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1312}

item set 1226 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1313,"formal-parameter-list":1314,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1227 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1315,"attributes":1215,"SET":1216,"GET":1217,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1228 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1316,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1229 
interface-event-declaration -> NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1317}

item set 1230 
interface-event-declaration -> EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1231 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1232 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block . 
transitions ->  {}

item set 1233 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace . 
transitions ->  {}

item set 1234 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1235 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1236 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1237 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1318,"block":17,"empty-statement":18,"statement-expression":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"unsafe-statement":28,"fixed-statement":29,"OPEN_BRACE":56,"SEMICOLON":57,"invocation-expressions":58,"object-creation-expression":59,"assignment":60,"post-increment-expression":61,"post-decrement-expression":62,"pre-increment-expression":63,"pre-decrement-expression":64,"if-statement":65,"switch-statement":66,"while-statement":67,"do-statement":68,"for-statement":69,"foreach-statement":70,"break-statement":71,"continue-statement":72,"goto-statement":73,"return-statement":74,"throw-statement":75,"TRY":76,"CHECKED":77,"UNCHECKED":78,"LOCK":79,"USING":80,"UNSAFE":81,"modifiers":234,"FIXED":82,"invocation-expression":90,"NEW":91,"unary-expression":92,"primary-expression":274,"OP_INC":93,"OP_DEC":94,"IF":95,"SWITCH":96,"WHILE":97,"DO":98,"FOR":99,"FOREACH":100,"YIELD":101,"BREAK":102,"CONTINUE":103,"GOTO":104,"RETURN":105,"THROW":106,"modifier":84,"AWAIT":154,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-no-array-creation-expression":86,"array-creation-expression":87,"ASYNC":51,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"element-access":127,"this-access":128,"base-access":129,"delegate-creation-expression":130,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"THIS":50,"BASE":170,"TYPEOF":171,"SIZEOF":172,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"WHERE":52,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173}

item set 1238 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1239 
argument-list-with-brace -> OPEN_BRACE argument-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1240 
constant-declaration -> attributes CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1241 
constant-declaration -> attributes modifiers CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1319,"COMMA":619}

item set 1242 
field-declaration -> attributes modifiers type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1243 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1320,"get-accessor-declaration":1050,"set-accessor-declaration":1051,"attributes":1052,"modifiers":1053,"GET":1054,"SET":1055,"attribute-sections":83,"modifier":84,"attribute-section":107,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192,"OPEN_BRACKET":162}

item set 1244 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1321,"formal-parameter-list":1322,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1245 
event-declaration -> attributes modifiers EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1323,"COMMA":1045}

item set 1246 
event-declaration -> attributes modifiers EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1324}

item set 1247 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1325}

item set 1248 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
method-body -> .block
method-body -> .SEMICOLON
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1326,"constructor-initializer":1198,"block":911,"SEMICOLON":912,"COLON":1199,"OPEN_BRACE":56}

item set 1249 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1327}

item set 1250 
method-header -> attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1328,"where-units":361,"where-unit":363,"WHERE":364}

item set 1251 
method-header -> attributes type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1329}

item set 1252 
event-declaration -> attributes EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1253 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1330,"add-accessor-declaration":1274,"remove-accessor-declaration":1275,"ADD":1276,"attributes":1277,"REMOVE":1278,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1254 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1255 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1331,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1256 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1332}

item set 1257 
constant-declaration -> modifiers CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1258 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1333}

item set 1259 
method-header -> modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1334,"where-units":361,"where-unit":363,"WHERE":364}

item set 1260 
method-header -> modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1335}

item set 1261 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1336,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1262 
event-declaration -> modifiers EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1263 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1337,"add-accessor-declaration":1274,"remove-accessor-declaration":1275,"ADD":1276,"attributes":1277,"REMOVE":1278,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1264 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1265 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1266 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1338,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1267 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1339,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1268 
property-declaration -> type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1269 
method-header -> type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1270 
method-header -> type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1340,"where-units":361,"where-unit":363,"WHERE":364}

item set 1271 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET . 
transitions ->  {}

item set 1272 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET . 
transitions ->  {}

item set 1273 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1341}

item set 1274 
event-accessor-declarations -> add-accessor-declaration .remove-accessor-declaration
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"remove-accessor-declaration":1342,"REMOVE":1278,"attributes":1343,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1275 
event-accessor-declarations -> remove-accessor-declaration .add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"add-accessor-declaration":1344,"ADD":1276,"attributes":1345,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1276 
add-accessor-declaration -> ADD .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1346,"OPEN_BRACE":56}

item set 1277 
add-accessor-declaration -> attributes .ADD block
remove-accessor-declaration -> attributes .REMOVE block 
transitions ->  {"ADD":1347,"REMOVE":1348}

item set 1278 
remove-accessor-declaration -> REMOVE .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1349,"OPEN_BRACE":56}

item set 1279 
set-accessor-declaration -> attributes modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"SET":1282,"modifier":199,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 1280 
get-accessor-declaration -> attributes modifiers .GET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1281,"modifier":199,"UNSAFE":190,"ASYNC":191,"PUBLIC":108,"PARTIAL":109,"PROTECTED":110,"INTERNAL":111,"PRIVATE":112,"ABSTRACT":113,"SEALED":114,"STATIC":115,"READONLY":116,"VOLATILE":117,"VIRTUAL":118,"OVERRIDE":119,"EXTERN":120,"NEW":192}

item set 1281 
get-accessor-declaration -> attributes modifiers GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1350,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1282 
set-accessor-declaration -> attributes modifiers SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1351,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1283 
get-accessor-declaration -> attributes GET method-body . 
transitions ->  {}

item set 1284 
set-accessor-declaration -> attributes SET method-body . 
transitions ->  {}

item set 1285 
get-accessor-declaration -> modifiers GET method-body . 
transitions ->  {}

item set 1286 
set-accessor-declaration -> modifiers SET method-body . 
transitions ->  {}

item set 1287 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1288 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1352,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1289 
constructor-initializer -> COLON BASE .OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON BASE .OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1353}

item set 1290 
constructor-initializer -> COLON THIS .OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON THIS .OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1354}

item set 1291 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer . 
transitions ->  {}

item set 1292 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1293 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1355}

item set 1294 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1295 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1296 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1356}

item set 1297 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1357,"where-units":361,"where-unit":363,"WHERE":364}

item set 1298 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1299 
interface-accessors -> attributes GET .SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1358}

item set 1300 
interface-accessors -> attributes SET .SEMICOLON attributes GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1359}

item set 1301 
interface-accessors -> SET SEMICOLON .attributes GET SEMICOLON
interface-accessors -> SET SEMICOLON .GET SEMICOLON
interface-accessors -> SET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1360,"GET":1361,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1302 
interface-accessors -> GET SEMICOLON .attributes SET SEMICOLON
interface-accessors -> GET SEMICOLON .SET SEMICOLON
interface-accessors -> GET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1362,"SET":1363,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1303 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1364}

item set 1304 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1365,"where-units":361,"where-unit":363,"WHERE":364}

item set 1305 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1366}

item set 1306 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1367}

item set 1307 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1368}

item set 1308 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1369,"formal-parameter-list":1370,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1309 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1371,"attributes":1215,"SET":1216,"GET":1217,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1310 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1372,"fixed-parameters":394,"parameter-array":395,"fixed-parameter":396,"PARAMS":397,"attributes":398,"type-with-interr":399,"THIS":400,"parameter-modifier":401,"attribute-sections":83,"type":206,"REF":402,"OUT":403,"attribute-section":107,"non-array-type":88,"array-type":89,"OPEN_BRACKET":162,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1311 
interface-event-declaration -> attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1373}

item set 1312 
interface-event-declaration -> attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1313 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1374,"where-units":361,"where-unit":363,"WHERE":364}

item set 1314 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1375}

item set 1315 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1376}

item set 1316 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1377}

item set 1317 
interface-event-declaration -> NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1318 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1319 
constant-declaration -> attributes modifiers CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1320 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1378}

item set 1321 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1379,"where-units":361,"where-unit":363,"WHERE":364}

item set 1322 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1380}

item set 1323 
event-declaration -> attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1324 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1381,"add-accessor-declaration":1274,"remove-accessor-declaration":1275,"ADD":1276,"attributes":1277,"REMOVE":1278,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1325 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1326 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1327 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1328 
method-header -> attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1329 
method-header -> attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1382,"where-units":361,"where-unit":363,"WHERE":364}

item set 1330 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1383}

item set 1331 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1332 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1384,"block":911,"SEMICOLON":912,"OPEN_BRACE":56}

item set 1333 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1334 
method-header -> modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1335 
method-header -> modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1385,"where-units":361,"where-unit":363,"WHERE":364}

item set 1336 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1386,"IDENTIFIER":85}

item set 1337 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1387}

item set 1338 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1388,"IDENTIFIER_WITH_KEYWORD":1389,"IDENTIFIER":85,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52}

item set 1339 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1390,"IDENTIFIER_WITH_KEYWORD":1391,"IDENTIFIER":85,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52}

item set 1340 
method-header -> type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1341 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1342 
event-accessor-declarations -> add-accessor-declaration remove-accessor-declaration . 
transitions ->  {}

item set 1343 
remove-accessor-declaration -> attributes .REMOVE block 
transitions ->  {"REMOVE":1348}

item set 1344 
event-accessor-declarations -> remove-accessor-declaration add-accessor-declaration . 
transitions ->  {}

item set 1345 
add-accessor-declaration -> attributes .ADD block 
transitions ->  {"ADD":1347}

item set 1346 
add-accessor-declaration -> ADD block . 
transitions ->  {}

item set 1347 
add-accessor-declaration -> attributes ADD .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1392,"OPEN_BRACE":56}

item set 1348 
remove-accessor-declaration -> attributes REMOVE .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1393,"OPEN_BRACE":56}

item set 1349 
remove-accessor-declaration -> REMOVE block . 
transitions ->  {}

item set 1350 
get-accessor-declaration -> attributes modifiers GET method-body . 
transitions ->  {}

item set 1351 
set-accessor-declaration -> attributes modifiers SET method-body . 
transitions ->  {}

item set 1352 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1353 
constructor-initializer -> COLON BASE OPEN_PARENS .CLOSE_PARENS
constructor-initializer -> COLON BASE OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":1394,"argument-list":1395,"argument":411,"expression":412,"REF":413,"OUT":414,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 1354 
constructor-initializer -> COLON THIS OPEN_PARENS .CLOSE_PARENS
constructor-initializer -> COLON THIS OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":1396,"argument-list":1397,"argument":411,"expression":412,"REF":413,"OUT":414,"conditional-expression":301,"assignment":302,"conditional-or-expression":303,"unary-expression":304,"conditional-and-expression":305,"pre-increment-expression":272,"pre-decrement-expression":273,"PLUS":155,"OP_PTR":156,"OP_COALESCING":157,"MINUS":158,"BANG":159,"TILDE":160,"STAR":161,"primary-expression":274,"inclusive-or-expression":306,"OP_INC":93,"OP_DEC":94,"primary-no-array-creation-expression":86,"array-creation-expression":87,"exclusive-or-expression":307,"literal":121,"lambda-expression":122,"cast-expression":123,"parenthesized-expression":124,"double-colon-access":125,"member-access":126,"invocation-expressions":275,"element-access":127,"this-access":128,"base-access":129,"post-increment-expression":276,"post-decrement-expression":277,"delegate-creation-expression":130,"object-creation-expression":278,"typeof-expression":131,"sizeof-expression":132,"checked-expression":133,"unchecked-expression":134,"IDENTIFIER_WITH_KEYWORD":279,"DELEGATE":235,"delegate-expression":135,"STACKALLOC":136,"and-expression":308,"BOOLEAN_LITERAL":163,"REAL_LITERAL":164,"INTEGER_LITERAL":165,"STRING_LITERAL":166,"CHARACTER_LITERAL":167,"NULL":168,"OPEN_PARENS":169,"IDENTIFIER_WITH_TEMPLATE":37,"type":280,"invocation-expression":90,"THIS":50,"BASE":170,"NEW":281,"TYPEOF":171,"SIZEOF":172,"CHECKED":282,"UNCHECKED":283,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"ASYNC":210,"WHERE":52,"equality-expression":309,"TRUE":174,"FALSE":175,"IDENTIFIER":85,"non-array-type":88,"array-type":89,"AWAIT":154,"relational-expression":310,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"shift-expression":311,"namespace-or-type-name":173,"additive-expression":312,"multiplicative-expression":313}

item set 1355 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1356 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1357 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1398}

item set 1358 
interface-accessors -> attributes GET SEMICOLON .attributes SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1399,"SET":1400,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1359 
interface-accessors -> attributes SET SEMICOLON .attributes GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1401,"GET":1402,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1360 
interface-accessors -> SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":1403}

item set 1361 
interface-accessors -> SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":1404}

item set 1362 
interface-accessors -> GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":1405}

item set 1363 
interface-accessors -> GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":1406}

item set 1364 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1407,"attributes":1215,"SET":1216,"GET":1217,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1365 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1408}

item set 1366 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1409,"where-units":361,"where-unit":363,"WHERE":364}

item set 1367 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1368 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1410}

item set 1369 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1411,"where-units":361,"where-unit":363,"WHERE":364}

item set 1370 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1412}

item set 1371 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1413}

item set 1372 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1414}

item set 1373 
interface-event-declaration -> attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1374 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1415}

item set 1375 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1416,"where-units":361,"where-unit":363,"WHERE":364}

item set 1376 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1377 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1417}

item set 1378 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1379 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1380 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1418,"where-units":361,"where-unit":363,"WHERE":364}

item set 1381 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1419}

item set 1382 
method-header -> attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1383 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1384 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1385 
method-header -> modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1386 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1420,"COMMA":1421}

item set 1387 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1388 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"CLOSE_PARENS":1422}

item set 1389 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1423}

item set 1390 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"CLOSE_PARENS":1424}

item set 1391 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1425}

item set 1392 
add-accessor-declaration -> attributes ADD block . 
transitions ->  {}

item set 1393 
remove-accessor-declaration -> attributes REMOVE block . 
transitions ->  {}

item set 1394 
constructor-initializer -> COLON BASE OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1395 
constructor-initializer -> COLON BASE OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1426,"COLON":609,"COMMA":610}

item set 1396 
constructor-initializer -> COLON THIS OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1397 
constructor-initializer -> COLON THIS OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1427,"COLON":609,"COMMA":610}

item set 1398 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1399 
interface-accessors -> attributes GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":1428}

item set 1400 
interface-accessors -> attributes GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":1429}

item set 1401 
interface-accessors -> attributes SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":1430}

item set 1402 
interface-accessors -> attributes SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":1431}

item set 1403 
interface-accessors -> SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1432}

item set 1404 
interface-accessors -> SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 1405 
interface-accessors -> GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1433}

item set 1406 
interface-accessors -> GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 1407 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1434}

item set 1408 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1409 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1435}

item set 1410 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1436,"attributes":1215,"SET":1216,"GET":1217,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1411 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1437}

item set 1412 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1438,"where-units":361,"where-unit":363,"WHERE":364}

item set 1413 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1414 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1439}

item set 1415 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1416 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1440}

item set 1417 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1441,"attributes":1215,"SET":1216,"GET":1217,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1418 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1419 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1420 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1421 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1442,"type":206,"non-array-type":88,"array-type":89,"type-name":137,"SBYTE":138,"BYTE":139,"SHORT":140,"USHORT":141,"INT":142,"UINT":143,"LONG":144,"ULONG":145,"CHAR":146,"FLOAT":147,"DOUBLE":148,"DECIMAL":149,"BOOL":150,"OBJECT":151,"STRING":152,"VOID":153,"namespace-or-type-name":173,"IDENTIFIER_WITH_KEYWORD":207,"IDENTIFIER_WITH_TEMPLATE":208,"ADD":38,"REMOVE":39,"SET":40,"PARAMS":41,"DEFAULT":42,"METHOD":43,"PARAM":44,"ASSEMBLY":45,"PROPERTY":46,"MODULE":47,"FIELD":48,"TYPE":49,"THIS":209,"ASYNC":210,"WHERE":52,"IDENTIFIER":85}

item set 1422 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1423 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS . 
transitions ->  {}

item set 1424 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1425 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS . 
transitions ->  {}

item set 1426 
constructor-initializer -> COLON BASE OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1427 
constructor-initializer -> COLON THIS OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1428 
interface-accessors -> attributes GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1443}

item set 1429 
interface-accessors -> attributes GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 1430 
interface-accessors -> attributes SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1444}

item set 1431 
interface-accessors -> attributes SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 1432 
interface-accessors -> SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 1433 
interface-accessors -> GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 1434 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1435 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1436 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1445}

item set 1437 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1438 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1446}

item set 1439 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1447,"attributes":1215,"SET":1216,"GET":1217,"attribute-sections":83,"attribute-section":107,"OPEN_BRACKET":162}

item set 1440 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1441 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1448}

item set 1442 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1449,"IDENTIFIER":85}

item set 1443 
interface-accessors -> attributes GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 1444 
interface-accessors -> attributes SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 1445 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1446 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1447 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1450}

item set 1448 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1449 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1451}

item set 1450 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1451 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}
1452 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Conflict at state: 0, token: SEMICOLON
  reduce by rule: compilationUnit -> 
  shift token (then go to state 57)
Conflict at state: 0, token: STAR
  reduce by rule: compilationUnit -> 
  shift token (then go to state 161)
Conflict at state: 0, token: ADD
  reduce by rule: compilationUnit -> 
  shift token (then go to state 38)
Conflict at state: 0, token: REMOVE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 39)
Conflict at state: 0, token: SET
  reduce by rule: compilationUnit -> 
  shift token (then go to state 40)
Conflict at state: 0, token: PARAMS
  reduce by rule: compilationUnit -> 
  shift token (then go to state 41)
Conflict at state: 0, token: DEFAULT
  reduce by rule: compilationUnit -> 
  shift token (then go to state 42)
Conflict at state: 0, token: METHOD
  reduce by rule: compilationUnit -> 
  shift token (then go to state 43)
Conflict at state: 0, token: PARAM
  reduce by rule: compilationUnit -> 
  shift token (then go to state 44)
Conflict at state: 0, token: ASSEMBLY
  reduce by rule: compilationUnit -> 
  shift token (then go to state 45)
Conflict at state: 0, token: PROPERTY
  reduce by rule: compilationUnit -> 
  shift token (then go to state 46)
Conflict at state: 0, token: MODULE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 47)
Conflict at state: 0, token: FIELD
  reduce by rule: compilationUnit -> 
  shift token (then go to state 48)
Conflict at state: 0, token: TYPE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 49)
Conflict at state: 0, token: THIS
  reduce by rule: compilationUnit -> 
  shift token (then go to state 50)
Conflict at state: 0, token: ASYNC
  reduce by rule: compilationUnit -> 
  shift token (then go to state 51)
Conflict at state: 0, token: WHERE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 52)
Conflict at state: 0, token: IDENTIFIER
  reduce by rule: compilationUnit -> 
  shift token (then go to state 85)
Conflict at state: 0, token: OP_PTR
  reduce by rule: compilationUnit -> 
  shift token (then go to state 156)
Conflict at state: 0, token: OP_INC
  reduce by rule: compilationUnit -> 
  shift token (then go to state 93)
Conflict at state: 0, token: OP_DEC
  reduce by rule: compilationUnit -> 
  shift token (then go to state 94)
Conflict at state: 0, token: OPEN_PARENS
  reduce by rule: compilationUnit -> 
  shift token (then go to state 169)
Conflict at state: 0, token: OPEN_BRACKET
  reduce by rule: compilationUnit -> 
  shift token (then go to state 162)
Conflict at state: 0, token: $end
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 0, token: DOT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: ASSIGN
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: INTERR
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 0, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 0, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 0, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 0, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 0, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 0, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 0, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 0, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 0, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 0, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 0, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 0, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 0, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 0, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 51)
Conflict at state: 0, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 0, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 0, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 0, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 0, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 0, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 0, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_XOR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_OR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_AND_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_MOD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_DIV_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_MULT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_SUB_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_ADD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 2, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 2, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 2, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 2, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 2, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 2, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 2, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 2, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 2, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 2, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 2, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 2, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 2, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 2, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 2, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 2, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 51)
Conflict at state: 2, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 2, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 2, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 2, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 2, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 2, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 2, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 14, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 14, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 37, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 211)
Conflict at state: 50, token: COLON
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_DBLPTR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: SEMICOLON
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: COMMA
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: ASSIGN
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: INTERR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: STAR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: ADD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: REMOVE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: SET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: PARAMS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: DEFAULT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: METHOD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: PARAM
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: ASSEMBLY
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: PROPERTY
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: MODULE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: FIELD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: TYPE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: THIS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: ASYNC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: WHERE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: IDENTIFIER
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: DOT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: DOUBLE_COLON
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_INC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_DEC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OPEN_PARENS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_XOR_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_OR_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_AND_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_MOD_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_DIV_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_MULT_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_SUB_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_ADD_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_PTR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OPEN_BRACKET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: CLOSE_PARENS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: PERCENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: DIV
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: MINUS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_COALESCING
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: PLUS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: RIGHT_SHIFT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_LEFT_SHIFT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_GE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_LE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: GT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: LT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_NE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_EQ
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: AMP
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: CARET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: BITWISE_OR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_AND
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OP_OR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: UNCHECKED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: CHECKED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: SIZEOF
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: TYPEOF
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: NEW
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: BASE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: VOID
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: STRING
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OBJECT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: BOOL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: DECIMAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: DOUBLE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: FLOAT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: CHAR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: ULONG
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: LONG
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: UINT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: INT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: USHORT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: SHORT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: BYTE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: SBYTE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: STACKALLOC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: DELEGATE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: AWAIT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: NULL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: CHARACTER_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: STRING_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: INTEGER_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: REAL_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: FALSE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: TRUE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: TILDE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: BANG
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: AS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: IS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: CLOSE_BRACKET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: CLOSE_BRACE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 50, token: OPEN_BRACE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 51, token: COLON
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_DBLPTR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: SEMICOLON
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: COMMA
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: ASSIGN
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: INTERR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: STAR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: ADD
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: REMOVE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: SET
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: PARAMS
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: DEFAULT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: METHOD
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: PARAM
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: ASSEMBLY
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: PROPERTY
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: MODULE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: FIELD
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: TYPE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: THIS
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: ASYNC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: WHERE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: IDENTIFIER
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: DOT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: DOUBLE_COLON
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_INC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_DEC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OPEN_PARENS
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_XOR_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_OR_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_AND_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_MOD_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_DIV_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_MULT_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_SUB_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_ADD_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OP_PTR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OPEN_BRACKET
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: FIXED
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: DELEGATE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: ENUM
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: INTERFACE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: STRUCT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: CLASS
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: NEW
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: EXTERN
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OVERRIDE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: VIRTUAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: VOLATILE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: READONLY
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: STATIC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: SEALED
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: ABSTRACT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: PRIVATE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: INTERNAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: PROTECTED
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: PARTIAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: PUBLIC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: UNSAFE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: EXPLICIT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: IMPLICIT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: EVENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: VOID
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: STRING
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OBJECT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: BOOL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: DECIMAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: DOUBLE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: FLOAT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: CHAR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: ULONG
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: LONG
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: UINT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: INT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: USHORT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: SHORT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: BYTE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: SBYTE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: CONST
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 51, token: OPERATOR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 53, token: INTERR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 220)
Conflict at state: 53, token: OP_PTR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 217)
Conflict at state: 53, token: STAR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 223)
Conflict at state: 53, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 53, token: CLOSE_PARENS
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 56, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 56, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 56, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 56, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 56, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 56, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 56, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 56, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 56, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 56, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 56, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 56, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 56, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 56, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 56, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 56, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 51)
Conflict at state: 56, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 56, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 56, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 56, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 56, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 56, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 58, token: OP_PTR
  reduce by rule: statement-expression -> invocation-expressions
  shift token (then go to state 237)
Conflict at state: 58, token: DOT
  reduce by rule: statement-expression -> invocation-expressions
  shift token (then go to state 236)
Conflict at state: 58, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: THIS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: SET
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: ADD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: STAR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 237)
Conflict at state: 58, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 236)
Conflict at state: 58, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 58, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 59, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: THIS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: SET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: ADD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: STAR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: DOT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 59, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 61, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: THIS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: SET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: ADD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: STAR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 61, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 62, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: THIS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: SET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: ADD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: STAR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 62, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 63, token: SEMICOLON
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: ASSIGN
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: COMMA
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 63, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 64, token: SEMICOLON
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: ASSIGN
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: COMMA
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 64, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 86, token: OPEN_BRACKET
  reduce by rule: primary-expression -> primary-no-array-creation-expression
  shift token (then go to state 249)
Conflict at state: 88, token: STAR
  reduce by rule: type -> non-array-type
  shift token (then go to state 223)
Conflict at state: 89, token: STAR
  reduce by rule: type -> array-type
  shift token (then go to state 223)
Conflict at state: 91, token: ASYNC
  reduce by rule: modifier -> NEW
  shift token (then go to state 210)
Conflict at state: 93, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 93, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 93, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 93, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 93, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 93, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 93, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 93, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 93, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 93, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 93, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 93, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 93, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 93, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 93, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 93, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 93, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 93, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 93, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 93, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 93, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 93, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 93, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 93, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 93, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 93, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 93, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 93, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 93, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 93, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 93, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 93, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 93, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 93, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 93, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 93, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 93, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 93, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 93, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 93, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 93, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 93, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 93, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 93, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 93, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 93, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 93, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 93, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 93, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 93, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 93, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 93, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 93, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 93, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 93, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 93, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 93, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 93, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 94, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 94, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 94, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 94, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 94, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 94, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 94, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 94, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 94, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 94, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 94, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 94, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 94, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 94, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 94, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 94, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 94, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 94, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 94, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 94, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 94, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 94, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 94, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 94, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 94, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 94, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 94, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 94, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 94, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 94, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 94, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 94, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 94, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 94, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 94, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 94, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 94, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 94, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 94, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 94, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 94, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 94, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 94, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 94, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 94, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 94, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 94, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 94, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 94, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 94, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 94, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 94, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 94, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 94, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 94, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 94, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 94, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 94, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 98, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 98, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 98, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 98, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 98, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 105, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 105, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 105, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 105, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 105, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 299)
Conflict at state: 105, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 105, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 105, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 105, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 106, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 106, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 106, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 106, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 106, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 314)
Conflict at state: 106, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 106, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 106, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 106, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 154, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 155, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 155, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 155, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 155, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 155, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 155, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 155, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 155, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 155, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 155, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 155, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 155, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 155, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 155, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 155, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 155, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 155, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 155, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 155, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 155, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 155, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 155, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 155, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 155, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 155, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 155, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 155, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 155, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 155, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 155, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 155, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 155, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 155, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 155, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 155, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 155, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 155, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 155, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 155, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 155, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 155, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 155, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 155, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 155, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 155, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 155, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 155, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 155, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 155, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 155, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 155, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 155, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 155, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 155, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 155, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 155, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 155, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 155, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 156, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 156, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 156, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 156, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 156, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 156, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 156, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 156, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 156, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 156, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 156, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 156, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 156, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 156, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 156, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 156, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 156, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 156, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 156, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 156, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 156, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 156, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 156, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 156, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 156, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 156, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 156, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 156, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 156, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 156, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 156, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 156, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 156, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 156, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 156, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 156, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 156, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 156, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 156, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 156, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 156, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 156, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 156, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 156, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 156, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 156, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 156, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 156, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 156, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 156, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 156, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 156, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 156, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 156, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 156, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 156, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 156, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 156, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 157, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 157, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 157, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 157, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 157, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 157, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 157, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 157, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 157, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 157, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 157, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 157, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 157, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 157, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 157, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 157, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 157, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 157, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 157, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 157, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 157, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 157, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 157, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 157, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 157, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 157, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 157, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 157, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 157, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 157, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 157, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 157, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 157, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 157, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 157, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 157, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 157, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 157, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 157, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 157, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 157, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 157, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 157, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 157, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 157, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 157, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 157, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 157, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 157, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 157, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 157, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 157, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 157, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 157, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 157, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 157, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 157, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 157, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 158, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 158, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 158, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 158, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 158, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 158, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 158, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 158, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 158, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 158, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 158, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 158, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 158, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 158, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 158, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 158, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 158, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 158, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 158, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 158, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 158, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 158, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 158, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 158, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 158, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 158, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 158, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 158, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 158, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 158, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 158, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 158, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 158, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 158, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 158, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 158, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 158, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 158, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 158, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 158, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 158, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 158, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 158, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 158, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 158, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 158, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 158, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 158, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 158, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 158, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 158, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 158, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 158, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 158, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 158, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 158, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 158, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 158, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 159, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 159, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 159, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 159, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 159, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 159, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 159, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 159, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 159, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 159, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 159, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 159, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 159, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 159, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 159, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 159, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 159, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 159, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 159, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 159, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 159, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 159, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 159, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 159, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 159, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 159, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 159, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 159, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 159, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 159, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 159, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 159, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 159, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 159, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 159, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 159, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 159, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 159, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 159, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 159, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 159, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 159, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 159, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 159, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 159, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 159, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 159, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 159, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 159, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 159, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 159, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 159, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 159, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 159, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 159, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 159, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 159, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 159, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 160, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 160, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 160, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 160, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 160, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 160, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 160, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 160, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 160, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 160, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 160, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 160, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 160, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 160, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 160, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 160, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 160, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 160, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 160, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 160, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 160, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 160, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 160, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 160, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 160, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 160, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 160, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 160, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 160, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 160, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 160, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 160, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 160, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 160, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 160, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 160, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 160, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 160, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 160, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 160, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 160, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 160, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 160, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 160, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 160, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 160, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 160, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 160, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 160, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 160, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 160, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 160, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 160, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 160, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 160, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 160, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 160, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 160, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 161, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 161, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 161, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 161, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 161, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 161, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 161, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 161, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 161, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 161, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 161, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 161, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 161, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 161, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 161, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 161, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 161, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 161, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 161, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 161, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 161, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 161, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 161, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 161, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 161, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 161, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 161, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 161, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 161, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 161, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 161, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 161, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 161, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 161, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 161, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 161, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 161, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 161, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 161, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 161, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 161, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 161, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 161, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 161, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 161, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 161, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 161, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 161, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 161, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 161, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 161, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 161, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 161, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 161, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 161, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 161, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 161, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 161, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 169, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 169, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 169, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 169, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 169, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 169, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 169, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 169, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 169, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 169, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 169, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 169, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 169, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 169, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 169, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 169, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 169, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 169, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 169, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 169, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 169, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 169, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 169, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 169, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 169, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 169, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 169, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 169, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 169, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 169, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 169, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 169, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 169, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 169, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 169, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 169, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 169, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 169, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 169, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 169, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 169, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 169, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 169, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 169, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 169, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 169, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 169, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 169, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 169, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 169, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 169, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 169, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 169, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 169, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 169, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 169, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 169, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 169, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 173, token: DOT
  reduce by rule: type-name -> namespace-or-type-name
  shift token (then go to state 351)
Conflict at state: 178, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 178, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 178, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 178, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 178, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 178, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 178, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 356)
Conflict at state: 178, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 178, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 178, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 178, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 178, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 178, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 178, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 178, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 178, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 51)
Conflict at state: 178, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 178, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 178, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 178, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 178, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 178, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 179, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 179, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 179, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 179, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 179, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 179, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 179, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 179, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 179, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 179, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 179, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 179, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 179, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 179, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 179, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 179, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 179, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 179, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 179, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 179, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 179, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 179, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 179, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 179, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 179, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 179, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 179, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 179, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 179, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 179, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 179, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 179, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 179, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 179, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 179, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 179, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 179, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 179, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 179, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 179, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 179, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 179, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 179, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 179, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 179, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 179, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 179, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 179, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 179, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 179, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 179, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 179, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 179, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 179, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 179, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 179, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 179, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 179, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 179, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 56)
Conflict at state: 183, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 200, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 201, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 211, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 215, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 215, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 215, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 215, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 215, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 410)
Conflict at state: 215, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 215, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 215, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 215, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 225, token: OPEN_BRACKET
  reduce by rule: array-type -> type rank-specifiers
  shift token (then go to state 229)
Conflict at state: 232, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 232, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 232, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 232, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 232, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 232, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 232, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 232, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 232, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 232, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 232, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 232, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 232, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 232, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 232, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 232, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 51)
Conflict at state: 232, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 232, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 232, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 232, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 232, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 232, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 236, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 240, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 240, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 240, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 240, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 240, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 240, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 240, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 240, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 242, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 242, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 242, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 242, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 242, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 242, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 242, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 242, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 243, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 243, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 243, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 243, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 243, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 243, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 243, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 243, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 244, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 244, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 244, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 244, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 244, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 244, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 244, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 244, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 244, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 244, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 244, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 244, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 244, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 244, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 244, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 244, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 244, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 244, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 244, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 244, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 244, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 244, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 244, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 244, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 249, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 249, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 249, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 249, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 249, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 451)
Conflict at state: 249, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 249, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 426)
Conflict at state: 249, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 249, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 249, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 250, token: STAR
  reduce by rule: type -> non-array-type STARS
  shift token (then go to state 420)
Conflict at state: 251, token: STAR
  reduce by rule: type -> array-type STARS
  shift token (then go to state 420)
Conflict at state: 253, token: OPEN_BRACKET
  reduce by rule: type-with-identifier -> non-array-type
  shift token (then go to state 458)
Conflict at state: 253, token: OPEN_PARENS
  reduce by rule: type -> non-array-type
  reduce by rule: type-with-identifier -> non-array-type
Conflict at state: 253, token: OPEN_BRACE
  reduce by rule: type -> non-array-type
  reduce by rule: type-with-identifier -> non-array-type
Conflict at state: 253, token: OPEN_BRACKET
  reduce by rule: type -> non-array-type
  shift token (then go to state 458)
Conflict at state: 254, token: OPEN_BRACKET
  reduce by rule: object-creation-expression -> NEW rank-specifiers
  shift token (then go to state 229)
Conflict at state: 254, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW rank-specifiers
  shift token (then go to state 258)
Conflict at state: 258, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 258, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 258, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 258, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 258, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 258, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 258, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 258, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 259, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 259, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 259, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 259, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 259, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 259, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 259, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 259, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 259, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 259, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 259, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 259, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 259, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 259, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 259, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 259, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 259, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 259, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 259, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 259, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 259, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 259, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 259, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 259, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 259, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 259, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 259, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 259, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 259, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 259, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 259, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 259, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 259, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 259, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 259, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 259, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 259, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 259, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 259, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 259, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 259, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 259, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 259, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 259, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 259, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 259, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 259, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 259, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 259, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 259, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 259, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 259, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 259, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 259, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 259, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 259, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 259, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 259, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 259, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 274, token: OPEN_PARENS
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 215)
Conflict at state: 274, token: OP_PTR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 217)
Conflict at state: 274, token: OP_INC
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 213)
Conflict at state: 274, token: OP_DEC
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 214)
Conflict at state: 274, token: DOT
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 216)
Conflict at state: 275, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 237)
Conflict at state: 275, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 236)
Conflict at state: 279, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: CLOSE_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: CLOSE_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: BANG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: TRUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: FALSE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: REAL_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: INTEGER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: STRING_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: CHARACTER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: NULL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: AWAIT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: DELEGATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: STACKALLOC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: SBYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: BYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: SHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: USHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: INT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: UINT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: LONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: ULONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: CHAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: FLOAT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: DOUBLE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: DECIMAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: BOOL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OBJECT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: STRING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: VOID
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: BASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: NEW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: TYPEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: SIZEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: CHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: UNCHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: OPEN_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 279, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 285, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 285, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 285, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 285, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 285, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 285, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 285, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 285, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 286, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 286, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 286, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 286, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 286, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 286, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 286, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 286, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 287, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 287, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 287, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 287, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 287, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 287, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 287, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 287, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 289, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 474)
Conflict at state: 289, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 289, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 289, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 289, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 289, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 289, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 289, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 289, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 289, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 289, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 289, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 289, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 289, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 289, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 289, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 289, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 289, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 289, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 289, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 289, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 289, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 292, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 292, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 292, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 292, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 292, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 483)
Conflict at state: 292, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 292, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 292, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 292, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 296, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 296, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 296, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 296, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 296, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 296, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 296, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 296, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 303, token: INTERR
  reduce by rule: conditional-expression -> conditional-or-expression
  shift token (then go to state 490)
Conflict at state: 303, token: OP_OR
  reduce by rule: conditional-expression -> conditional-or-expression
  shift token (then go to state 491)
Conflict at state: 304, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 270)
Conflict at state: 304, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 269)
Conflict at state: 304, token: OP_XOR_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 268)
Conflict at state: 304, token: OP_OR_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 267)
Conflict at state: 304, token: OP_AND_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 266)
Conflict at state: 304, token: OP_MOD_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 265)
Conflict at state: 304, token: OP_DIV_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 264)
Conflict at state: 304, token: OP_MULT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 263)
Conflict at state: 304, token: OP_SUB_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 262)
Conflict at state: 304, token: OP_ADD_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 261)
Conflict at state: 304, token: ASSIGN
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 260)
Conflict at state: 305, token: OP_AND
  reduce by rule: conditional-or-expression -> conditional-and-expression
  shift token (then go to state 492)
Conflict at state: 306, token: BITWISE_OR
  reduce by rule: conditional-and-expression -> inclusive-or-expression
  shift token (then go to state 493)
Conflict at state: 307, token: CARET
  reduce by rule: inclusive-or-expression -> exclusive-or-expression
  shift token (then go to state 494)
Conflict at state: 308, token: AMP
  reduce by rule: exclusive-or-expression -> and-expression
  shift token (then go to state 495)
Conflict at state: 309, token: OP_EQ
  reduce by rule: and-expression -> equality-expression
  shift token (then go to state 496)
Conflict at state: 309, token: OP_NE
  reduce by rule: and-expression -> equality-expression
  shift token (then go to state 497)
Conflict at state: 310, token: OP_COALESCING
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 502)
Conflict at state: 310, token: AS
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 504)
Conflict at state: 310, token: IS
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 503)
Conflict at state: 310, token: OP_GE
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 501)
Conflict at state: 310, token: OP_LE
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 500)
Conflict at state: 310, token: GT
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 499)
Conflict at state: 310, token: LT
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 498)
Conflict at state: 311, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> shift-expression
  shift token (then go to state 505)
Conflict at state: 311, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> shift-expression
  shift token (then go to state 506)
Conflict at state: 312, token: OP_COALESCING
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 509)
Conflict at state: 312, token: OP_PTR
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 508)
Conflict at state: 312, token: MINUS
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 510)
Conflict at state: 312, token: PLUS
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 507)
Conflict at state: 313, token: STAR
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 511)
Conflict at state: 313, token: DIV
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 512)
Conflict at state: 313, token: PERCENT
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 513)
Conflict at state: 316, token: OPEN_BRACKET
  reduce by rule: type -> non-array-type
  shift token (then go to state 515)
Conflict at state: 332, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 332, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 332, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 332, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 332, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 332, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 334, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 334, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 334, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 334, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 334, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 334, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 335, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 335, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 335, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 335, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 335, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 335, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 336, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 336, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 336, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 336, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 336, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 336, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 338, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 338, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 338, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 338, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 338, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 338, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 343, token: DOT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 343, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 532)
Conflict at state: 343, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 343, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 343, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 343, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 404)
Conflict at state: 343, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  reduce by rule: type-with-interr -> type
Conflict at state: 343, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 229)
Conflict at state: 343, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 343, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 343, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 343, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 344, token: CLOSE_PARENS
  reduce by rule: expression-list -> expression
  shift token (then go to state 533)
Conflict at state: 344, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 344, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 344, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 344, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 344, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 533)
Conflict at state: 344, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: expression-list -> expression
Conflict at state: 344, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 344, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 344, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 344, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 347, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 347, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 347, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 347, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 347, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 347, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 347, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 347, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 352, token: DEFAULT
  reduce by rule: labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels
  shift token (then go to state 543)
Conflict at state: 352, token: CASE
  reduce by rule: labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels
  shift token (then go to state 355)
Conflict at state: 355, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 355, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 355, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 355, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 355, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 355, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 355, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 355, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 356, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> DEFAULT
  shift token (then go to state 545)
Conflict at state: 360, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 361, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 361, token: OPEN_BRACE
  reduce by rule: where-unit -> 
  reduce by rule: where-base -> where-units
Conflict at state: 361, token: COMMA
  reduce by rule: where-unit -> 
  shift token (then go to state 549)
Conflict at state: 361, token: SEMICOLON
  reduce by rule: where-unit -> 
  reduce by rule: where-base -> where-units
Conflict at state: 365, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 371, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 372, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 375, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 376, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 377, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 382, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 385, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 387, token: SEMICOLON
  reduce by rule: enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body
  shift token (then go to state 587)
Conflict at state: 397, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 52)
Conflict at state: 397, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 210)
Conflict at state: 397, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 209)
Conflict at state: 397, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 49)
Conflict at state: 397, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 48)
Conflict at state: 397, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 47)
Conflict at state: 397, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 46)
Conflict at state: 397, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 45)
Conflict at state: 397, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 44)
Conflict at state: 397, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 43)
Conflict at state: 397, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 42)
Conflict at state: 397, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 41)
Conflict at state: 397, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 40)
Conflict at state: 397, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 39)
Conflict at state: 397, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 38)
Conflict at state: 397, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 85)
Conflict at state: 400, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 52)
Conflict at state: 400, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 210)
Conflict at state: 400, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 209)
Conflict at state: 400, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 49)
Conflict at state: 400, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 48)
Conflict at state: 400, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 47)
Conflict at state: 400, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 46)
Conflict at state: 400, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 45)
Conflict at state: 400, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 44)
Conflict at state: 400, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 43)
Conflict at state: 400, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 42)
Conflict at state: 400, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 41)
Conflict at state: 400, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 40)
Conflict at state: 400, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 39)
Conflict at state: 400, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 38)
Conflict at state: 400, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 85)
Conflict at state: 405, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 405, token: DOT
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 405, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 405, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 405, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 405, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 413, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 413, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 413, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 413, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 413, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 413, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 413, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 413, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 414, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 414, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 414, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 414, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 414, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 414, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 414, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 414, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 417, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 417, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 417, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 417, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 417, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 417, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 417, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 417, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 428, token: SEMICOLON
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 428, token: COMMA
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 432, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 432, token: DOT
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 432, token: OP_PTR
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 432, token: OP_INC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 432, token: OP_DEC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 432, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 433, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 433, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 453, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 453, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 453, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 453, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 453, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 635)
Conflict at state: 453, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 453, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 453, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 453, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 456, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 456, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 456, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 456, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 456, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 426)
Conflict at state: 456, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 425)
Conflict at state: 456, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 456, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 456, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 456, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 458, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 458, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 458, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 458, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 458, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 426)
Conflict at state: 458, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 425)
Conflict at state: 458, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 458, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 458, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 458, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 460, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 460, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 460, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 460, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 460, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 641)
Conflict at state: 460, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 460, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 460, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 460, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 462, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 462, token: OPEN_BRACE
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 462, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 462, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 462, token: DOT
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 462, token: STAR
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 470, token: CLOSE_PARENS
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 470, token: SEMICOLON
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 474, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 474, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 474, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 474, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 474, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 648)
Conflict at state: 474, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 474, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 474, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 474, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 490, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 490, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 490, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 490, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 490, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 490, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 490, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 490, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 490, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 490, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 490, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 490, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 490, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 490, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 490, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 490, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 490, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 490, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 490, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 490, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 490, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 490, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 490, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 490, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 490, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 490, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 490, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 490, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 490, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 490, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 490, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 490, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 490, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 490, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 490, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 490, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 490, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 490, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 490, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 490, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 490, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 490, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 490, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 490, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 490, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 490, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 490, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 490, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 490, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 490, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 490, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 490, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 490, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 490, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 490, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 490, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 490, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 490, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 491, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 491, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 491, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 491, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 491, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 491, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 491, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 491, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 491, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 491, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 491, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 491, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 491, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 491, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 491, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 491, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 491, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 491, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 491, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 491, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 491, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 491, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 491, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 491, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 491, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 491, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 491, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 491, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 491, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 491, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 491, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 491, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 491, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 491, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 491, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 491, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 491, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 491, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 491, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 491, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 491, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 491, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 491, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 491, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 491, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 491, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 491, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 491, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 491, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 491, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 491, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 491, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 491, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 491, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 491, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 491, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 491, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 491, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 492, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 492, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 492, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 492, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 492, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 492, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 492, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 492, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 492, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 492, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 492, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 492, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 492, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 492, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 492, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 492, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 492, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 492, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 492, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 492, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 492, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 492, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 492, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 492, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 492, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 492, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 492, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 492, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 492, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 492, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 492, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 492, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 492, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 492, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 492, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 492, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 492, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 492, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 492, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 492, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 492, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 492, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 492, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 492, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 492, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 492, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 492, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 492, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 492, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 492, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 492, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 492, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 492, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 492, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 492, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 492, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 492, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 492, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 493, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 493, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 493, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 493, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 493, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 493, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 493, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 493, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 493, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 493, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 493, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 493, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 493, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 493, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 493, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 493, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 493, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 493, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 493, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 493, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 493, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 493, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 493, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 493, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 493, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 493, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 493, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 493, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 493, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 493, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 493, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 493, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 493, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 493, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 493, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 493, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 493, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 493, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 493, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 493, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 493, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 493, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 493, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 493, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 493, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 493, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 493, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 493, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 493, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 493, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 493, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 493, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 493, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 493, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 493, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 493, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 493, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 493, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 494, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 494, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 494, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 494, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 494, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 494, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 494, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 494, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 494, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 494, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 494, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 494, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 494, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 494, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 494, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 494, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 494, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 494, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 494, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 494, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 494, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 494, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 494, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 494, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 494, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 494, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 494, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 494, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 494, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 494, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 494, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 494, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 494, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 494, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 494, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 494, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 494, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 494, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 494, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 494, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 494, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 494, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 494, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 494, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 494, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 494, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 494, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 494, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 494, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 494, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 494, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 494, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 494, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 494, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 494, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 494, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 494, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 494, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 495, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 495, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 495, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 495, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 495, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 495, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 495, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 495, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 495, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 495, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 495, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 495, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 495, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 495, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 495, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 495, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 495, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 495, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 495, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 495, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 495, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 495, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 495, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 495, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 495, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 495, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 495, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 495, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 495, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 495, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 495, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 495, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 495, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 495, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 495, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 495, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 495, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 495, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 495, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 495, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 495, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 495, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 495, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 495, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 495, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 495, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 495, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 495, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 495, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 495, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 495, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 495, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 495, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 495, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 495, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 495, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 495, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 495, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 496, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 496, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 496, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 496, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 496, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 496, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 496, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 496, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 496, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 496, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 496, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 496, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 496, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 496, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 496, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 496, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 496, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 496, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 496, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 496, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 496, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 496, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 496, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 496, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 496, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 496, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 496, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 496, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 496, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 496, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 496, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 496, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 496, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 496, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 496, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 496, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 496, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 496, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 496, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 496, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 496, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 496, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 496, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 496, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 496, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 496, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 496, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 496, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 496, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 496, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 496, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 496, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 496, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 496, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 496, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 496, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 496, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 496, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 497, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 497, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 497, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 497, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 497, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 497, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 497, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 497, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 497, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 497, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 497, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 497, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 497, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 497, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 497, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 497, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 497, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 497, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 497, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 497, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 497, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 497, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 497, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 497, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 497, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 497, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 497, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 497, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 497, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 497, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 497, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 497, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 497, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 497, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 497, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 497, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 497, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 497, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 497, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 497, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 497, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 497, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 497, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 497, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 497, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 497, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 497, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 497, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 497, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 497, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 497, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 497, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 497, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 497, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 497, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 497, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 497, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 497, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 498, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 498, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 498, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 498, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 498, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 498, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 498, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 498, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 498, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 498, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 498, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 498, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 498, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 498, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 498, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 498, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 498, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 498, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 498, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 498, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 498, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 498, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 498, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 498, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 498, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 498, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 498, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 498, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 498, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 498, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 498, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 498, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 498, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 498, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 498, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 498, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 498, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 498, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 498, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 498, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 498, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 498, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 498, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 498, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 498, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 498, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 498, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 498, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 498, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 498, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 498, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 498, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 498, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 498, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 498, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 498, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 498, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 498, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 499, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 499, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 499, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 499, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 499, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 499, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 499, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 499, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 499, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 499, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 499, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 499, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 499, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 499, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 499, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 499, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 499, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 499, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 499, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 499, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 499, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 499, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 499, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 499, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 499, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 499, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 499, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 499, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 499, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 499, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 499, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 499, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 499, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 499, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 499, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 499, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 499, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 499, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 499, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 499, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 499, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 499, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 499, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 499, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 499, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 499, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 499, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 499, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 499, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 499, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 499, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 499, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 499, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 499, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 499, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 499, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 499, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 499, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 500, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 500, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 500, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 500, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 500, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 500, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 500, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 500, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 500, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 500, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 500, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 500, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 500, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 500, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 500, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 500, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 500, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 500, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 500, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 500, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 500, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 500, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 500, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 500, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 500, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 500, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 500, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 500, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 500, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 500, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 500, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 500, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 500, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 500, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 500, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 500, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 500, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 500, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 500, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 500, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 500, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 500, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 500, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 500, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 500, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 500, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 500, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 500, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 500, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 500, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 500, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 500, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 500, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 500, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 500, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 500, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 500, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 500, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 501, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 501, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 501, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 501, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 501, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 501, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 501, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 501, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 501, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 501, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 501, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 501, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 501, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 501, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 501, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 501, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 501, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 501, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 501, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 501, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 501, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 501, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 501, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 501, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 501, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 501, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 501, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 501, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 501, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 501, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 501, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 501, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 501, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 501, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 501, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 501, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 501, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 501, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 501, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 501, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 501, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 501, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 501, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 501, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 501, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 501, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 501, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 501, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 501, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 501, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 501, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 501, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 501, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 501, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 501, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 501, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 501, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 501, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 502, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 502, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 502, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 502, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 502, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 502, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 502, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 502, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 502, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 502, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 502, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 502, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 502, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 502, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 502, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 502, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 502, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 502, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 502, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 502, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 502, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 502, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 502, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 502, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 502, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 502, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 502, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 502, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 502, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 502, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 502, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 502, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 502, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 502, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 502, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 502, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 502, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 502, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 502, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 502, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 502, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 502, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 502, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 502, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 502, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 502, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 502, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 502, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 502, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 502, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 502, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 502, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 502, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 502, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 502, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 502, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 502, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 502, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 505, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 505, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 505, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 505, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 505, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 505, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 505, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 505, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 505, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 505, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 505, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 505, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 505, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 505, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 505, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 505, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 505, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 505, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 505, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 505, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 505, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 505, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 505, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 505, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 505, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 505, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 505, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 505, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 505, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 505, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 505, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 505, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 505, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 505, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 505, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 505, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 505, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 505, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 505, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 505, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 505, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 505, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 505, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 505, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 505, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 505, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 505, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 505, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 505, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 505, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 505, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 505, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 505, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 505, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 505, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 505, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 505, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 505, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 506, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 506, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 506, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 506, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 506, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 506, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 506, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 506, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 506, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 506, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 506, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 506, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 506, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 506, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 506, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 506, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 506, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 506, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 506, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 506, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 506, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 506, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 506, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 506, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 506, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 506, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 506, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 506, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 506, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 506, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 506, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 506, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 506, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 506, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 506, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 506, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 506, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 506, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 506, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 506, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 506, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 506, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 506, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 506, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 506, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 506, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 506, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 506, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 506, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 506, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 506, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 506, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 506, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 506, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 506, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 506, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 506, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 506, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 507, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 507, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 507, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 507, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 507, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 507, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 507, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 507, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 507, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 507, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 507, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 507, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 507, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 507, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 507, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 507, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 507, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 507, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 507, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 507, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 507, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 507, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 507, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 507, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 507, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 507, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 507, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 507, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 507, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 507, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 507, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 507, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 507, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 507, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 507, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 507, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 507, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 507, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 507, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 507, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 507, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 507, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 507, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 507, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 507, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 507, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 507, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 507, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 507, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 507, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 507, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 507, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 507, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 507, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 507, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 507, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 507, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 507, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 508, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 508, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 508, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 508, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 508, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 508, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 508, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 508, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 508, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 508, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 508, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 508, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 508, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 508, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 508, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 508, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 508, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 508, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 508, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 508, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 508, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 508, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 508, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 508, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 508, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 508, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 508, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 508, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 508, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 508, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 508, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 508, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 508, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 508, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 508, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 508, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 508, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 508, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 508, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 508, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 508, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 508, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 508, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 508, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 508, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 508, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 508, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 508, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 508, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 508, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 508, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 508, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 508, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 508, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 508, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 508, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 508, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 508, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 509, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 509, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 509, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 509, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 509, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 509, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 509, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 509, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 509, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 509, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 509, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 509, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 509, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 509, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 509, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 509, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 509, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 509, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 509, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 509, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 509, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 509, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 509, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 509, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 509, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 509, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 509, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 509, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 509, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 509, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 509, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 509, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 509, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 509, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 509, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 509, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 509, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 509, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 509, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 509, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 509, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 509, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 509, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 509, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 509, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 509, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 509, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 509, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 509, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 509, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 509, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 509, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 509, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 509, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 509, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 509, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 509, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 509, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 510, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 510, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 510, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 510, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 510, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 510, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 510, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 510, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 510, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 510, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 510, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 510, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 510, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 510, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 510, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 510, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 510, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 510, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 510, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 510, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 510, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 510, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 510, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 510, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 510, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 510, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 510, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 510, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 510, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 510, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 510, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 510, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 510, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 510, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 510, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 510, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 510, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 510, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 510, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 510, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 510, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 510, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 510, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 510, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 510, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 510, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 510, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 510, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 510, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 510, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 510, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 510, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 510, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 510, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 510, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 510, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 510, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 510, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 511, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 511, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 511, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 511, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 511, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 511, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 511, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 511, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 511, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 511, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 511, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 511, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 511, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 511, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 511, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 511, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 511, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 511, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 511, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 511, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 511, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 511, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 511, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 511, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 511, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 511, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 511, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 511, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 511, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 511, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 511, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 511, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 511, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 511, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 511, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 511, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 511, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 511, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 511, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 511, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 511, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 511, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 511, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 511, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 511, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 511, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 511, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 511, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 511, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 511, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 511, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 511, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 511, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 511, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 511, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 511, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 511, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 511, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 512, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 512, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 512, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 512, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 512, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 512, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 512, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 512, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 512, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 512, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 512, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 512, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 512, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 512, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 512, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 512, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 512, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 512, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 512, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 512, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 512, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 512, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 512, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 512, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 512, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 512, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 512, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 512, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 512, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 512, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 512, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 512, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 512, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 512, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 512, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 512, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 512, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 512, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 512, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 512, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 512, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 512, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 512, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 512, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 512, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 512, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 512, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 512, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 512, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 512, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 512, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 512, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 512, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 512, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 512, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 512, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 512, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 512, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 513, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 513, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 513, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 513, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 513, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 513, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 513, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 513, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 513, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 513, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 513, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 513, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 513, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 513, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 513, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 513, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 513, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 513, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 513, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 513, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 513, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 513, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 513, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 513, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 513, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 513, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 513, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 513, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 513, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 513, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 513, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 513, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 513, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 513, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 513, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 513, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 513, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 513, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 513, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 513, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 513, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 513, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 513, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 513, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 513, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 513, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 513, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 513, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 513, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 513, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 513, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 513, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 513, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 513, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 513, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 513, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 513, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 513, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 515, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 515, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 515, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 515, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 515, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 682)
Conflict at state: 515, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 515, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 515, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 515, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 517, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 517, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 517, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 517, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 517, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 684)
Conflict at state: 517, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 517, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 517, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 517, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 518, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 518, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 518, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 518, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 518, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 691)
Conflict at state: 518, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 518, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 518, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 518, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 524, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 524, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 524, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 524, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 524, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 696)
Conflict at state: 524, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 524, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 524, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 524, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 526, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 526, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 526, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 526, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 526, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 526, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 526, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 526, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 526, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 526, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 526, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 526, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 526, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 526, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 526, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 526, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 526, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 526, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 526, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 526, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 526, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 526, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 526, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 526, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 526, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 526, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 526, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 526, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 526, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 526, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 526, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 526, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 526, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 526, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 526, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 526, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 526, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 526, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 526, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 526, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 526, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 526, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 526, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 526, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 526, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 526, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 526, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 526, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 526, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 526, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 526, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 526, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 526, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 526, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 526, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 526, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 526, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 526, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 530, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 530, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 530, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 530, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 530, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 530, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 530, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 530, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 531, token: CLOSE_PARENS
  reduce by rule: type-expression-list -> type expression
  shift token (then go to state 710)
Conflict at state: 532, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 532, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 532, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 532, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 532, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 532, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 532, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 532, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 533, token: STAR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 161)
Conflict at state: 533, token: ADD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 38)
Conflict at state: 533, token: REMOVE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 39)
Conflict at state: 533, token: SET
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 40)
Conflict at state: 533, token: PARAMS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 41)
Conflict at state: 533, token: DEFAULT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 42)
Conflict at state: 533, token: METHOD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 43)
Conflict at state: 533, token: PARAM
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 44)
Conflict at state: 533, token: ASSEMBLY
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 45)
Conflict at state: 533, token: PROPERTY
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 46)
Conflict at state: 533, token: MODULE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 47)
Conflict at state: 533, token: FIELD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 48)
Conflict at state: 533, token: TYPE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 49)
Conflict at state: 533, token: THIS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 50)
Conflict at state: 533, token: ASYNC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 210)
Conflict at state: 533, token: WHERE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 52)
Conflict at state: 533, token: IDENTIFIER
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 85)
Conflict at state: 533, token: OP_INC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 93)
Conflict at state: 533, token: OP_DEC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 94)
Conflict at state: 533, token: OPEN_PARENS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 169)
Conflict at state: 533, token: OP_PTR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 156)
Conflict at state: 533, token: MINUS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 158)
Conflict at state: 533, token: OP_COALESCING
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 157)
Conflict at state: 533, token: PLUS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 155)
Conflict at state: 533, token: UNCHECKED
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 283)
Conflict at state: 533, token: CHECKED
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 282)
Conflict at state: 533, token: SIZEOF
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 172)
Conflict at state: 533, token: TYPEOF
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 171)
Conflict at state: 533, token: NEW
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 281)
Conflict at state: 533, token: BASE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 170)
Conflict at state: 533, token: VOID
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 153)
Conflict at state: 533, token: STRING
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 152)
Conflict at state: 533, token: OBJECT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 151)
Conflict at state: 533, token: BOOL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 150)
Conflict at state: 533, token: DECIMAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 149)
Conflict at state: 533, token: DOUBLE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 148)
Conflict at state: 533, token: FLOAT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 147)
Conflict at state: 533, token: CHAR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 146)
Conflict at state: 533, token: ULONG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 145)
Conflict at state: 533, token: LONG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 144)
Conflict at state: 533, token: UINT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 143)
Conflict at state: 533, token: INT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 142)
Conflict at state: 533, token: USHORT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 141)
Conflict at state: 533, token: SHORT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 140)
Conflict at state: 533, token: BYTE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 139)
Conflict at state: 533, token: SBYTE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 138)
Conflict at state: 533, token: STACKALLOC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 136)
Conflict at state: 533, token: DELEGATE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 235)
Conflict at state: 533, token: AWAIT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 154)
Conflict at state: 533, token: NULL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 168)
Conflict at state: 533, token: CHARACTER_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 167)
Conflict at state: 533, token: STRING_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 166)
Conflict at state: 533, token: INTEGER_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 165)
Conflict at state: 533, token: REAL_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 164)
Conflict at state: 533, token: FALSE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 175)
Conflict at state: 533, token: TRUE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 174)
Conflict at state: 533, token: TILDE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 160)
Conflict at state: 533, token: BANG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 159)
Conflict at state: 533, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_XOR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_OR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_AND_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_MOD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_DIV_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_MULT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_SUB_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_ADD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: ASSIGN
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: DOT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 533, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 533, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 533, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 533, token: PERCENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: DIV
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 533, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 533, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 533, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 533, token: RIGHT_SHIFT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_LEFT_SHIFT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_GE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_LE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: GT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: LT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_NE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_EQ
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: AMP
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: CARET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: BITWISE_OR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_AND
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OP_OR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: INTERR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 533, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 533, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 533, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 533, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 533, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 533, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 533, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 533, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 533, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 533, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 533, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 533, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 533, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 533, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 533, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 533, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 533, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 533, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 533, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 533, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 533, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 533, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 533, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 533, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 533, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 533, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 533, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 533, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 533, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 533, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 533, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 533, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 533, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 533, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 533, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 533, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 533, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 533, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 533, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 533, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 533, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 533, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 533, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 533, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 533, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 533, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 533, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 533, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 533, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 533, token: AS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: IS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: COLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 533, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 535, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 535, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 535, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 535, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 535, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 535, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 535, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 535, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 535, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 535, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 535, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 535, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 535, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 535, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 535, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 535, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 535, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 535, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 535, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 535, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 535, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 535, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 535, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 535, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 535, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 535, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 535, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 535, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 535, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 535, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 535, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 535, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 535, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 535, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 535, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 535, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 535, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 535, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 535, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 535, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 535, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 535, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 535, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 535, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 535, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 535, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 535, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 535, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 535, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 535, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 535, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 535, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 535, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 535, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 535, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 535, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 535, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 535, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 546, token: SEMICOLON
  reduce by rule: class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
  shift token (then go to state 719)
Conflict at state: 551, token: COMMA
  reduce by rule: class-base -> COLON type-with-interr
  shift token (then go to state 748)
Conflict at state: 551, token: WHERE
  reduce by rule: interface-type-list -> type-with-interr
  reduce by rule: class-base -> COLON type-with-interr
Conflict at state: 551, token: COMMA
  reduce by rule: interface-type-list -> type-with-interr
  shift token (then go to state 748)
Conflict at state: 551, token: OPEN_BRACE
  reduce by rule: interface-type-list -> type-with-interr
  reduce by rule: class-base -> COLON type-with-interr
Conflict at state: 552, token: COMMA
  reduce by rule: class-base -> COLON interface-type-list
  shift token (then go to state 749)
Conflict at state: 555, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 556, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 557, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 558, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 562, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 564, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 565, token: SEMICOLON
  reduce by rule: enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
  shift token (then go to state 766)
Conflict at state: 569, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 571, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 573, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 574, token: SEMICOLON
  reduce by rule: enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
  shift token (then go to state 775)
Conflict at state: 578, token: SEMICOLON
  reduce by rule: struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
  shift token (then go to state 779)
Conflict at state: 581, token: COMMA
  reduce by rule: struct-interfaces -> COLON interface-type-list
  shift token (then go to state 749)
Conflict at state: 583, token: SEMICOLON
  reduce by rule: interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
  shift token (then go to state 795)
Conflict at state: 586, token: COMMA
  reduce by rule: interface-base -> COLON interface-type-list
  shift token (then go to state 749)
Conflict at state: 588, token: SEMICOLON
  reduce by rule: enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
  shift token (then go to state 808)
Conflict at state: 600, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 52)
Conflict at state: 600, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 210)
Conflict at state: 600, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 209)
Conflict at state: 600, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 49)
Conflict at state: 600, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 48)
Conflict at state: 600, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 47)
Conflict at state: 600, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 46)
Conflict at state: 600, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 45)
Conflict at state: 600, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 44)
Conflict at state: 600, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 43)
Conflict at state: 600, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 42)
Conflict at state: 600, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 41)
Conflict at state: 600, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 40)
Conflict at state: 600, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 39)
Conflict at state: 600, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 38)
Conflict at state: 600, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 85)
Conflict at state: 609, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 609, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 609, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 609, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 609, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 609, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 609, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 609, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 610, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 610, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 610, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 610, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 610, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 610, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 610, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 610, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 620, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 620, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 620, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 620, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 620, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 620, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 620, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 620, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 629, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 629, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 629, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 629, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 629, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 630, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 630, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 630, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 630, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 630, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 635, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 635, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 635, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 635, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 635, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 635, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 635, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 635, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 635, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 635, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 635, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 635, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 635, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 635, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 635, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 635, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 635, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 635, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 635, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 635, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 635, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 635, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 635, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 635, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 635, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 635, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 635, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 635, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 635, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 635, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 635, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 635, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 635, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 635, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 635, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 635, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 635, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 635, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 635, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 635, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 635, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 635, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 635, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 635, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 635, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 635, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 635, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 635, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 635, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 635, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 641, token: OPEN_BRACE
  reduce by rule: delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 258)
Conflict at state: 643, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 643, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 643, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 643, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 643, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 643, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 643, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 643, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 644, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 644, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 644, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 644, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 644, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 646, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 646, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 646, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 646, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 646, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 647, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 647, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 647, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 647, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 647, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 647, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 647, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 647, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 648, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 846)
Conflict at state: 648, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 648, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 648, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 648, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 651, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 651, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 651, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 651, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 651, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 850)
Conflict at state: 651, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 651, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 651, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 651, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 652, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 652, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 652, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 652, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 657, token: COLON
  reduce by rule: conditional-expression -> conditional-or-expression INTERR expression
  shift token (then go to state 854)
Conflict at state: 658, token: OP_AND
  reduce by rule: conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression
  shift token (then go to state 492)
Conflict at state: 660, token: BITWISE_OR
  reduce by rule: conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression
  shift token (then go to state 493)
Conflict at state: 661, token: CARET
  reduce by rule: inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression
  shift token (then go to state 494)
Conflict at state: 662, token: AMP
  reduce by rule: exclusive-or-expression -> exclusive-or-expression CARET and-expression
  shift token (then go to state 495)
Conflict at state: 663, token: OP_EQ
  reduce by rule: and-expression -> and-expression AMP equality-expression
  shift token (then go to state 496)
Conflict at state: 663, token: OP_NE
  reduce by rule: and-expression -> and-expression AMP equality-expression
  shift token (then go to state 497)
Conflict at state: 664, token: OP_COALESCING
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 502)
Conflict at state: 664, token: AS
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 504)
Conflict at state: 664, token: IS
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 503)
Conflict at state: 664, token: OP_GE
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 501)
Conflict at state: 664, token: OP_LE
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 500)
Conflict at state: 664, token: GT
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 499)
Conflict at state: 664, token: LT
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 498)
Conflict at state: 665, token: OP_COALESCING
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 502)
Conflict at state: 665, token: AS
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 504)
Conflict at state: 665, token: IS
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 503)
Conflict at state: 665, token: OP_GE
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 501)
Conflict at state: 665, token: OP_LE
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 500)
Conflict at state: 665, token: GT
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 499)
Conflict at state: 665, token: LT
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 498)
Conflict at state: 666, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression LT shift-expression
  shift token (then go to state 505)
Conflict at state: 666, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression LT shift-expression
  shift token (then go to state 506)
Conflict at state: 667, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression GT shift-expression
  shift token (then go to state 505)
Conflict at state: 667, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression GT shift-expression
  shift token (then go to state 506)
Conflict at state: 668, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_LE shift-expression
  shift token (then go to state 505)
Conflict at state: 668, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_LE shift-expression
  shift token (then go to state 506)
Conflict at state: 669, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_GE shift-expression
  shift token (then go to state 505)
Conflict at state: 669, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_GE shift-expression
  shift token (then go to state 506)
Conflict at state: 670, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_COALESCING shift-expression
  shift token (then go to state 505)
Conflict at state: 670, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_COALESCING shift-expression
  shift token (then go to state 506)
Conflict at state: 671, token: OPEN_BRACKET
  reduce by rule: relational-expression -> relational-expression IS type
  shift token (then go to state 229)
Conflict at state: 672, token: OPEN_BRACKET
  reduce by rule: relational-expression -> relational-expression AS type
  shift token (then go to state 229)
Conflict at state: 673, token: OP_COALESCING
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 509)
Conflict at state: 673, token: OP_PTR
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 508)
Conflict at state: 673, token: MINUS
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 510)
Conflict at state: 673, token: PLUS
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 507)
Conflict at state: 674, token: OP_COALESCING
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 509)
Conflict at state: 674, token: OP_PTR
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 508)
Conflict at state: 674, token: MINUS
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 510)
Conflict at state: 674, token: PLUS
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 507)
Conflict at state: 675, token: STAR
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 511)
Conflict at state: 675, token: DIV
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 512)
Conflict at state: 675, token: PERCENT
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 513)
Conflict at state: 676, token: STAR
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 511)
Conflict at state: 676, token: DIV
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 512)
Conflict at state: 676, token: PERCENT
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 513)
Conflict at state: 677, token: STAR
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 511)
Conflict at state: 677, token: DIV
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 512)
Conflict at state: 677, token: PERCENT
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 513)
Conflict at state: 678, token: STAR
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 511)
Conflict at state: 678, token: DIV
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 512)
Conflict at state: 678, token: PERCENT
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 513)
Conflict at state: 687, token: COMMA
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 687, token: CLOSE_BRACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 687, token: OPEN_BRACKET
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 687, token: OPEN_PARENS
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 687, token: OPEN_BRACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 687, token: SEMICOLON
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 688, token: COMMA
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 688, token: CLOSE_BRACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 688, token: OPEN_BRACKET
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 688, token: OPEN_PARENS
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 688, token: OPEN_BRACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 688, token: SEMICOLON
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 691, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 691, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 691, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 691, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 691, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 691, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 702, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 867)
Conflict at state: 702, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 211)
Conflict at state: 704, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 704, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 704, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 704, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 704, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 704, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 704, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 704, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 704, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 704, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 704, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 704, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 704, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 704, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 704, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 704, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 704, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 704, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 704, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 704, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 704, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 704, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 704, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 704, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 704, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 704, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 704, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 704, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 704, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 704, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 704, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 704, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 704, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 704, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 704, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 704, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 704, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 704, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 704, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 704, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 704, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 704, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 704, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 704, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 704, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 704, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 704, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 704, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 704, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 704, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 704, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 704, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 704, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 704, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 704, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 704, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 704, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 704, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 704, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 56)
Conflict at state: 705, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 705, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 705, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 705, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 705, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 705, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 705, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 705, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 706, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 706, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 706, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 706, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 706, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 706, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 706, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 706, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 706, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 706, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 706, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 706, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 706, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 706, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 706, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 706, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 706, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 706, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 706, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 706, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 706, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 706, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 706, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 706, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 706, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 706, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 706, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 706, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 706, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 706, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 706, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 706, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 706, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 706, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 706, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 706, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 706, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 706, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 706, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 706, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 706, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 706, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 706, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 706, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 706, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 706, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 706, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 706, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 706, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 706, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 706, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 706, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 706, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 706, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 706, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 706, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 706, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 706, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 706, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 56)
Conflict at state: 707, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 707, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 707, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 707, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 707, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 229)
Conflict at state: 707, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 707, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 707, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 707, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 708, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 708, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 708, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 708, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 708, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 708, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 708, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 708, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 708, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 708, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 708, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 708, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 708, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 708, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 708, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 708, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 708, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 708, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 708, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 708, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 708, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 708, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 708, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 708, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 708, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 708, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 708, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 708, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 708, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 708, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 708, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 708, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 708, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 708, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 708, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 708, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 708, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 708, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 708, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 708, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 708, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 708, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 708, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 708, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 708, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 708, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 708, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 708, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 708, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 708, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 708, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 708, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 708, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 708, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 708, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 708, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 708, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 708, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 708, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 56)
Conflict at state: 711, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: DIV
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: PERCENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_LEFT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: RIGHT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_EQ
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_NE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: CARET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_AND
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: BITWISE_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: AMP
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: AS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: IS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_GE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_LE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: GT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: LT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 711, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 712, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 712, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 712, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 712, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 712, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 712, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 712, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 712, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 712, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 712, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 712, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 712, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 712, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 712, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 712, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 712, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 712, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 712, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 712, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 712, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 712, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 712, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 712, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 712, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 712, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 712, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 712, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 712, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 712, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 712, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 712, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 712, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 712, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 712, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 712, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 712, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 712, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 712, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 712, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 712, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 712, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 712, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 712, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 712, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 712, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 712, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 712, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 712, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 712, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 712, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 712, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 712, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 712, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 712, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 712, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 712, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 712, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 712, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 746, token: SEMICOLON
  reduce by rule: class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
  shift token (then go to state 916)
Conflict at state: 751, token: SEMICOLON
  reduce by rule: class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
  shift token (then go to state 927)
Conflict at state: 754, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 756, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 758, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 759, token: SEMICOLON
  reduce by rule: enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
  shift token (then go to state 935)
Conflict at state: 762, token: SEMICOLON
  reduce by rule: struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
  shift token (then go to state 938)
Conflict at state: 764, token: SEMICOLON
  reduce by rule: interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
  shift token (then go to state 940)
Conflict at state: 767, token: SEMICOLON
  reduce by rule: enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
  shift token (then go to state 942)
Conflict at state: 769, token: SEMICOLON
  reduce by rule: class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
  shift token (then go to state 945)
Conflict at state: 771, token: SEMICOLON
  reduce by rule: struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
  shift token (then go to state 947)
Conflict at state: 773, token: SEMICOLON
  reduce by rule: interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
  shift token (then go to state 949)
Conflict at state: 776, token: SEMICOLON
  reduce by rule: enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
  shift token (then go to state 951)
Conflict at state: 794, token: SEMICOLON
  reduce by rule: struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
  shift token (then go to state 957)
Conflict at state: 807, token: SEMICOLON
  reduce by rule: interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
  shift token (then go to state 968)
Conflict at state: 811, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 811, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 811, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 811, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 811, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 811, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 811, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 811, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 813, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 822, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 822, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 822, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 822, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 822, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 822, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 822, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 822, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 827, token: SEMICOLON
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 827, token: COMMA
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 828, token: SEMICOLON
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 828, token: COMMA
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 832, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 832, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 832, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 832, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 832, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 833, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 833, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 833, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 833, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 833, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 833, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 833, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 833, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 833, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 833, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 833, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 833, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 833, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 833, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 833, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 833, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 833, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 833, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 833, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 833, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 833, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 833, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 833, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 833, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 833, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 833, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 833, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 833, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 833, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 833, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 833, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 833, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 833, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 833, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 833, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 833, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 833, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 833, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 833, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 833, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 833, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 833, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 833, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 833, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 833, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 833, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 833, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 833, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 833, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 834, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 237)
Conflict at state: 834, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 983)
Conflict at state: 834, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 834, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 237)
Conflict at state: 834, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 983)
Conflict at state: 834, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 834, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 834, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 836, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
  shift token (then go to state 258)
Conflict at state: 837, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
  shift token (then go to state 258)
Conflict at state: 838, token: OPEN_BRACE
  reduce by rule: delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS
  shift token (then go to state 258)
Conflict at state: 841, token: ELSE
  reduce by rule: if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
  shift token (then go to state 987)
Conflict at state: 846, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 846, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 846, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 846, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 846, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 849, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 995)
Conflict at state: 849, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 849, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 849, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 849, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 850, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 997)
Conflict at state: 850, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 850, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 850, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 850, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 853, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 853, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 853, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 853, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 853, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 853, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 853, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 853, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 854, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 854, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 854, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 854, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 854, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 854, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 854, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 854, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 854, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 854, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 210)
Conflict at state: 854, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 854, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 854, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 854, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 854, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 854, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 854, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 854, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 854, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 854, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 854, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 854, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 854, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 283)
Conflict at state: 854, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 282)
Conflict at state: 854, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 854, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 171)
Conflict at state: 854, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 854, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 170)
Conflict at state: 854, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 854, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 854, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 854, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 854, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 854, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 854, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 854, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 854, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 854, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 854, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 854, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 854, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 854, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 854, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 854, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 854, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 854, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 854, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 235)
Conflict at state: 854, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 854, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 854, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 168)
Conflict at state: 854, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 854, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 854, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 854, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 854, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 854, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 854, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 854, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 856, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 856, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 856, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 856, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 856, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1003)
Conflict at state: 856, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 856, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 856, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 856, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 857, token: OPEN_BRACKET
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
  shift token (then go to state 229)
Conflict at state: 857, token: OPEN_BRACE
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
  shift token (then go to state 517)
Conflict at state: 859, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 859, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 859, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 859, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 859, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1006)
Conflict at state: 859, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 859, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 859, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 859, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 860, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 860, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 860, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 860, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 860, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 860, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 861, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 861, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 861, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 861, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 861, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 861, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 864, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 864, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 864, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 864, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 864, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 864, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 864, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 864, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 867, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 867, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 867, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 867, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 867, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 867, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 867, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 867, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 876, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 876, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 876, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 876, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 876, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 876, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 876, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 876, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 877, token: OPEN_BRACE
  reduce by rule: cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
  shift token (then go to state 56)
Conflict at state: 904, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 1044)
Conflict at state: 918, token: COMMA
  reduce by rule: class-base -> COLON type-with-interr COMMA interface-type-list
  shift token (then go to state 749)
Conflict at state: 920, token: COMMA
  reduce by rule: where-unit -> WHERE type-name COLON where-names
  shift token (then go to state 1061)
Conflict at state: 922, token: COMMA
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 922, token: OPEN_BRACE
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 922, token: WHERE
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 922, token: SEMICOLON
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 922, token: STAR
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 922, token: OPEN_BRACKET
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 928, token: SEMICOLON
  reduce by rule: class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
  shift token (then go to state 1063)
Conflict at state: 929, token: SEMICOLON
  reduce by rule: class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
  shift token (then go to state 1064)
Conflict at state: 931, token: SEMICOLON
  reduce by rule: struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
  shift token (then go to state 1066)
Conflict at state: 933, token: SEMICOLON
  reduce by rule: interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
  shift token (then go to state 1068)
Conflict at state: 936, token: SEMICOLON
  reduce by rule: enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
  shift token (then go to state 1070)
Conflict at state: 939, token: SEMICOLON
  reduce by rule: struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
  shift token (then go to state 1073)
Conflict at state: 941, token: SEMICOLON
  reduce by rule: interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
  shift token (then go to state 1074)
Conflict at state: 943, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 946, token: SEMICOLON
  reduce by rule: class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
  shift token (then go to state 1077)
Conflict at state: 948, token: SEMICOLON
  reduce by rule: struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
  shift token (then go to state 1078)
Conflict at state: 950, token: SEMICOLON
  reduce by rule: interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
  shift token (then go to state 1079)
Conflict at state: 952, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 954, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 954, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 954, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 954, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 954, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 972, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 972, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 972, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 972, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 972, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 972, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 972, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 972, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 974, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 981, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 237)
Conflict at state: 981, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 983)
Conflict at state: 981, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 981, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 237)
Conflict at state: 981, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 983)
Conflict at state: 981, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 981, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 981, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 982, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
  shift token (then go to state 258)
Conflict at state: 983, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 987, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 987, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 987, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 987, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 987, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 991, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 991, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 991, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 991, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 991, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 991, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 991, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 356)
Conflict at state: 991, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 991, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 991, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 991, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 991, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 991, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 991, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 991, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 991, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 51)
Conflict at state: 991, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 991, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 991, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 991, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 991, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 991, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 994, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 994, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 994, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 994, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 994, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 995, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 995, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 995, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 995, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 995, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 997, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 997, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 997, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 997, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 997, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 999, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1113)
Conflict at state: 999, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 999, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 999, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 999, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1004, token: OPEN_BRACKET
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
  shift token (then go to state 229)
Conflict at state: 1004, token: OPEN_BRACE
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
  shift token (then go to state 517)
Conflict at state: 1046, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1046, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1046, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1046, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1046, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 517)
Conflict at state: 1046, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 1046, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 1046, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 1046, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 1065, token: SEMICOLON
  reduce by rule: class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
  shift token (then go to state 1203)
Conflict at state: 1067, token: SEMICOLON
  reduce by rule: struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
  shift token (then go to state 1204)
Conflict at state: 1069, token: SEMICOLON
  reduce by rule: interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
  shift token (then go to state 1205)
Conflict at state: 1071, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1076, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1081, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1100, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
  shift token (then go to state 258)
Conflict at state: 1102, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1102, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 1106, token: DEFAULT
  reduce by rule: switch-section -> switch-labels statement-list
  shift token (then go to state 42)
Conflict at state: 1106, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 1106, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 1106, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 1106, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 1106, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 1106, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 1106, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 1106, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 43)
Conflict at state: 1106, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 44)
Conflict at state: 1106, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 1106, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 1106, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 1106, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 48)
Conflict at state: 1106, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 49)
Conflict at state: 1106, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 50)
Conflict at state: 1106, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 51)
Conflict at state: 1106, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 52)
Conflict at state: 1106, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1106, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1106, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1106, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1106, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1110, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 1110, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1110, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1110, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1110, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1112, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 1112, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1112, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1112, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1112, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1113, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 1113, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1113, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1113, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1113, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1115, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 1115, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1115, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1115, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1115, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1116, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1116, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1116, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1116, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1116, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1239)
Conflict at state: 1116, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 1116, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 1116, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 1116, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 1147, token: OPEN_PARENS
  reduce by rule: overloadable-binary-operator -> MINUS
  reduce by rule: overloadable-unary-operator -> MINUS
Conflict at state: 1150, token: OPEN_PARENS
  reduce by rule: overloadable-binary-operator -> PLUS
  reduce by rule: overloadable-unary-operator -> PLUS
Conflict at state: 1170, token: OPEN_BRACE
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 56)
Conflict at state: 1170, token: SEMICOLON
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 912)
Conflict at state: 1174, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1207, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1212, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1237, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 1237, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1237, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1237, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1237, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1248, token: OPEN_BRACE
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 56)
Conflict at state: 1248, token: SEMICOLON
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 912)
Conflict at state: 1250, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1259, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1270, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1297, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1304, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1313, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1321, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1329, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1335, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1353, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1353, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1353, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1353, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1353, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1394)
Conflict at state: 1353, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 1353, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 1353, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 1353, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 1354, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 156)
Conflict at state: 1354, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1354, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1354, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1354, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1396)
Conflict at state: 1354, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 1354, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 157)
Conflict at state: 1354, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 158)
Conflict at state: 1354, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 1366, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1369, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1375, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1380, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)
Conflict at state: 1388, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1422)
Conflict at state: 1390, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1424)
Conflict at state: 1412, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 364)

4446 Conflict(s) found in grammar.
Done.
